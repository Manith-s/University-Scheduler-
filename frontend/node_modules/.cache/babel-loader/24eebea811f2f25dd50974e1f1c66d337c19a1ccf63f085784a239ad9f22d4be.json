{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Documents\\\\Master's Colleges\\\\UNIVERSITY OF DELAWARE\\\\COURSES\\\\Project\\\\university-scheduler\\\\frontend\\\\src\\\\components\\\\admin\\\\programs\\\\ProgramList.tsx\",\n  _s = $RefreshSig$();\n// src/components/admin/programs/ProgramList.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, FormControl, InputLabel, Select, MenuItem, TextField, InputAdornment, CircularProgress, Alert, Snackbar } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useNavigate } from 'react-router-dom';\n//import DataTable from '../../common/DataTable';\n//import ConfirmDialog from '../../common/ConfirmDialog';\nimport DataTable from '../../../components/common/DataTable';\nimport ConfirmDialog from '../../../components/common/ConfirmDialog';\n\n// Mock data functions (replace with actual API calls later)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fetchDepartments = async () => {\n  // This would be an API call to get departments\n  return [{\n    id: 'DEPT-001',\n    department_id: 'DEPT-001',\n    name: 'Computer Science',\n    description: 'CS Department'\n  }, {\n    id: 'DEPT-002',\n    department_id: 'DEPT-002',\n    name: 'Economics',\n    description: 'Economics Department'\n  }, {\n    id: 'DEPT-003',\n    department_id: 'DEPT-003',\n    name: 'Mathematics',\n    description: 'Mathematics Department'\n  }, {\n    id: 'DEPT-004',\n    department_id: 'DEPT-004',\n    name: 'Physics',\n    description: 'Physics Department'\n  }, {\n    id: 'DEPT-005',\n    department_id: 'DEPT-005',\n    name: 'Business Administration',\n    description: 'Business Administration Department'\n  }];\n};\nconst fetchPrograms = async departmentId => {\n  // This would be an API call to get programs for a specific department\n  const programsMap = {\n    'DEPT-001': [{\n      id: 'PROG-001',\n      program_id: 'PROG-001',\n      name: 'Bachelor of Science in Computer Science',\n      description: 'BS in CS program'\n    }, {\n      id: 'PROG-002',\n      program_id: 'PROG-002',\n      name: 'Master of Science in Computer Science',\n      description: 'MS in CS program'\n    }],\n    'DEPT-002': [{\n      id: 'PROG-003',\n      program_id: 'PROG-003',\n      name: 'Bachelor of Economics',\n      description: 'Economics undergraduate program'\n    }, {\n      id: 'PROG-004',\n      program_id: 'PROG-004',\n      name: 'Master of Economics',\n      description: 'Economics graduate program'\n    }],\n    'DEPT-003': [{\n      id: 'PROG-005',\n      program_id: 'PROG-005',\n      name: 'Bachelor of Mathematics',\n      description: 'Mathematics undergraduate program'\n    }, {\n      id: 'PROG-006',\n      program_id: 'PROG-006',\n      name: 'Master of Mathematics',\n      description: 'Mathematics graduate program'\n    }],\n    'DEPT-004': [{\n      id: 'PROG-007',\n      program_id: 'PROG-007',\n      name: 'Bachelor of Physics',\n      description: 'Physics undergraduate program'\n    }, {\n      id: 'PROG-008',\n      program_id: 'PROG-008',\n      name: 'Master of Physics',\n      description: 'Physics graduate program'\n    }],\n    'DEPT-005': [{\n      id: 'PROG-009',\n      program_id: 'PROG-009',\n      name: 'Bachelor of Business Administration',\n      description: 'BBA program'\n    }, {\n      id: 'PROG-010',\n      program_id: 'PROG-010',\n      name: 'Master of Business Administration',\n      description: 'MBA program'\n    }]\n  };\n  return programsMap[departmentId] || [];\n};\nconst deletePrograms = async ids => {\n  console.log('Deleting programs:', ids);\n  return {\n    success: true,\n    message: 'Programs deleted successfully'\n  };\n};\nconst ProgramList = () => {\n  _s();\n  var _departments$find;\n  const navigate = useNavigate();\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [programs, setPrograms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [programsToDelete, setProgramsToDelete] = useState([]);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const columns = [{\n    id: 'program_id',\n    label: 'ID',\n    minWidth: 100\n  }, {\n    id: 'name',\n    label: 'Name',\n    minWidth: 170\n  }, {\n    id: 'description',\n    label: 'Description',\n    minWidth: 200\n  }];\n  useEffect(() => {\n    const loadDepartments = async () => {\n      try {\n        const data = await fetchDepartments();\n        setDepartments(data);\n      } catch (error) {\n        console.error('Error loading departments:', error);\n        setSnackbar({\n          open: true,\n          message: 'Failed to load departments',\n          severity: 'error'\n        });\n      }\n    };\n    loadDepartments();\n  }, []);\n  useEffect(() => {\n    if (selectedDepartment) {\n      loadPrograms(selectedDepartment);\n    } else {\n      setPrograms([]);\n    }\n  }, [selectedDepartment]);\n  const loadPrograms = async departmentId => {\n    try {\n      setLoading(true);\n      const data = await fetchPrograms(departmentId);\n      setPrograms(data);\n    } catch (error) {\n      console.error('Error loading programs:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to load programs',\n        severity: 'error'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDepartmentChange = event => {\n    setSelectedDepartment(event.target.value);\n  };\n  const handleAddProgram = () => {\n    if (selectedDepartment) {\n      navigate(`/admin/programs/new?departmentId=${selectedDepartment}`);\n    } else {\n      setSnackbar({\n        open: true,\n        message: 'Please select a department first',\n        severity: 'error'\n      });\n    }\n  };\n  const handleEditProgram = id => {\n    navigate(`/admin/programs/${id}/edit`);\n  };\n  const handleDeleteClick = ids => {\n    const idsArray = Array.isArray(ids) ? ids : [ids];\n    setProgramsToDelete(idsArray);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteConfirm = async () => {\n    try {\n      const result = await deletePrograms(programsToDelete);\n      if (result.success) {\n        // Remove deleted programs from state\n        setPrograms(programs.filter(prog => !programsToDelete.includes(prog.id)));\n        setSnackbar({\n          open: true,\n          message: result.message,\n          severity: 'success'\n        });\n      } else {\n        setSnackbar({\n          open: true,\n          message: result.message || 'Failed to delete programs',\n          severity: 'error'\n        });\n      }\n    } catch (error) {\n      console.error('Error deleting programs:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to delete programs',\n        severity: 'error'\n      });\n    } finally {\n      setDeleteDialogOpen(false);\n      setProgramsToDelete([]);\n    }\n  };\n  const handleRowClick = id => {\n    navigate(`/admin/programs/${id}`);\n  };\n\n  // Filter programs based on search term\n  const filteredPrograms = programs.filter(program => program.program_id.toLowerCase().includes(searchTerm.toLowerCase()) || program.name.toLowerCase().includes(searchTerm.toLowerCase()) || program.description.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Programs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 22\n        }, this),\n        onClick: handleAddProgram,\n        sx: {\n          bgcolor: '#00539F'\n        },\n        disabled: !selectedDepartment,\n        children: \"Add Program\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"department-select-label\",\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"department-select-label\",\n          id: \"department-select\",\n          value: selectedDepartment,\n          label: \"Select Department\",\n          onChange: handleDepartmentChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Please select a department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), departments.map(dept => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: dept.department_id,\n            children: dept.name\n          }, dept.department_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        placeholder: \"Search programs...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)\n        },\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !selectedDepartment ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          py: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"text.secondary\",\n          children: \"Please select a department to view programs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }, this) : filteredPrograms.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          py: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"text.secondary\",\n          children: \"No programs found for this department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n        columns: columns,\n        data: filteredPrograms,\n        title: `Programs - ${((_departments$find = departments.find(d => d.department_id === selectedDepartment)) === null || _departments$find === void 0 ? void 0 : _departments$find.name) || ''}`,\n        onEdit: handleEditProgram,\n        onDelete: handleDeleteClick,\n        onRowClick: handleRowClick,\n        selectable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      open: deleteDialogOpen,\n      title: \"Delete Program\",\n      message: `Are you sure you want to delete ${programsToDelete.length > 1 ? 'these programs' : 'this program'}? This action cannot be undone.`,\n      onConfirm: handleDeleteConfirm,\n      onCancel: () => setDeleteDialogOpen(false),\n      confirmText: \"Delete\",\n      severity: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSnackbar({\n          ...snackbar,\n          open: false\n        }),\n        severity: snackbar.severity,\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgramList, \"RN2jptejQhW9zH7EwjE9stjHL98=\", false, function () {\n  return [useNavigate];\n});\n_c = ProgramList;\nexport default ProgramList;\nvar _c;\n$RefreshReg$(_c, \"ProgramList\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","FormControl","InputLabel","Select","MenuItem","TextField","InputAdornment","CircularProgress","Alert","Snackbar","AddIcon","SearchIcon","useNavigate","DataTable","ConfirmDialog","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchDepartments","id","department_id","name","description","fetchPrograms","departmentId","programsMap","program_id","deletePrograms","ids","console","log","success","message","ProgramList","_s","_departments$find","navigate","departments","setDepartments","selectedDepartment","setSelectedDepartment","programs","setPrograms","loading","setLoading","searchTerm","setSearchTerm","deleteDialogOpen","setDeleteDialogOpen","programsToDelete","setProgramsToDelete","snackbar","setSnackbar","open","severity","columns","label","minWidth","loadDepartments","data","error","loadPrograms","handleDepartmentChange","event","target","value","handleAddProgram","handleEditProgram","handleDeleteClick","idsArray","Array","isArray","handleDeleteConfirm","result","filter","prog","includes","handleRowClick","filteredPrograms","program","toLowerCase","children","sx","display","justifyContent","alignItems","mb","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","startIcon","onClick","bgcolor","disabled","fullWidth","labelId","onChange","map","dept","placeholder","e","InputProps","startAdornment","position","my","textAlign","py","length","title","find","d","onEdit","onDelete","onRowClick","selectable","onConfirm","onCancel","confirmText","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["C:/Users/shash/Documents/Master's Colleges/UNIVERSITY OF DELAWARE/COURSES/Project/university-scheduler/frontend/src/components/admin/programs/ProgramList.tsx"],"sourcesContent":["// src/components/admin/programs/ProgramList.tsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  Box, \r\n  Button, \r\n  Typography, \r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  InputAdornment,\r\n  CircularProgress,\r\n  Alert,\r\n  Snackbar,\r\n  SelectChangeEvent\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { useNavigate } from 'react-router-dom';\r\n//import DataTable from '../../common/DataTable';\r\n//import ConfirmDialog from '../../common/ConfirmDialog';\r\nimport DataTable from '../../../components/common/DataTable';\r\nimport ConfirmDialog from '../../../components/common/ConfirmDialog';\r\n\r\n// Mock data functions (replace with actual API calls later)\r\nconst fetchDepartments = async () => {\r\n  // This would be an API call to get departments\r\n  return [\r\n    { id: 'DEPT-001', department_id: 'DEPT-001', name: 'Computer Science', description: 'CS Department' },\r\n    { id: 'DEPT-002', department_id: 'DEPT-002', name: 'Economics', description: 'Economics Department' },\r\n    { id: 'DEPT-003', department_id: 'DEPT-003', name: 'Mathematics', description: 'Mathematics Department' },\r\n    { id: 'DEPT-004', department_id: 'DEPT-004', name: 'Physics', description: 'Physics Department' },\r\n    { id: 'DEPT-005', department_id: 'DEPT-005', name: 'Business Administration', description: 'Business Administration Department' },\r\n  ];\r\n};\r\n\r\nconst fetchPrograms = async (departmentId: string) => {\r\n  // This would be an API call to get programs for a specific department\r\n  const programsMap: { [key: string]: any[] } = {\r\n    'DEPT-001': [\r\n      { id: 'PROG-001', program_id: 'PROG-001', name: 'Bachelor of Science in Computer Science', description: 'BS in CS program' },\r\n      { id: 'PROG-002', program_id: 'PROG-002', name: 'Master of Science in Computer Science', description: 'MS in CS program' }\r\n    ],\r\n    'DEPT-002': [\r\n      { id: 'PROG-003', program_id: 'PROG-003', name: 'Bachelor of Economics', description: 'Economics undergraduate program' },\r\n      { id: 'PROG-004', program_id: 'PROG-004', name: 'Master of Economics', description: 'Economics graduate program' }\r\n    ],\r\n    'DEPT-003': [\r\n      { id: 'PROG-005', program_id: 'PROG-005', name: 'Bachelor of Mathematics', description: 'Mathematics undergraduate program' },\r\n      { id: 'PROG-006', program_id: 'PROG-006', name: 'Master of Mathematics', description: 'Mathematics graduate program' }\r\n    ],\r\n    'DEPT-004': [\r\n      { id: 'PROG-007', program_id: 'PROG-007', name: 'Bachelor of Physics', description: 'Physics undergraduate program' },\r\n      { id: 'PROG-008', program_id: 'PROG-008', name: 'Master of Physics', description: 'Physics graduate program' }\r\n    ],\r\n    'DEPT-005': [\r\n      { id: 'PROG-009', program_id: 'PROG-009', name: 'Bachelor of Business Administration', description: 'BBA program' },\r\n      { id: 'PROG-010', program_id: 'PROG-010', name: 'Master of Business Administration', description: 'MBA program' }\r\n    ]\r\n  };\r\n  \r\n  return programsMap[departmentId] || [];\r\n};\r\n\r\nconst deletePrograms = async (ids: string[]) => {\r\n  console.log('Deleting programs:', ids);\r\n  return { success: true, message: 'Programs deleted successfully' };\r\n};\r\n\r\nconst ProgramList: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [departments, setDepartments] = useState<any[]>([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState<string>('');\r\n  const [programs, setPrograms] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [programsToDelete, setProgramsToDelete] = useState<string[]>([]);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' as 'success' | 'error' });\r\n\r\n  const columns = [\r\n    { id: 'program_id', label: 'ID', minWidth: 100 },\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'description', label: 'Description', minWidth: 200 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const loadDepartments = async () => {\r\n      try {\r\n        const data = await fetchDepartments();\r\n        setDepartments(data);\r\n      } catch (error) {\r\n        console.error('Error loading departments:', error);\r\n        setSnackbar({\r\n          open: true,\r\n          message: 'Failed to load departments',\r\n          severity: 'error'\r\n        });\r\n      }\r\n    };\r\n\r\n    loadDepartments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedDepartment) {\r\n      loadPrograms(selectedDepartment);\r\n    } else {\r\n      setPrograms([]);\r\n    }\r\n  }, [selectedDepartment]);\r\n\r\n  const loadPrograms = async (departmentId: string) => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await fetchPrograms(departmentId);\r\n      setPrograms(data);\r\n    } catch (error) {\r\n      console.error('Error loading programs:', error);\r\n      setSnackbar({\r\n        open: true,\r\n        message: 'Failed to load programs',\r\n        severity: 'error'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDepartmentChange = (event: SelectChangeEvent) => {\r\n    setSelectedDepartment(event.target.value);\r\n  };\r\n\r\n  const handleAddProgram = () => {\r\n    if (selectedDepartment) {\r\n      navigate(`/admin/programs/new?departmentId=${selectedDepartment}`);\r\n    } else {\r\n      setSnackbar({\r\n        open: true,\r\n        message: 'Please select a department first',\r\n        severity: 'error'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditProgram = (id: string) => {\r\n    navigate(`/admin/programs/${id}/edit`);\r\n  };\r\n\r\n  const handleDeleteClick = (ids: string | string[]) => {\r\n    const idsArray = Array.isArray(ids) ? ids : [ids];\r\n    setProgramsToDelete(idsArray);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    try {\r\n      const result = await deletePrograms(programsToDelete);\r\n      \r\n      if (result.success) {\r\n        // Remove deleted programs from state\r\n        setPrograms(programs.filter(\r\n          prog => !programsToDelete.includes(prog.id)\r\n        ));\r\n        \r\n        setSnackbar({\r\n          open: true,\r\n          message: result.message,\r\n          severity: 'success'\r\n        });\r\n      } else {\r\n        setSnackbar({\r\n          open: true,\r\n          message: result.message || 'Failed to delete programs',\r\n          severity: 'error'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting programs:', error);\r\n      setSnackbar({\r\n        open: true,\r\n        message: 'Failed to delete programs',\r\n        severity: 'error'\r\n      });\r\n    } finally {\r\n      setDeleteDialogOpen(false);\r\n      setProgramsToDelete([]);\r\n    }\r\n  };\r\n\r\n  const handleRowClick = (id: string) => {\r\n    navigate(`/admin/programs/${id}`);\r\n  };\r\n\r\n  // Filter programs based on search term\r\n  const filteredPrograms = programs.filter(program => \r\n    program.program_id.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    program.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    program.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          Programs\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddProgram}\r\n          sx={{ bgcolor: '#00539F' }}\r\n          disabled={!selectedDepartment}\r\n        >\r\n          Add Program\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box sx={{ mb: 4 }}>\r\n        <FormControl fullWidth sx={{ mb: 3 }}>\r\n          <InputLabel id=\"department-select-label\">Select Department</InputLabel>\r\n          <Select\r\n            labelId=\"department-select-label\"\r\n            id=\"department-select\"\r\n            value={selectedDepartment}\r\n            label=\"Select Department\"\r\n            onChange={handleDepartmentChange}\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>Please select a department</em>\r\n            </MenuItem>\r\n            {departments.map((dept) => (\r\n              <MenuItem key={dept.department_id} value={dept.department_id}>\r\n                {dept.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          placeholder=\"Search programs...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          sx={{ mb: 2 }}\r\n        />\r\n      </Box>\r\n\r\n      {loading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          {!selectedDepartment ? (\r\n            <Box sx={{ textAlign: 'center', py: 4 }}>\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                Please select a department to view programs\r\n              </Typography>\r\n            </Box>\r\n          ) : filteredPrograms.length === 0 ? (\r\n            <Box sx={{ textAlign: 'center', py: 4 }}>\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                No programs found for this department\r\n              </Typography>\r\n            </Box>\r\n          ) : (\r\n            <DataTable\r\n              columns={columns}\r\n              data={filteredPrograms}\r\n              title={`Programs - ${departments.find(d => d.department_id === selectedDepartment)?.name || ''}`}\r\n              onEdit={handleEditProgram}\r\n              onDelete={handleDeleteClick}\r\n              onRowClick={handleRowClick}\r\n              selectable\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <ConfirmDialog\r\n        open={deleteDialogOpen}\r\n        title=\"Delete Program\"\r\n        message={`Are you sure you want to delete ${programsToDelete.length > 1 \r\n          ? 'these programs' \r\n          : 'this program'}? This action cannot be undone.`}\r\n        onConfirm={handleDeleteConfirm}\r\n        onCancel={() => setDeleteDialogOpen(false)}\r\n        confirmText=\"Delete\"\r\n        severity=\"error\"\r\n      />\r\n\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProgramList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}