{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Documents\\\\Master's Colleges\\\\UNIVERSITY OF DELAWARE\\\\COURSES\\\\Project\\\\university-scheduler\\\\frontend\\\\src\\\\components\\\\admin\\\\courses\\\\CourseForm.tsx\",\n  _s = $RefreshSig$();\n// src/components/admin/courses/CourseForm.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, Paper, Grid, Snackbar, Alert, Checkbox, CircularProgress, Breadcrumbs, Link as MuiLink, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Switch } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { Link, useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { TextInput, NumberInput } from '../../../components/common/FormComponents';\n\n// Import services\n\nimport programService from '../../../services/programService';\nimport courseService from '../../../services/courseService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CourseForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    id\n  } = useParams();\n  const isEditing = Boolean(id);\n\n  // Get programId from query param if present (for new courses)\n  const queryParams = new URLSearchParams(location.search);\n  const initialProgramId = queryParams.get('programId') || '';\n  const [programs, setPrograms] = useState([]);\n  const [course, setCourse] = useState({\n    course_id: '',\n    program_id: initialProgramId,\n    department_id: '',\n    // Initialize with empty string\n    name: '',\n    description: '',\n    duration_minutes: 55,\n    is_core: false,\n    semesters: []\n  });\n  const [loading, setLoading] = useState(isEditing);\n  const [saving, setSaving] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  useEffect(() => {\n    const loadPrograms = async () => {\n      try {\n        const data = await programService.getAllPrograms();\n        setPrograms(data);\n\n        // If we have programs and an initialProgramId, set the department_id\n        if (data.length > 0 && initialProgramId) {\n          const selectedProgram = data.find(p => p.program_id === initialProgramId);\n          if (selectedProgram) {\n            setCourse(prevCourse => ({\n              ...prevCourse,\n              department_id: selectedProgram.department_id\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('Error loading programs:', error);\n        setSnackbar({\n          open: true,\n          message: 'Failed to load programs',\n          severity: 'error'\n        });\n      }\n    };\n    loadPrograms();\n    if (isEditing) {\n      const loadCourse = async () => {\n        try {\n          const data = await courseService.getCourseById(id);\n          if (data) {\n            // Create a new object that exactly matches your state structure\n            setCourse({\n              course_id: data.course_id || '',\n              program_id: data.program_id || '',\n              department_id: data.department_id || '',\n              name: data.name || data.course_name || '',\n              description: data.description || '',\n              duration_minutes: typeof data.duration_minutes === 'number' ? data.duration_minutes : 55,\n              is_core: Boolean(data.is_core),\n              semesters: Array.isArray(data.semesters) ? data.semesters : []\n            });\n          } else {\n            setSnackbar({\n              open: true,\n              message: 'Course not found',\n              severity: 'error'\n            });\n            navigate('/admin/courses');\n          }\n        } catch (error) {\n          console.error('Error loading course:', error);\n          setSnackbar({\n            open: true,\n            message: 'Failed to load course',\n            severity: 'error'\n          });\n        } finally {\n          setLoading(false);\n        }\n      };\n      loadCourse();\n    } else {\n      // For new courses, set an empty course_id instead of generating one\n      setCourse(prevCourse => ({\n        ...prevCourse,\n        course_id: '',\n        // Changed from auto-generated to empty\n        program_id: initialProgramId\n      }));\n      setLoading(false);\n    }\n  }, [id, isEditing, navigate, initialProgramId]);\n  const validateForm = () => {\n    const newErrors = {};\n    if (!course.course_id.trim()) {\n      newErrors.course_id = 'Course ID is required';\n    }\n    if (!course.name.trim()) {\n      newErrors.name = 'Course name is required';\n    }\n    if (!course.program_id) {\n      newErrors.program_id = 'Program is required';\n    }\n    if (!course.department_id) {\n      newErrors.department_id = 'Department ID is required (should be set automatically)';\n    }\n    if (course.duration_minutes === '') {\n      newErrors.duration_minutes = 'Duration is required';\n    } else if (typeof course.duration_minutes === 'number' && course.duration_minutes <= 0) {\n      newErrors.duration_minutes = 'Duration must be greater than 0';\n    }\n    if (course.semesters.length === 0) {\n      newErrors.semesters = 'At least one semester must be selected';\n    }\n    console.log('Validation errors:', newErrors);\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      setSaving(true);\n\n      // Log what we're about to send for debugging\n      console.log('About to submit course data:', course);\n\n      // Create a properly typed object for the API\n      const apiCourse = {\n        course_id: course.course_id,\n        program_id: course.program_id,\n        department_id: course.department_id,\n        name: course.name,\n        course_name: course.name,\n        // Add this for backward compatibility\n        description: course.description,\n        duration_minutes: Number(course.duration_minutes),\n        // Force conversion to number\n        is_core: course.is_core,\n        semesters: course.semesters\n      };\n      if (isEditing) {\n        await courseService.updateCourse(id, apiCourse);\n      } else {\n        await courseService.createCourse(apiCourse);\n      }\n      setSnackbar({\n        open: true,\n        message: `Course ${isEditing ? 'updated' : 'created'} successfully`,\n        severity: 'success'\n      });\n\n      // Navigate back after a brief delay\n      setTimeout(() => {\n        navigate('/admin/courses');\n      }, 1500);\n    } catch (error) {\n      console.error('Error saving course:', error);\n      setSnackbar({\n        open: true,\n        message: `Failed to ${isEditing ? 'update' : 'create'} course`,\n        severity: 'error'\n      });\n    } finally {\n      setSaving(false);\n    }\n  };\n  const handleChange = field => e => {\n    setCourse({\n      ...course,\n      [field]: e.target.value\n    });\n\n    // Clear the error for this field if it exists\n    if (errors[field]) {\n      setErrors({\n        ...errors,\n        [field]: ''\n      });\n    }\n  };\n  const handleProgramChange = event => {\n    const newProgramId = event.target.value;\n\n    // Find the selected program to get its department_id\n    const selectedProgram = programs.find(p => p.program_id === newProgramId);\n    const departmentId = selectedProgram ? selectedProgram.department_id : '';\n    setCourse({\n      ...course,\n      program_id: newProgramId,\n      department_id: departmentId // Add the department_id\n    });\n\n    // Clear any program_id error\n    if (errors.program_id) {\n      setErrors({\n        ...errors,\n        program_id: ''\n      });\n    }\n  };\n  const handleDurationChange = value => {\n    setCourse({\n      ...course,\n      duration_minutes: value\n    });\n\n    // Clear any duration error\n    if (errors.duration_minutes) {\n      setErrors({\n        ...errors,\n        duration_minutes: ''\n      });\n    }\n  };\n  const handleCoreChange = event => {\n    setCourse({\n      ...course,\n      is_core: event.target.checked\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(MuiLink, {\n        component: Link,\n        to: \"/admin/courses\",\n        underline: \"hover\",\n        color: \"inherit\",\n        children: \"Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.primary\",\n        children: isEditing ? 'Edit Course' : 'New Course'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: isEditing ? 'Edit Course' : 'New Course'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 22\n        }, this),\n        component: Link,\n        to: \"/admin/courses\",\n        children: \"Back to List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              id: \"course_id\",\n              label: \"Course ID\",\n              value: course.course_id,\n              onChange: handleChange('course_id'),\n              error: errors.course_id,\n              required: true,\n              disabled: isEditing // ID can't be changed once created\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              margin: \"normal\",\n              error: !!errors.program_id,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"program-select-label\",\n                children: \"Program *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"program-select-label\",\n                id: \"program_id\",\n                value: course.program_id,\n                label: \"Program *\",\n                onChange: handleProgramChange,\n                disabled: isEditing // Can't change program once created\n                ,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Please select a program\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 19\n                }, this), programs.map(prog => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: prog.program_id,\n                  children: prog.name\n                }, prog.program_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this), errors.program_id && /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"error\",\n                variant: \"caption\",\n                children: errors.program_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              id: \"name\",\n              label: \"Course Name\",\n              value: course.name,\n              onChange: handleChange('name'),\n              error: errors.name,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(NumberInput, {\n              id: \"duration_minutes\",\n              label: \"Duration (minutes)\",\n              value: course.duration_minutes,\n              onChange: handleDurationChange,\n              error: errors.duration_minutes,\n              required: true,\n              min: 1,\n              max: 300\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: course.is_core,\n                onChange: handleCoreChange,\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this),\n              label: \"Core Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              gutterBottom: true,\n              children: \"Semester\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: course.semesters.includes('Fall'),\n                  onChange: e => {\n                    const {\n                      checked\n                    } = e.target;\n                    setCourse(prev => ({\n                      ...prev,\n                      semesters: checked ? [...prev.semesters, 'Fall'] : prev.semesters.filter(sem => sem !== 'Fall')\n                    }));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this),\n                label: \"Fall\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: course.semesters.includes('Spring'),\n                  onChange: e => {\n                    const {\n                      checked\n                    } = e.target;\n                    setCourse(prev => ({\n                      ...prev,\n                      semesters: checked ? [...prev.semesters, 'Spring'] : prev.semesters.filter(sem => sem !== 'Spring')\n                    }));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 21\n                }, this),\n                label: \"Spring\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), errors.semesters && /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"error\",\n              variant: \"caption\",\n              children: errors.semesters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              mt: 2,\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 28\n              }, this),\n              disabled: saving,\n              sx: {\n                bgcolor: '#00539F'\n              },\n              children: saving ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  sx: {\n                    mr: 1,\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 21\n                }, this), \"Saving...\"]\n              }, void 0, true) : 'Save Course'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSnackbar({\n          ...snackbar,\n          open: false\n        }),\n        severity: snackbar.severity,\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseForm, \"qLr8PvqrXRP2vBlCr0ZOB9LYiu8=\", false, function () {\n  return [useNavigate, useLocation, useParams];\n});\n_c = CourseForm;\nexport default CourseForm;\nvar _c;\n$RefreshReg$(_c, \"CourseForm\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","Paper","Grid","Snackbar","Alert","Checkbox","CircularProgress","Breadcrumbs","Link","MuiLink","FormControl","InputLabel","Select","MenuItem","FormControlLabel","Switch","SaveIcon","ArrowBackIcon","useNavigate","useParams","useLocation","TextInput","NumberInput","programService","courseService","jsxDEV","_jsxDEV","Fragment","_Fragment","CourseForm","_s","navigate","location","id","isEditing","Boolean","queryParams","URLSearchParams","search","initialProgramId","get","programs","setPrograms","course","setCourse","course_id","program_id","department_id","name","description","duration_minutes","is_core","semesters","loading","setLoading","saving","setSaving","errors","setErrors","snackbar","setSnackbar","open","message","severity","loadPrograms","data","getAllPrograms","length","selectedProgram","find","p","prevCourse","error","console","loadCourse","getCourseById","course_name","Array","isArray","validateForm","newErrors","trim","log","Object","keys","handleSubmit","e","preventDefault","apiCourse","Number","updateCourse","createCourse","setTimeout","handleChange","field","target","value","handleProgramChange","event","newProgramId","departmentId","handleDurationChange","handleCoreChange","checked","sx","display","justifyContent","my","children","fileName","_jsxFileName","lineNumber","columnNumber","mb","component","to","underline","color","alignItems","variant","startIcon","onSubmit","container","spacing","item","xs","md","label","onChange","required","disabled","fullWidth","margin","labelId","map","prog","min","max","control","gutterBottom","gap","includes","prev","filter","sem","mt","type","bgcolor","size","mr","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["C:/Users/shash/Documents/Master's Colleges/UNIVERSITY OF DELAWARE/COURSES/Project/university-scheduler/frontend/src/components/admin/courses/CourseForm.tsx"],"sourcesContent":["// src/components/admin/courses/CourseForm.tsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  Box, \r\n  Button, \r\n  Typography, \r\n  Paper, \r\n  Grid, \r\n  Snackbar, \r\n  Alert,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Breadcrumbs,\r\n  Link as MuiLink,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  SelectChangeEvent,\r\n  FormControlLabel,\r\n  Switch\r\n} from '@mui/material';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { Link, useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport { TextInput, NumberInput } from '../../../components/common/FormComponents';\r\n\r\n// Import services\r\nimport departmentService from '../../../services/departmentService';\r\nimport programService from '../../../services/programService';\r\nimport courseService, { Course } from '../../../services/courseService';\r\n\r\nconst CourseForm: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { id } = useParams<{ id: string }>();\r\n  const isEditing = Boolean(id);\r\n  \r\n  // Get programId from query param if present (for new courses)\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const initialProgramId = queryParams.get('programId') || '';\r\n  \r\n  const [programs, setPrograms] = useState<any[]>([]);\r\n  const [course, setCourse] = useState<{\r\n    course_id: string;\r\n    program_id: string;\r\n    department_id: string; // Added department_id\r\n    name: string;\r\n    description: string;\r\n    duration_minutes: number | '';\r\n    is_core: boolean;\r\n    semesters: string[];\r\n  }>({\r\n    course_id: '',\r\n    program_id: initialProgramId,\r\n    department_id: '', // Initialize with empty string\r\n    name: '',\r\n    description: '',\r\n    duration_minutes: 55,\r\n    is_core: false,\r\n    semesters: []\r\n  });\r\n  \r\n  const [loading, setLoading] = useState(isEditing);\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState<{[key: string]: string}>({});\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' as 'success' | 'error' });\r\n\r\n  useEffect(() => {\r\n    const loadPrograms = async () => {\r\n      try {\r\n        const data = await programService.getAllPrograms();\r\n        setPrograms(data);\r\n        \r\n        // If we have programs and an initialProgramId, set the department_id\r\n        if (data.length > 0 && initialProgramId) {\r\n          const selectedProgram = data.find(p => p.program_id === initialProgramId);\r\n          if (selectedProgram) {\r\n            setCourse(prevCourse => ({\r\n              ...prevCourse,\r\n              department_id: selectedProgram.department_id\r\n            }));\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading programs:', error);\r\n        setSnackbar({\r\n          open: true,\r\n          message: 'Failed to load programs',\r\n          severity: 'error'\r\n        });\r\n      }\r\n    };\r\n\r\n    loadPrograms();\r\n    \r\n    if (isEditing) {\r\n      const loadCourse = async () => {\r\n        try {\r\n          const data = await courseService.getCourseById(id!);\r\n          if (data) {\r\n            // Create a new object that exactly matches your state structure\r\n            setCourse({\r\n              course_id: data.course_id || '',\r\n              program_id: data.program_id || '',\r\n              department_id: data.department_id || '',\r\n              name: data.name || data.course_name || '',\r\n              description: data.description || '',\r\n              duration_minutes: typeof data.duration_minutes === 'number' ? data.duration_minutes : 55,\r\n              is_core: Boolean(data.is_core),\r\n              semesters: Array.isArray(data.semesters) ? data.semesters : []\r\n            });\r\n          } else {\r\n            setSnackbar({\r\n              open: true,\r\n              message: 'Course not found',\r\n              severity: 'error'\r\n            });\r\n            navigate('/admin/courses');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error loading course:', error);\r\n          setSnackbar({\r\n            open: true,\r\n            message: 'Failed to load course',\r\n            severity: 'error'\r\n          });\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      loadCourse();\r\n    } else {\r\n      // For new courses, set an empty course_id instead of generating one\r\n      setCourse(prevCourse => ({\r\n        ...prevCourse,\r\n        course_id: '', // Changed from auto-generated to empty\r\n        program_id: initialProgramId\r\n      }));\r\n      setLoading(false);\r\n    }\r\n  }, [id, isEditing, navigate, initialProgramId]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors: {[key: string]: string} = {};\r\n    \r\n    if (!course.course_id.trim()) {\r\n      newErrors.course_id = 'Course ID is required';\r\n    }\r\n    \r\n    if (!course.name.trim()) {\r\n      newErrors.name = 'Course name is required';\r\n    }\r\n    \r\n    if (!course.program_id) {\r\n      newErrors.program_id = 'Program is required';\r\n    }\r\n    \r\n    if (!course.department_id) {\r\n      newErrors.department_id = 'Department ID is required (should be set automatically)';\r\n    }\r\n    \r\n    if (course.duration_minutes === '') {\r\n      newErrors.duration_minutes = 'Duration is required';\r\n    } else if (typeof course.duration_minutes === 'number' && course.duration_minutes <= 0) {\r\n      newErrors.duration_minutes = 'Duration must be greater than 0';\r\n    }\r\n    \r\n    if (course.semesters.length === 0) {\r\n      newErrors.semesters = 'At least one semester must be selected';\r\n    }\r\n    \r\n    console.log('Validation errors:', newErrors);\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      setSaving(true);\r\n      \r\n      // Log what we're about to send for debugging\r\n      console.log('About to submit course data:', course);\r\n    \r\n      // Create a properly typed object for the API\r\n      const apiCourse: Partial<Course> = {\r\n        course_id: course.course_id,\r\n        program_id: course.program_id,\r\n        department_id: course.department_id,\r\n        name: course.name,\r\n        course_name: course.name, // Add this for backward compatibility\r\n        description: course.description,\r\n        duration_minutes: Number(course.duration_minutes), // Force conversion to number\r\n        is_core: course.is_core,\r\n        semesters: course.semesters\r\n      };\r\n    \r\n      if (isEditing) {\r\n        await courseService.updateCourse(id!, apiCourse);\r\n      } else {\r\n        await courseService.createCourse(apiCourse);\r\n      }\r\n    \r\n      setSnackbar({\r\n        open: true,\r\n        message: `Course ${isEditing ? 'updated' : 'created'} successfully`,\r\n        severity: 'success'\r\n      });\r\n    \r\n      // Navigate back after a brief delay\r\n      setTimeout(() => {\r\n        navigate('/admin/courses');\r\n      }, 1500);\r\n    } catch (error) {\r\n      console.error('Error saving course:', error);\r\n      setSnackbar({\r\n        open: true,\r\n        message: `Failed to ${isEditing ? 'update' : 'create'} course`,\r\n        severity: 'error'\r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCourse({\r\n      ...course,\r\n      [field]: e.target.value\r\n    });\r\n    \r\n    // Clear the error for this field if it exists\r\n    if (errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleProgramChange = (event: SelectChangeEvent) => {\r\n    const newProgramId = event.target.value;\r\n    \r\n    // Find the selected program to get its department_id\r\n    const selectedProgram = programs.find(p => p.program_id === newProgramId);\r\n    const departmentId = selectedProgram ? selectedProgram.department_id : '';\r\n    \r\n    setCourse({\r\n      ...course,\r\n      program_id: newProgramId,\r\n      department_id: departmentId // Add the department_id\r\n    });\r\n    \r\n    // Clear any program_id error\r\n    if (errors.program_id) {\r\n      setErrors({\r\n        ...errors,\r\n        program_id: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDurationChange = (value: number | '') => {\r\n    setCourse({\r\n      ...course,\r\n      duration_minutes: value\r\n    });\r\n    \r\n    // Clear any duration error\r\n    if (errors.duration_minutes) {\r\n      setErrors({\r\n        ...errors,\r\n        duration_minutes: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCoreChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCourse({\r\n      ...course,\r\n      is_core: event.target.checked\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Breadcrumbs sx={{ mb: 2 }}>\r\n        <MuiLink component={Link} to=\"/admin/courses\" underline=\"hover\" color=\"inherit\">\r\n          Courses\r\n        </MuiLink>\r\n        <Typography color=\"text.primary\">\r\n          {isEditing ? 'Edit Course' : 'New Course'}\r\n        </Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          {isEditing ? 'Edit Course' : 'New Course'}\r\n        </Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          startIcon={<ArrowBackIcon />}\r\n          component={Link}\r\n          to=\"/admin/courses\"\r\n        >\r\n          Back to List\r\n        </Button>\r\n      </Box>\r\n\r\n      <Paper sx={{ p: 3 }}>\r\n        <Box component=\"form\" onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextInput\r\n                id=\"course_id\"\r\n                label=\"Course ID\"\r\n                value={course.course_id}\r\n                onChange={handleChange('course_id')}\r\n                error={errors.course_id}\r\n                required\r\n                disabled={isEditing} // ID can't be changed once created\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <FormControl fullWidth margin=\"normal\" error={!!errors.program_id}>\r\n                <InputLabel id=\"program-select-label\">Program *</InputLabel>\r\n                <Select\r\n                  labelId=\"program-select-label\"\r\n                  id=\"program_id\"\r\n                  value={course.program_id}\r\n                  label=\"Program *\"\r\n                  onChange={handleProgramChange}\r\n                  disabled={isEditing} // Can't change program once created\r\n                  required\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>Please select a program</em>\r\n                  </MenuItem>\r\n                  {programs.map((prog) => (\r\n                    <MenuItem key={prog.program_id} value={prog.program_id}>\r\n                      {prog.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n                {errors.program_id && (\r\n                  <Typography color=\"error\" variant=\"caption\">\r\n                    {errors.program_id}\r\n                  </Typography>\r\n                )}\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextInput\r\n                id=\"name\"\r\n                label=\"Course Name\"\r\n                value={course.name}\r\n                onChange={handleChange('name')}\r\n                error={errors.name}\r\n                required\r\n              />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} md={6}>\r\n              <NumberInput\r\n                id=\"duration_minutes\"\r\n                label=\"Duration (minutes)\"\r\n                value={course.duration_minutes}\r\n                onChange={handleDurationChange}\r\n                error={errors.duration_minutes}\r\n                required\r\n                min={1}\r\n                max={300}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} sx={{ display: 'flex', alignItems: 'center' }}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={course.is_core}\r\n                    onChange={handleCoreChange}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Core Course\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"subtitle2\" gutterBottom>\r\n                Semester\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', gap: 2 }}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={course.semesters.includes('Fall')}\r\n                      onChange={(e) => {\r\n                        const { checked } = e.target;\r\n                        setCourse(prev => ({\r\n                          ...prev,\r\n                          semesters: checked \r\n                            ? [...prev.semesters, 'Fall'] \r\n                            : prev.semesters.filter(sem => sem !== 'Fall')\r\n                        }));\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Fall\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={course.semesters.includes('Spring')}\r\n                      onChange={(e) => {\r\n                        const { checked } = e.target;\r\n                        setCourse(prev => ({\r\n                          ...prev,\r\n                          semesters: checked \r\n                            ? [...prev.semesters, 'Spring'] \r\n                            : prev.semesters.filter(sem => sem !== 'Spring')\r\n                        }));\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Spring\"\r\n                />\r\n              </Box>\r\n              {errors.semesters && (\r\n                <Typography color=\"error\" variant=\"caption\">\r\n                  {errors.semesters}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<SaveIcon />}\r\n                disabled={saving}\r\n                sx={{ bgcolor: '#00539F' }}\r\n              >\r\n                {saving ? (\r\n                  <>\r\n                    <CircularProgress size={24} sx={{ mr: 1, color: 'white' }} />\r\n                    Saving...\r\n                  </>\r\n                ) : (\r\n                  'Save Course'\r\n                )}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CourseForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}