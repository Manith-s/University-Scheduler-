{"ast":null,"code":"// src/services/semesterService.ts\n//import { v4 as uuidv4 } from 'uuid';\n\n// Define the base API URL\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\n// Types\n\n// Get all semesters\nexport const getAllSemesters = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${API_URL}/semesters`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch semesters');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error in getAllSemesters:', error);\n\n    // Return mock data for development\n    return [{\n      semester_id: \"SEM-001\",\n      name: \"Spring 2025\",\n      start_date: \"2025-01-15\",\n      end_date: \"2025-05-15\",\n      is_current: true,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    }, {\n      semester_id: \"SEM-002\",\n      name: \"Fall 2025\",\n      start_date: \"2025-08-15\",\n      end_date: \"2025-12-15\",\n      is_current: false,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    }];\n  }\n};\n\n// Get current semester\nexport const getCurrentSemester = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${API_URL}/semesters/current`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch current semester');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error in getCurrentSemester:', error);\n\n    // Return mock data for development\n    return {\n      semester_id: \"SEM-001\",\n      name: \"Spring 2025\",\n      start_date: \"2025-01-15\",\n      end_date: \"2025-05-15\",\n      is_current: true,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    };\n  }\n};\nconst semesterService = {\n  getAllSemesters,\n  getCurrentSemester\n};\nexport default semesterService;","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","getAllSemesters","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","error","console","semester_id","name","start_date","end_date","is_current","created_at","Date","toISOString","updated_at","getCurrentSemester","semesterService"],"sources":["C:/Users/shash/Documents/Master's Colleges/UNIVERSITY OF DELAWARE/COURSES/Project/university-scheduler/frontend/src/services/semesterService.ts"],"sourcesContent":["// src/services/semesterService.ts\r\n//import { v4 as uuidv4 } from 'uuid';\r\n\r\n// Define the base API URL\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\r\n\r\n// Types\r\nexport interface Semester {\r\n  semester_id: string;\r\n  name: string;\r\n  start_date: string;\r\n  end_date: string;\r\n  is_current?: boolean;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\n// Get all semesters\r\nexport const getAllSemesters = async (): Promise<Semester[]> => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_URL}/semesters`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch semesters');\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error in getAllSemesters:', error);\r\n    \r\n    // Return mock data for development\r\n    return [\r\n      {\r\n        semester_id: \"SEM-001\",\r\n        name: \"Spring 2025\",\r\n        start_date: \"2025-01-15\",\r\n        end_date: \"2025-05-15\",\r\n        is_current: true,\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString()\r\n      },\r\n      {\r\n        semester_id: \"SEM-002\",\r\n        name: \"Fall 2025\",\r\n        start_date: \"2025-08-15\",\r\n        end_date: \"2025-12-15\",\r\n        is_current: false,\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString()\r\n      }\r\n    ];\r\n  }\r\n};\r\n\r\n// Get current semester\r\nexport const getCurrentSemester = async (): Promise<Semester> => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_URL}/semesters/current`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch current semester');\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error in getCurrentSemester:', error);\r\n    \r\n    // Return mock data for development\r\n    return {\r\n      semester_id: \"SEM-001\",\r\n      name: \"Spring 2025\",\r\n      start_date: \"2025-01-15\",\r\n      end_date: \"2025-05-15\",\r\n      is_current: true,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n  }\r\n};\r\n\r\nconst semesterService = {\r\n  getAllSemesters,\r\n  getCurrentSemester\r\n};\r\n\r\nexport default semesterService;"],"mappings":"AAAA;AACA;;AAEA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;;AAWA;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAiC;EAC9D,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,YAAY,EAAE;MACnDU,OAAO,EAAE;QACP,eAAe,EAAE,UAAUL,KAAK,EAAE;QAClC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;IAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;;IAEjD;IACA,OAAO,CACL;MACEE,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAE,aAAa;MACnBC,UAAU,EAAE,YAAY;MACxBC,QAAQ,EAAE,YAAY;MACtBC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACpCC,UAAU,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACrC,CAAC,EACD;MACEP,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAE,WAAW;MACjBC,UAAU,EAAE,YAAY;MACxBC,QAAQ,EAAE,YAAY;MACtBC,UAAU,EAAE,KAAK;MACjBC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACpCC,UAAU,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACrC,CAAC,CACF;EACH;AACF,CAAC;;AAED;AACA,OAAO,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAA+B;EAC/D,IAAI;IACF,MAAMrB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,oBAAoB,EAAE;MAC3DU,OAAO,EAAE;QACP,eAAe,EAAE,UAAUL,KAAK,EAAE;QAClC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;IACrD;IAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;;IAEpD;IACA,OAAO;MACLE,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAE,aAAa;MACnBC,UAAU,EAAE,YAAY;MACxBC,QAAQ,EAAE,YAAY;MACtBC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACpCC,UAAU,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACrC,CAAC;EACH;AACF,CAAC;AAED,MAAMG,eAAe,GAAG;EACtBvB,eAAe;EACfsB;AACF,CAAC;AAED,eAAeC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}