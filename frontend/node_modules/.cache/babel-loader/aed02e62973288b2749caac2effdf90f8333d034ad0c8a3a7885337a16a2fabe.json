{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Documents\\\\Master's Colleges\\\\UNIVERSITY OF DELAWARE\\\\COURSES\\\\Project\\\\university-scheduler\\\\frontend\\\\src\\\\components\\\\admin\\\\professors\\\\ProfessorDetails.tsx\",\n  _s = $RefreshSig$();\n// ProfessorDetails.tsx\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, Button, Card, CardContent, CircularProgress, Container, Grid, Paper, Tab, Tabs, Typography, Divider, List, ListItem, ListItemText, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport professorService from '../../../services/professorService';\nimport departmentService from '../../../services/departmentService';\nimport courseService from '../../../services/courseService';\nimport ProfessorAvailabilityTab from './ProfessorAvailabilityTab';\nimport { ArrowBack } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `professor-tabpanel-${index}`,\n    \"aria-labelledby\": `professor-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nconst ProfessorDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [professor, setProfessor] = useState(null);\n  const [department, setDepartment] = useState(null);\n  const [courses, setCourses] = useState([]);\n  const [availabilities, setAvailabilities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [tabValue, setTabValue] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!id) return;\n      try {\n        setLoading(true);\n\n        // Fetch professor details\n        const professorData = await professorService.getProfessorById(id);\n        setProfessor(professorData);\n\n        // Fetch department details\n        const departmentData = await departmentService.getDepartmentById(professorData.department_id);\n        setDepartment(departmentData);\n\n        // Fetch courses taught by the professor\n        const coursesData = await courseService.getCoursesByProfessor(id);\n        setCourses(coursesData);\n\n        // Fetch professor availability\n        const availabilityData = await professorService.getProfessorAvailability(id);\n        setAvailabilities(availabilityData);\n      } catch (err) {\n        setError('Failed to fetch professor details');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [id]);\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const handleGoBack = () => {\n    navigate('/admin/professors');\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n  if (error || !professor) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error || 'Professor not found'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 22\n        }, this),\n        onClick: handleGoBack,\n        sx: {\n          mb: 2\n        },\n        children: \"Back to Professors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h1\",\n              gutterBottom: true,\n              children: `${professor.first_name} ${professor.last_name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"text.secondary\",\n              gutterBottom: true,\n              children: [\"ID: \", professor.professor_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              gutterBottom: true,\n              children: [\"Email: \", professor.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              gutterBottom: true,\n              children: [\"Department: \", (department === null || department === void 0 ? void 0 : department.name) || 'Unknown Department']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            sx: {\n              textAlign: {\n                xs: 'left',\n                md: 'right'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Created: \", formatDate(professor.created_at)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Last Updated: \", formatDate(professor.updated_at)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabChange,\n          indicatorColor: \"primary\",\n          textColor: \"primary\",\n          variant: \"fullWidth\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Courses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Availability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 0,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Professor Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  divider: true,\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Full Name\",\n                    secondary: `${professor.first_name} ${professor.last_name}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  divider: true,\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Email\",\n                    secondary: professor.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  divider: true,\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Department\",\n                    secondary: (department === null || department === void 0 ? void 0 : department.name) || 'Unknown Department'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  divider: true,\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Professor ID\",\n                    secondary: professor.professor_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Account Status\",\n                    secondary: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 1,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Assigned Courses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), courses.length > 0 ? /*#__PURE__*/_jsxDEV(TableContainer, {\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Course ID\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Course Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Duration\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Department\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: courses.map(course => /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: course.course_id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: course.course_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: course.is_core ? 'Core' : 'Elective'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: [course.duration_minutes, \" minutes\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: department && department.department_id === course.department_id ? department.name : course.department_id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 29\n                      }, this)]\n                    }, course.course_id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                sx: {\n                  mt: 2\n                },\n                children: \"No courses assigned to this professor yet.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 2,\n          children: /*#__PURE__*/_jsxDEV(ProfessorAvailabilityTab, {\n            professorId: professor.professor_id,\n            availabilities: availabilities,\n            onAvailabilityChange: newAvailabilities => setAvailabilities(newAvailabilities)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfessorDetails, \"YXjvthCV6lBPrK3cjLRQXNBP5so=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = ProfessorDetails;\nexport default ProfessorDetails;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ProfessorDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Box","Button","Card","CardContent","CircularProgress","Container","Grid","Paper","Tab","Tabs","Typography","Divider","List","ListItem","ListItemText","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","professorService","departmentService","courseService","ProfessorAvailabilityTab","ArrowBack","jsxDEV","_jsxDEV","TabPanel","props","children","value","index","other","role","hidden","id","sx","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","ProfessorDetails","_s","navigate","professor","setProfessor","department","setDepartment","courses","setCourses","availabilities","setAvailabilities","loading","setLoading","error","setError","tabValue","setTabValue","fetchData","professorData","getProfessorById","departmentData","getDepartmentById","department_id","coursesData","getCoursesByProfessor","availabilityData","getProfessorAvailability","err","console","handleTabChange","event","newValue","handleGoBack","formatDate","dateString","Date","toLocaleDateString","year","month","day","display","justifyContent","alignItems","minHeight","color","maxWidth","mt","mb","startIcon","onClick","container","spacing","item","xs","md","variant","component","gutterBottom","first_name","last_name","professor_id","email","name","textAlign","created_at","updated_at","onChange","indicatorColor","textColor","label","my","divider","primary","secondary","length","map","course","course_id","course_name","is_core","duration_minutes","professorId","onAvailabilityChange","newAvailabilities","_c2","$RefreshReg$"],"sources":["C:/Users/shash/Documents/Master's Colleges/UNIVERSITY OF DELAWARE/COURSES/Project/university-scheduler/frontend/src/components/admin/professors/ProfessorDetails.tsx"],"sourcesContent":["// ProfessorDetails.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow\r\n} from '@mui/material';\r\nimport professorService, { Professor, ProfessorAvailability } from '../../../services/professorService';\r\nimport departmentService, { Department } from '../../../services/departmentService';\r\nimport courseService, { Course } from '../../../services/courseService';\r\nimport ProfessorAvailabilityTab from './ProfessorAvailabilityTab';\r\nimport { ArrowBack } from '@mui/icons-material';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`professor-tabpanel-${index}`}\r\n      aria-labelledby={`professor-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ProfessorDetails: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  const [professor, setProfessor] = useState<Professor | null>(null);\r\n  const [department, setDepartment] = useState<Department | null>(null);\r\n  const [courses, setCourses] = useState<Course[]>([]);\r\n  const [availabilities, setAvailabilities] = useState<ProfessorAvailability[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!id) return;\r\n      \r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Fetch professor details\r\n        const professorData = await professorService.getProfessorById(id);\r\n        setProfessor(professorData);\r\n        \r\n        // Fetch department details\r\n        const departmentData = await departmentService.getDepartmentById(professorData.department_id);\r\n        setDepartment(departmentData);\r\n        \r\n        // Fetch courses taught by the professor\r\n        const coursesData = await courseService.getCoursesByProfessor(id);\r\n        setCourses(coursesData);\r\n        \r\n        // Fetch professor availability\r\n        const availabilityData = await professorService.getProfessorAvailability(id);\r\n        setAvailabilities(availabilityData);\r\n        \r\n      } catch (err) {\r\n        setError('Failed to fetch professor details');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    navigate('/admin/professors');\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error || !professor) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\r\n        <Typography color=\"error\">{error || 'Professor not found'}</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box sx={{ mt: 4, mb: 4 }}>\r\n        <Button\r\n          startIcon={<ArrowBack />}\r\n          onClick={handleGoBack}\r\n          sx={{ mb: 2 }}\r\n        >\r\n          Back to Professors\r\n        </Button>\r\n        \r\n        <Paper sx={{ p: 3, mb: 3 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={8}>\r\n              <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                {`${professor.first_name} ${professor.last_name}`}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"text.secondary\" gutterBottom>\r\n                ID: {professor.professor_id}\r\n              </Typography>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                Email: {professor.email}\r\n              </Typography>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                Department: {department?.name || 'Unknown Department'}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} sx={{ textAlign: { xs: 'left', md: 'right' } }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                Created: {formatDate(professor.created_at)}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                Last Updated: {formatDate(professor.updated_at)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        \r\n        <Paper sx={{ mb: 4 }}>\r\n          <Tabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab label=\"Profile\" />\r\n            <Tab label=\"Courses\" />\r\n            <Tab label=\"Availability\" />\r\n          </Tabs>\r\n          \r\n          <TabPanel value={tabValue} index={0}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Professor Information\r\n                </Typography>\r\n                <Divider sx={{ my: 2 }} />\r\n                <List>\r\n                  <ListItem divider>\r\n                    <ListItemText \r\n                      primary=\"Full Name\" \r\n                      secondary={`${professor.first_name} ${professor.last_name}`} \r\n                    />\r\n                  </ListItem>\r\n                  <ListItem divider>\r\n                    <ListItemText \r\n                      primary=\"Email\" \r\n                      secondary={professor.email} \r\n                    />\r\n                  </ListItem>\r\n                  <ListItem divider>\r\n                    <ListItemText \r\n                      primary=\"Department\" \r\n                      secondary={department?.name || 'Unknown Department'} \r\n                    />\r\n                  </ListItem>\r\n                  <ListItem divider>\r\n                    <ListItemText \r\n                      primary=\"Professor ID\" \r\n                      secondary={professor.professor_id} \r\n                    />\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemText \r\n                      primary=\"Account Status\" \r\n                      secondary=\"Active\" \r\n                    />\r\n                  </ListItem>\r\n                </List>\r\n              </CardContent>\r\n            </Card>\r\n          </TabPanel>\r\n          \r\n          <TabPanel value={tabValue} index={1}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Assigned Courses\r\n                </Typography>\r\n                <Divider sx={{ my: 2 }} />\r\n                \r\n                {courses.length > 0 ? (\r\n                  <TableContainer>\r\n                    <Table>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Course ID</TableCell>\r\n                          <TableCell>Course Name</TableCell>\r\n                          <TableCell>Type</TableCell>\r\n                          <TableCell>Duration</TableCell>\r\n                          <TableCell>Department</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {courses.map((course) => (\r\n                          <TableRow key={course.course_id}>\r\n                            <TableCell>{course.course_id}</TableCell>\r\n                            <TableCell>{course.course_name}</TableCell>\r\n                            <TableCell>{course.is_core ? 'Core' : 'Elective'}</TableCell>\r\n                            <TableCell>{course.duration_minutes} minutes</TableCell>\r\n                            <TableCell>\r\n                              {department && department.department_id === course.department_id\r\n                                ? department.name\r\n                                : course.department_id}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                ) : (\r\n                  <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n                    No courses assigned to this professor yet.\r\n                  </Typography>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </TabPanel>\r\n          \r\n          <TabPanel value={tabValue} index={2}>\r\n            <ProfessorAvailabilityTab \r\n              professorId={professor.professor_id} \r\n              availabilities={availabilities}\r\n              onAvailabilityChange={(newAvailabilities) => setAvailabilities(newAvailabilities)}\r\n            />\r\n          </TabPanel>\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfessorDetails;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}