{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Documents\\\\Master's Colleges\\\\UNIVERSITY OF DELAWARE\\\\COURSES\\\\Project\\\\university-scheduler\\\\frontend\\\\src\\\\components\\\\admin\\\\programs\\\\ProgramForm.tsx\",\n  _s = $RefreshSig$();\n// src/components/admin/programs/ProgramForm.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, Paper, Grid, Snackbar, Alert, CircularProgress, Breadcrumbs, Link as MuiLink, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { Link, useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { TextInput } from '../../../components/common/FormComponents';\n//import { v4 as uuidv4 } from 'uuid';\nimport programService from '../../../services/programService';\nimport departmentService from '../../../services/departmentService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProgramForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    id\n  } = useParams();\n  const isEditing = Boolean(id);\n\n  // Get departmentId from query param if present (for new programs)\n  const queryParams = new URLSearchParams(location.search);\n  const initialDepartmentId = queryParams.get('departmentId') || '';\n  const [departments, setDepartments] = useState([]);\n  const [program, setProgram] = useState({\n    program_id: '',\n    department_id: initialDepartmentId,\n    name: '',\n    description: ''\n  });\n  const [loading, setLoading] = useState(isEditing);\n  const [saving, setSaving] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  useEffect(() => {\n    const loadDepartments = async () => {\n      try {\n        const data = await departmentService.getAllDepartments();\n        setDepartments(data);\n      } catch (error) {\n        console.error('Error loading departments:', error);\n        setSnackbar({\n          open: true,\n          message: 'Failed to load departments',\n          severity: 'error'\n        });\n      }\n    };\n    loadDepartments();\n    if (isEditing && id) {\n      const loadProgram = async () => {\n        try {\n          setLoading(true);\n          const data = await programService.getProgramById(id);\n          if (data) {\n            setProgram({\n              program_id: data.program_id,\n              department_id: data.department_id,\n              name: data.name,\n              description: data.description || ''\n            });\n          } else {\n            setSnackbar({\n              open: true,\n              message: 'Program not found',\n              severity: 'error'\n            });\n            navigate('/admin/programs');\n          }\n        } catch (error) {\n          console.error('Error loading program:', error);\n          setSnackbar({\n            open: true,\n            message: 'Failed to load program',\n            severity: 'error'\n          });\n        } finally {\n          setLoading(false);\n        }\n      };\n      loadProgram();\n    } else {\n      // For new programs, set an empty program_id instead of generating one\n      setProgram(prevProgram => ({\n        ...prevProgram,\n        program_id: '',\n        // Changed from auto-generated to empty\n        department_id: initialDepartmentId\n      }));\n    }\n  }, [id, isEditing, navigate, initialDepartmentId]);\n  const validateForm = () => {\n    const newErrors = {};\n    if (!program.program_id.trim()) {\n      newErrors.program_id = 'Program ID is required';\n    } else if (!/^[A-Za-z0-9\\-_]+$/.test(program.program_id)) {\n      newErrors.program_id = 'Program ID can only contain letters, numbers, hyphens, and underscores';\n    }\n    if (!program.name.trim()) {\n      newErrors.name = 'Program name is required';\n    }\n    if (!program.department_id) {\n      newErrors.department_id = 'Department is required';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // In ProgramForm.tsx, update the handleSubmit function:\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      setSaving(true);\n      console.log('Submitting program data:', program); // Add this line to debug\n\n      if (isEditing && id) {\n        console.log(`Updating program with ID: ${id}`, program);\n        // Make sure you're passing the correct ID format\n        await programService.updateProgram(id, {\n          name: program.name,\n          description: program.description,\n          department_id: program.department_id // Make sure to include this\n        });\n      } else {\n        console.log('Creating new program:', program);\n        await programService.createProgram(program);\n      }\n      setSnackbar({\n        open: true,\n        message: `Program ${isEditing ? 'updated' : 'created'} successfully`,\n        severity: 'success'\n      });\n\n      // Navigate back after a brief delay\n      setTimeout(() => {\n        navigate('/admin/programs');\n      }, 1500);\n    } catch (error) {\n      console.error('Error saving program:', error);\n      setSnackbar({\n        open: true,\n        message: error instanceof Error ? error.message : `Failed to ${isEditing ? 'update' : 'create'} program`,\n        severity: 'error'\n      });\n    } finally {\n      setSaving(false);\n    }\n  };\n  const handleChange = field => e => {\n    setProgram({\n      ...program,\n      [field]: e.target.value\n    });\n\n    // Clear the error for this field if it exists\n    if (errors[field]) {\n      setErrors({\n        ...errors,\n        [field]: ''\n      });\n    }\n  };\n  const handleDepartmentChange = event => {\n    const newDepartmentId = event.target.value;\n    setProgram({\n      ...program,\n      department_id: newDepartmentId\n    });\n\n    // Clear any department_id error\n    if (errors.department_id) {\n      setErrors({\n        ...errors,\n        department_id: ''\n      });\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(MuiLink, {\n        component: Link,\n        to: \"/admin/programs\",\n        underline: \"hover\",\n        color: \"inherit\",\n        children: \"Programs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.primary\",\n        children: isEditing ? 'Edit Program' : 'New Program'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: isEditing ? 'Edit Program' : 'New Program'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 22\n        }, this),\n        component: Link,\n        to: \"/admin/programs\",\n        children: \"Back to List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              id: \"program_id\",\n              label: \"Program ID\",\n              value: program.program_id,\n              onChange: handleChange('program_id'),\n              error: errors.program_id,\n              required: true,\n              disabled: isEditing // ID can't be changed once created\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              margin: \"normal\",\n              error: !!errors.department_id,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"department-select-label\",\n                children: \"Department *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"department-select-label\",\n                id: \"department_id\",\n                value: program.department_id,\n                label: \"Department *\",\n                onChange: handleDepartmentChange,\n                disabled: isEditing // Can't change department once created\n                ,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Please select a department\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this), departments.map(dept => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: dept.department_id,\n                  children: dept.name\n                }, dept.department_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), errors.department_id && /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"error\",\n                variant: \"caption\",\n                children: errors.department_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              id: \"name\",\n              label: \"Program Name\",\n              value: program.name,\n              onChange: handleChange('name'),\n              error: errors.name,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              id: \"description\",\n              label: \"Description\",\n              value: program.description,\n              onChange: handleChange('description'),\n              error: errors.description,\n              multiline: true,\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              mt: 2,\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 28\n              }, this),\n              disabled: saving,\n              sx: {\n                bgcolor: '#00539F'\n              },\n              children: saving ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  sx: {\n                    mr: 1,\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this), \"Saving...\"]\n              }, void 0, true) : 'Save Program'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSnackbar({\n          ...snackbar,\n          open: false\n        }),\n        severity: snackbar.severity,\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgramForm, \"6IB0lyFn1MlBtQQbEOjnr3hhdck=\", false, function () {\n  return [useNavigate, useLocation, useParams];\n});\n_c = ProgramForm;\nexport default ProgramForm;\nvar _c;\n$RefreshReg$(_c, \"ProgramForm\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","Paper","Grid","Snackbar","Alert","CircularProgress","Breadcrumbs","Link","MuiLink","FormControl","InputLabel","Select","MenuItem","SaveIcon","ArrowBackIcon","useNavigate","useParams","useLocation","TextInput","programService","departmentService","jsxDEV","_jsxDEV","Fragment","_Fragment","ProgramForm","_s","navigate","location","id","isEditing","Boolean","queryParams","URLSearchParams","search","initialDepartmentId","get","departments","setDepartments","program","setProgram","program_id","department_id","name","description","loading","setLoading","saving","setSaving","errors","setErrors","snackbar","setSnackbar","open","message","severity","loadDepartments","data","getAllDepartments","error","console","loadProgram","getProgramById","prevProgram","validateForm","newErrors","trim","test","Object","keys","length","handleSubmit","e","preventDefault","log","updateProgram","createProgram","setTimeout","Error","handleChange","field","target","value","handleDepartmentChange","event","newDepartmentId","sx","display","justifyContent","my","children","fileName","_jsxFileName","lineNumber","columnNumber","mb","component","to","underline","color","alignItems","variant","startIcon","p","onSubmit","container","spacing","item","xs","md","label","onChange","required","disabled","fullWidth","margin","labelId","map","dept","multiline","rows","mt","type","bgcolor","size","mr","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["C:/Users/shash/Documents/Master's Colleges/UNIVERSITY OF DELAWARE/COURSES/Project/university-scheduler/frontend/src/components/admin/programs/ProgramForm.tsx"],"sourcesContent":["// src/components/admin/programs/ProgramForm.tsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  Box, \r\n  Button, \r\n  Typography, \r\n  Paper, \r\n  Grid, \r\n  Snackbar, \r\n  Alert,\r\n  CircularProgress,\r\n  Breadcrumbs,\r\n  Link as MuiLink,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  SelectChangeEvent\r\n} from '@mui/material';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { Link, useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport { TextInput } from '../../../components/common/FormComponents';\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport programService from '../../../services/programService';\r\nimport departmentService from '../../../services/departmentService';\r\n\r\nconst ProgramForm: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { id } = useParams<{ id?: string }>();\r\n  const isEditing = Boolean(id);\r\n  \r\n  // Get departmentId from query param if present (for new programs)\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const initialDepartmentId = queryParams.get('departmentId') || '';\r\n  \r\n  const [departments, setDepartments] = useState<any[]>([]);\r\n  const [program, setProgram] = useState({\r\n    program_id: '',\r\n    department_id: initialDepartmentId,\r\n    name: '',\r\n    description: ''\r\n  });\r\n  \r\n  const [loading, setLoading] = useState(isEditing);\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState<{[key: string]: string}>({});\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' as 'success' | 'error' });\r\n\r\n  useEffect(() => {\r\n    const loadDepartments = async () => {\r\n      try {\r\n        const data = await departmentService.getAllDepartments();\r\n        setDepartments(data);\r\n      } catch (error) {\r\n        console.error('Error loading departments:', error);\r\n        setSnackbar({\r\n          open: true,\r\n          message: 'Failed to load departments',\r\n          severity: 'error'\r\n        });\r\n      }\r\n    };\r\n\r\n    loadDepartments();\r\n      \r\n    if (isEditing && id) {\r\n      const loadProgram = async () => {\r\n        try {\r\n          setLoading(true);\r\n          const data = await programService.getProgramById(id);\r\n          if (data) {\r\n            setProgram({\r\n              program_id: data.program_id,\r\n              department_id: data.department_id,\r\n              name: data.name,\r\n              description: data.description || ''\r\n            });\r\n          } else {\r\n            setSnackbar({\r\n              open: true,\r\n              message: 'Program not found',\r\n              severity: 'error'\r\n            });\r\n            navigate('/admin/programs');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error loading program:', error);\r\n          setSnackbar({\r\n            open: true,\r\n            message: 'Failed to load program',\r\n            severity: 'error'\r\n          });\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n    \r\n      loadProgram();\r\n    } else {\r\n      // For new programs, set an empty program_id instead of generating one\r\n      setProgram(prevProgram => ({\r\n        ...prevProgram,\r\n        program_id: '', // Changed from auto-generated to empty\r\n        department_id: initialDepartmentId\r\n      }));\r\n    }\r\n  }, [id, isEditing, navigate, initialDepartmentId]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors: {[key: string]: string} = {};\r\n    \r\n    if (!program.program_id.trim()) {\r\n      newErrors.program_id = 'Program ID is required';\r\n    } else if (!/^[A-Za-z0-9\\-_]+$/.test(program.program_id)) {\r\n      newErrors.program_id = 'Program ID can only contain letters, numbers, hyphens, and underscores';\r\n    }\r\n    \r\n    if (!program.name.trim()) {\r\n      newErrors.name = 'Program name is required';\r\n    }\r\n\r\n    if (!program.department_id) {\r\n      newErrors.department_id = 'Department is required';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n// In ProgramForm.tsx, update the handleSubmit function:\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n  \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      setSaving(true);\r\n      console.log('Submitting program data:', program);  // Add this line to debug\r\n    \r\n      if (isEditing && id) {\r\n        console.log(`Updating program with ID: ${id}`, program);\r\n        // Make sure you're passing the correct ID format\r\n        await programService.updateProgram(id, {\r\n          name: program.name,\r\n          description: program.description,\r\n          department_id: program.department_id // Make sure to include this\r\n        });\r\n      } else {\r\n        console.log('Creating new program:', program);\r\n        await programService.createProgram(program);\r\n      }\r\n    \r\n      setSnackbar({\r\n        open: true,\r\n        message: `Program ${isEditing ? 'updated' : 'created'} successfully`,\r\n        severity: 'success'\r\n      });\r\n    \r\n      // Navigate back after a brief delay\r\n      setTimeout(() => {\r\n        navigate('/admin/programs');\r\n      }, 1500);\r\n    } catch (error) {\r\n      console.error('Error saving program:', error);\r\n      setSnackbar({\r\n        open: true,\r\n        message: error instanceof Error ? error.message : `Failed to ${isEditing ? 'update' : 'create'} program`,\r\n        severity: 'error'\r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setProgram({\r\n      ...program,\r\n      [field]: e.target.value\r\n    });\r\n    \r\n    // Clear the error for this field if it exists\r\n    if (errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDepartmentChange = (event: SelectChangeEvent) => {\r\n    const newDepartmentId = event.target.value;\r\n    setProgram({\r\n      ...program,\r\n      department_id: newDepartmentId\r\n    });\r\n    \r\n    // Clear any department_id error\r\n    if (errors.department_id) {\r\n      setErrors({\r\n        ...errors,\r\n        department_id: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Breadcrumbs sx={{ mb: 2 }}>\r\n        <MuiLink component={Link} to=\"/admin/programs\" underline=\"hover\" color=\"inherit\">\r\n          Programs\r\n        </MuiLink>\r\n        <Typography color=\"text.primary\">\r\n          {isEditing ? 'Edit Program' : 'New Program'}\r\n        </Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          {isEditing ? 'Edit Program' : 'New Program'}\r\n        </Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          startIcon={<ArrowBackIcon />}\r\n          component={Link}\r\n          to=\"/admin/programs\"\r\n        >\r\n          Back to List\r\n        </Button>\r\n      </Box>\r\n\r\n      <Paper sx={{ p: 3 }}>\r\n        <Box component=\"form\" onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextInput\r\n                id=\"program_id\"\r\n                label=\"Program ID\"\r\n                value={program.program_id}\r\n                onChange={handleChange('program_id')}\r\n                error={errors.program_id}\r\n                required\r\n                disabled={isEditing} // ID can't be changed once created\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <FormControl fullWidth margin=\"normal\" error={!!errors.department_id}>\r\n                <InputLabel id=\"department-select-label\">Department *</InputLabel>\r\n                <Select\r\n                  labelId=\"department-select-label\"\r\n                  id=\"department_id\"\r\n                  value={program.department_id}\r\n                  label=\"Department *\"\r\n                  onChange={handleDepartmentChange}\r\n                  disabled={isEditing} // Can't change department once created\r\n                  required\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>Please select a department</em>\r\n                  </MenuItem>\r\n                  {departments.map((dept) => (\r\n                    <MenuItem key={dept.department_id} value={dept.department_id}>\r\n                      {dept.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n                {errors.department_id && (\r\n                  <Typography color=\"error\" variant=\"caption\">\r\n                    {errors.department_id}\r\n                  </Typography>\r\n                )}\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextInput\r\n                id=\"name\"\r\n                label=\"Program Name\"\r\n                value={program.name}\r\n                onChange={handleChange('name')}\r\n                error={errors.name}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextInput\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                value={program.description}\r\n                onChange={handleChange('description')}\r\n                error={errors.description}\r\n                multiline\r\n                rows={4}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<SaveIcon />}\r\n                disabled={saving}\r\n                sx={{ bgcolor: '#00539F' }}\r\n              >\r\n                {saving ? (\r\n                  <>\r\n                    <CircularProgress size={24} sx={{ mr: 1, color: 'white' }} />\r\n                    Saving...\r\n                  </>\r\n                ) : (\r\n                  'Save Program'\r\n                )}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProgramForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}