{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Documents\\\\Master's Colleges\\\\UNIVERSITY OF DELAWARE\\\\COURSES\\\\Project\\\\university-scheduler\\\\frontend\\\\src\\\\components\\\\admin\\\\professors\\\\ProfessorList.tsx\",\n  _s = $RefreshSig$();\n// ProfessorList.tsx\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Card, CardContent, CircularProgress, Container, FormControl, Grid, InputLabel, MenuItem, Paper, Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TextField, Typography, IconButton, AlertTitle, Alert } from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, Visibility as VisibilityIcon } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport professorService from '../../../services/professorService';\nimport departmentService from '../../../services/departmentService';\nimport ProfessorForm from \"./ProfessorForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfessorList = () => {\n  _s();\n  const [professors, setProfessors] = useState([]);\n  const [filteredProfessors, setFilteredProfessors] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [openForm, setOpenForm] = useState(false);\n  const [editProfessor, setEditProfessor] = useState(null);\n  const navigate = useNavigate();\n\n  // Fetch professors and departments\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null); // Reset any previous errors\n\n        let professorsLoaded = false;\n        let departmentsLoaded = false;\n        try {\n          console.log('Fetching professors...');\n          const professorsData = await professorService.getAllProfessors();\n          console.log('Professors data received:', professorsData);\n          setProfessors(professorsData);\n          setFilteredProfessors(professorsData);\n          professorsLoaded = true;\n        } catch (err) {\n          console.error('Error fetching professors:', err);\n          setError('Failed to fetch professors. Please ensure your backend server is running.');\n        }\n        try {\n          console.log('Fetching departments...');\n          const departmentsData = await departmentService.getAllDepartments();\n          console.log('Departments data received:', departmentsData);\n          setDepartments(departmentsData);\n          departmentsLoaded = true;\n        } catch (err) {\n          console.error('Error fetching departments:', err);\n          // Don't reference error state here to avoid dependency issues\n          if (!professorsLoaded) {\n            setError('Failed to fetch departments. Please ensure your backend server is running.');\n          }\n        }\n\n        // If nothing loaded, show a comprehensive error\n        if (!professorsLoaded && !departmentsLoaded) {\n          setError('Failed to load data. Please check your backend server connection and try again.');\n        }\n      } catch (err) {\n        console.error('Error in fetchData:', err);\n        setError('An unexpected error occurred. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array - only runs once on mount\n\n  // Filter professors when department or search term changes\n  useEffect(() => {\n    let filtered = [...professors];\n\n    // Apply department filter\n    if (selectedDepartment) {\n      filtered = filtered.filter(professor => professor.department_id === selectedDepartment);\n    }\n\n    // Apply search filter (case-insensitive)\n    if (searchTerm) {\n      const search = searchTerm.toLowerCase();\n      filtered = filtered.filter(professor => professor.first_name.toLowerCase().includes(search) || professor.last_name.toLowerCase().includes(search) || professor.email.toLowerCase().includes(search) || professor.professor_id.toLowerCase().includes(search));\n    }\n    setFilteredProfessors(filtered);\n    setPage(0); // Reset to first page when filters change\n  }, [professors, selectedDepartment, searchTerm]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDepartmentChange = event => {\n    setSelectedDepartment(event.target.value);\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleAddProfessor = () => {\n    setEditProfessor(null);\n    setOpenForm(true);\n  };\n  const handleEditProfessor = professor => {\n    setEditProfessor(professor);\n    setOpenForm(true);\n  };\n  const handleDeleteProfessor = async id => {\n    if (window.confirm('Are you sure you want to delete this professor?')) {\n      try {\n        await professorService.deleteProfessor(id);\n        setProfessors(professors.filter(p => p.professor_id !== id));\n      } catch (err) {\n        setError('Failed to delete professor. Please try again.');\n        console.error(err);\n      }\n    }\n  };\n  const handleCloseForm = () => {\n    setOpenForm(false);\n    setEditProfessor(null);\n  };\n  const handleSaveProfessor = async professor => {\n    try {\n      let savedProfessor;\n      if (professor.professor_id && editProfessor) {\n        // Update existing professor\n        savedProfessor = await professorService.updateProfessor(professor.professor_id, professor);\n        setProfessors(professors.map(p => p.professor_id === savedProfessor.professor_id ? savedProfessor : p));\n      } else {\n        // Create new professor\n        savedProfessor = await professorService.createProfessor(professor);\n        setProfessors([...professors, savedProfessor]);\n      }\n      handleCloseForm();\n    } catch (err) {\n      setError('Failed to save professor. Please try again.');\n      console.error(err);\n    }\n  };\n  const handleViewDetails = id => {\n    navigate(`/admin/professors/${id}`);\n  };\n\n  // Get department name by ID\n  const getDepartmentName = departmentId => {\n    const department = departments.find(dept => dept.department_id === departmentId);\n    return department ? department.name : 'Unknown Department';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        alignItems: \"center\",\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: \"Professors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          sx: {\n            textAlign: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 26\n            }, this),\n            onClick: handleAddProfessor,\n            children: \"Add Professor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Search Professors\",\n                variant: \"outlined\",\n                value: searchTerm,\n                onChange: handleSearchChange,\n                placeholder: \"Search by name, email, or ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"department-select-label\",\n                  children: \"Filter by Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"department-select-label\",\n                  value: selectedDepartment,\n                  onChange: handleDepartmentChange,\n                  label: \"Filter by Department\",\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"All Departments\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 21\n                  }, this), departments.map(department => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: department.department_id,\n                    children: department.name\n                  }, department.department_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              sx: {\n                textAlign: 'right'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: [filteredProfessors.length, \" professors found\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: '100%',\n          overflow: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          sx: {\n            maxHeight: 440\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            stickyHeader: true,\n            \"aria-label\": \"professors table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: filteredProfessors.length > 0 ? filteredProfessors.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(professor => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: professor.professor_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: `${professor.first_name} ${professor.last_name}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: professor.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: getDepartmentName(professor.department_id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"primary\",\n                    onClick: () => handleViewDetails(professor.professor_id),\n                    size: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"secondary\",\n                    onClick: () => handleEditProfessor(professor),\n                    size: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"error\",\n                    onClick: () => handleDeleteProfessor(professor.professor_id),\n                    size: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 25\n                }, this)]\n              }, professor.professor_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 5,\n                  align: \"center\",\n                  children: error ? 'Error loading data' : 'No professors found'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: filteredProfessors.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), openForm && /*#__PURE__*/_jsxDEV(ProfessorForm, {\n      open: openForm,\n      professor: editProfessor,\n      departments: departments,\n      onClose: handleCloseForm,\n      onSave: handleSaveProfessor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfessorList, \"2IIEaViOduVzbrsmbj8Wyr525b0=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfessorList;\nexport default ProfessorList;\nvar _c;\n$RefreshReg$(_c, \"ProfessorList\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Card","CardContent","CircularProgress","Container","FormControl","Grid","InputLabel","MenuItem","Paper","Select","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TextField","Typography","IconButton","AlertTitle","Alert","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Visibility","VisibilityIcon","useNavigate","professorService","departmentService","ProfessorForm","jsxDEV","_jsxDEV","ProfessorList","_s","professors","setProfessors","filteredProfessors","setFilteredProfessors","departments","setDepartments","selectedDepartment","setSelectedDepartment","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","searchTerm","setSearchTerm","openForm","setOpenForm","editProfessor","setEditProfessor","navigate","fetchData","professorsLoaded","departmentsLoaded","console","log","professorsData","getAllProfessors","err","departmentsData","getAllDepartments","filtered","filter","professor","department_id","search","toLowerCase","first_name","includes","last_name","email","professor_id","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDepartmentChange","handleSearchChange","handleAddProfessor","handleEditProfessor","handleDeleteProfessor","id","window","confirm","deleteProfessor","p","handleCloseForm","handleSaveProfessor","savedProfessor","updateProfessor","map","createProfessor","handleViewDetails","getDepartmentName","departmentId","department","find","dept","name","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","mt","mb","container","spacing","item","xs","md","variant","component","gutterBottom","textAlign","color","startIcon","onClick","severity","fullWidth","label","onChange","placeholder","labelId","length","width","overflow","maxHeight","stickyHeader","align","slice","hover","size","colSpan","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","open","onClose","onSave","_c","$RefreshReg$"],"sources":["C:/Users/shash/Documents/Master's Colleges/UNIVERSITY OF DELAWARE/COURSES/Project/university-scheduler/frontend/src/components/admin/professors/ProfessorList.tsx"],"sourcesContent":["// ProfessorList.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Container,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  AlertTitle,\r\n  Alert\r\n} from '@mui/material';\r\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, Visibility as VisibilityIcon } from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport professorService, { Professor } from '../../../services/professorService';\r\nimport departmentService, { Department } from '../../../services/departmentService';\r\nimport ProfessorForm from \"./ProfessorForm\";\r\n\r\nconst ProfessorList: React.FC = () => {\r\n  const [professors, setProfessors] = useState<Professor[]>([]);\r\n  const [filteredProfessors, setFilteredProfessors] = useState<Professor[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [openForm, setOpenForm] = useState(false);\r\n  const [editProfessor, setEditProfessor] = useState<Professor | null>(null);\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  // Fetch professors and departments\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null); // Reset any previous errors\r\n        \r\n        let professorsLoaded = false;\r\n        let departmentsLoaded = false;\r\n        \r\n        try {\r\n          console.log('Fetching professors...');\r\n          const professorsData = await professorService.getAllProfessors();\r\n          console.log('Professors data received:', professorsData);\r\n          setProfessors(professorsData);\r\n          setFilteredProfessors(professorsData);\r\n          professorsLoaded = true;\r\n        } catch (err) {\r\n          console.error('Error fetching professors:', err);\r\n          setError('Failed to fetch professors. Please ensure your backend server is running.');\r\n        }\r\n        \r\n        try {\r\n          console.log('Fetching departments...');\r\n          const departmentsData = await departmentService.getAllDepartments();\r\n          console.log('Departments data received:', departmentsData);\r\n          setDepartments(departmentsData);\r\n          departmentsLoaded = true;\r\n        } catch (err) {\r\n          console.error('Error fetching departments:', err);\r\n          // Don't reference error state here to avoid dependency issues\r\n          if (!professorsLoaded) {\r\n            setError('Failed to fetch departments. Please ensure your backend server is running.');\r\n          }\r\n        }\r\n        \r\n        // If nothing loaded, show a comprehensive error\r\n        if (!professorsLoaded && !departmentsLoaded) {\r\n          setError('Failed to load data. Please check your backend server connection and try again.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error in fetchData:', err);\r\n        setError('An unexpected error occurred. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Empty dependency array - only runs once on mount\r\n\r\n  // Filter professors when department or search term changes\r\n  useEffect(() => {\r\n    let filtered = [...professors];\r\n    \r\n    // Apply department filter\r\n    if (selectedDepartment) {\r\n      filtered = filtered.filter(\r\n        professor => professor.department_id === selectedDepartment\r\n      );\r\n    }\r\n    \r\n    // Apply search filter (case-insensitive)\r\n    if (searchTerm) {\r\n      const search = searchTerm.toLowerCase();\r\n      filtered = filtered.filter(\r\n        professor => \r\n          professor.first_name.toLowerCase().includes(search) ||\r\n          professor.last_name.toLowerCase().includes(search) ||\r\n          professor.email.toLowerCase().includes(search) ||\r\n          professor.professor_id.toLowerCase().includes(search)\r\n      );\r\n    }\r\n    \r\n    setFilteredProfessors(filtered);\r\n    setPage(0); // Reset to first page when filters change\r\n  }, [professors, selectedDepartment, searchTerm]);\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleDepartmentChange = (event: any) => {\r\n    setSelectedDepartment(event.target.value);\r\n  };\r\n\r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleAddProfessor = () => {\r\n    setEditProfessor(null);\r\n    setOpenForm(true);\r\n  };\r\n\r\n  const handleEditProfessor = (professor: Professor) => {\r\n    setEditProfessor(professor);\r\n    setOpenForm(true);\r\n  };\r\n\r\n  const handleDeleteProfessor = async (id: string) => {\r\n    if (window.confirm('Are you sure you want to delete this professor?')) {\r\n      try {\r\n        await professorService.deleteProfessor(id);\r\n        setProfessors(professors.filter(p => p.professor_id !== id));\r\n      } catch (err) {\r\n        setError('Failed to delete professor. Please try again.');\r\n        console.error(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCloseForm = () => {\r\n    setOpenForm(false);\r\n    setEditProfessor(null);\r\n  };\r\n\r\n  const handleSaveProfessor = async (professor: Professor) => {\r\n    try {\r\n      let savedProfessor: Professor;\r\n      \r\n      if (professor.professor_id && editProfessor) {\r\n        // Update existing professor\r\n        savedProfessor = await professorService.updateProfessor(professor.professor_id, professor);\r\n        setProfessors(professors.map(p => \r\n          p.professor_id === savedProfessor.professor_id ? savedProfessor : p\r\n        ));\r\n      } else {\r\n        // Create new professor\r\n        savedProfessor = await professorService.createProfessor(professor);\r\n        setProfessors([...professors, savedProfessor]);\r\n      }\r\n      \r\n      handleCloseForm();\r\n    } catch (err) {\r\n      setError('Failed to save professor. Please try again.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleViewDetails = (id: string) => {\r\n    navigate(`/admin/professors/${id}`);\r\n  };\r\n\r\n  // Get department name by ID\r\n  const getDepartmentName = (departmentId: string) => {\r\n    const department = departments.find(dept => dept.department_id === departmentId);\r\n    return department ? department.name : 'Unknown Department';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box sx={{ mt: 4, mb: 4 }}>\r\n        <Grid container spacing={3} alignItems=\"center\" sx={{ mb: 3 }}>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n              Professors\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={6} sx={{ textAlign: 'right' }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AddIcon />}\r\n              onClick={handleAddProfessor}\r\n            >\r\n              Add Professor\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n            <AlertTitle>Error</AlertTitle>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        <Card sx={{ mb: 4 }}>\r\n          <CardContent>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item xs={12} md={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Search Professors\"\r\n                  variant=\"outlined\"\r\n                  value={searchTerm}\r\n                  onChange={handleSearchChange}\r\n                  placeholder=\"Search by name, email, or ID\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"department-select-label\">Filter by Department</InputLabel>\r\n                  <Select\r\n                    labelId=\"department-select-label\"\r\n                    value={selectedDepartment}\r\n                    onChange={handleDepartmentChange}\r\n                    label=\"Filter by Department\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>All Departments</em>\r\n                    </MenuItem>\r\n                    {departments.map((department) => (\r\n                      <MenuItem key={department.department_id} value={department.department_id}>\r\n                        {department.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={4} sx={{ textAlign: 'right' }}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {filteredProfessors.length} professors found\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n          <TableContainer sx={{ maxHeight: 440 }}>\r\n            <Table stickyHeader aria-label=\"professors table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>ID</TableCell>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Email</TableCell>\r\n                  <TableCell>Department</TableCell>\r\n                  <TableCell align=\"right\">Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {filteredProfessors.length > 0 ? (\r\n                  filteredProfessors\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((professor) => (\r\n                      <TableRow key={professor.professor_id} hover>\r\n                        <TableCell>{professor.professor_id}</TableCell>\r\n                        <TableCell>{`${professor.first_name} ${professor.last_name}`}</TableCell>\r\n                        <TableCell>{professor.email}</TableCell>\r\n                        <TableCell>{getDepartmentName(professor.department_id)}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <IconButton \r\n                            color=\"primary\" \r\n                            onClick={() => handleViewDetails(professor.professor_id)}\r\n                            size=\"small\"\r\n                          >\r\n                            <VisibilityIcon />\r\n                          </IconButton>\r\n                          <IconButton \r\n                            color=\"secondary\" \r\n                            onClick={() => handleEditProfessor(professor)}\r\n                            size=\"small\"\r\n                          >\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                          <IconButton \r\n                            color=\"error\" \r\n                            onClick={() => handleDeleteProfessor(professor.professor_id)}\r\n                            size=\"small\"\r\n                          >\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                ) : (\r\n                  <TableRow>\r\n                    <TableCell colSpan={5} align=\"center\">\r\n                      {error ? 'Error loading data' : 'No professors found'}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={filteredProfessors.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Box>\r\n\r\n      {/* Professor Form Dialog */}\r\n      {openForm && (\r\n        <ProfessorForm\r\n          open={openForm}\r\n          professor={editProfessor}\r\n          departments={departments}\r\n          onClose={handleCloseForm}\r\n          onSave={handleSaveProfessor}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfessorList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}