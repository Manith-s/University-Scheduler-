{"ast":null,"code":"var _jsxFileName = \"/Users/tanvinaraynagowda/University-Scheduler--1/frontend/src/components/admin/courses/CourseList.tsx\",\n  _s = $RefreshSig$();\n// src/components/admin/courses/CourseList.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, FormControl, InputLabel, Select, MenuItem, TextField, InputAdornment, CircularProgress, Alert, Snackbar, FormGroup, FormControlLabel, Checkbox, Switch, Grid } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useNavigate } from 'react-router-dom';\nimport DataTable from '../../../components/common/DataTable';\nimport ConfirmDialog from '../../../components/common/ConfirmDialog';\n\n// Import real API services\nimport departmentService from '../../../services/departmentService';\nimport programService from '../../../services/programService';\nimport courseService from '../../../services/courseService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseList = () => {\n  _s();\n  var _programs$find;\n  const navigate = useNavigate();\n  const [departments, setDepartments] = useState([]);\n  const [programs, setPrograms] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState('ALL');\n  const [selectedProgram, setSelectedProgram] = useState('');\n  const [courses, setCourses] = useState([]);\n  const [loadingDepartments, setLoadingDepartments] = useState(false);\n  const [loadingPrograms, setLoadingPrograms] = useState(false);\n  const [loadingCourses, setLoadingCourses] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false); // Renamed from deletingCourses to actually use it\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showCoreOnly, setShowCoreOnly] = useState(false);\n  const [selectedSemesters, setSelectedSemesters] = useState(['Fall', 'Spring']);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [coursesToDelete, setCoursesToDelete] = useState([]);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const columns = [{\n    id: 'course_id',\n    label: 'Course ID',\n    minWidth: 100\n  }, {\n    id: 'program_id',\n    label: 'Program ID',\n    minWidth: 100\n  }, {\n    id: 'course_name',\n    label: 'Name',\n    minWidth: 170\n  }, {\n    id: 'duration_minutes',\n    label: 'Duration (min)',\n    minWidth: 120,\n    align: 'right',\n    format: value => (value === null || value === void 0 ? void 0 : value.toString()) || '0'\n  }, {\n    id: 'numClasses',\n    label: 'Classes',\n    minWidth: 80,\n    align: 'right',\n    format: value => {\n      console.log('Formatting numClasses value:', value);\n      return (value === null || value === void 0 ? void 0 : value.toString()) || '1';\n    }\n  }, {\n    id: 'is_core',\n    label: 'Core Course',\n    minWidth: 120,\n    format: value => {\n      return value === true ? 'Core' : 'Elective';\n    }\n  }, {\n    id: 'semesters',\n    label: 'Semesters',\n    minWidth: 120,\n    format: value => {\n      console.log('Semester value:', value); // Add this debug log\n      if (!value) return '';\n      return Array.isArray(value) ? value.join(', ') : String(value);\n    }\n  }];\n  // Load departments on component mount\n  useEffect(() => {\n    const loadDepartments = async () => {\n      try {\n        setLoadingDepartments(true);\n        const data = await departmentService.getAllDepartments();\n        setDepartments(data);\n      } catch (error) {\n        console.error('Error loading departments:', error);\n        setSnackbar({\n          open: true,\n          message: 'Failed to load departments',\n          severity: 'error'\n        });\n      } finally {\n        setLoadingDepartments(false);\n      }\n    };\n    loadDepartments();\n  }, []);\n\n  // Load programs when department is selected\n  useEffect(() => {\n    if (selectedDepartment) {\n      const loadPrograms = async () => {\n        try {\n          setLoadingPrograms(true);\n          setPrograms([]);\n          setSelectedProgram('');\n          setCourses([]);\n          const data = await programService.getProgramsByDepartment(selectedDepartment);\n          setPrograms(data);\n        } catch (error) {\n          console.error('Error loading programs:', error);\n          setSnackbar({\n            open: true,\n            message: 'Failed to load programs',\n            severity: 'error'\n          });\n        } finally {\n          setLoadingPrograms(false);\n        }\n      };\n      loadPrograms();\n    } else {\n      setPrograms([]);\n      setSelectedProgram('');\n      setCourses([]);\n    }\n  }, [selectedDepartment]);\n\n  // Load courses when program is selected\n  useEffect(() => {\n    if (selectedProgram) {\n      loadCourses(selectedProgram);\n    } else {\n      setCourses([]);\n    }\n  }, [selectedProgram]);\n  const [initialLoadAttempted, setInitialLoadAttempted] = useState(false);\n  useEffect(() => {\n    const loadInitialCourses = async () => {\n      try {\n        setLoadingCourses(true);\n        // Try to load all courses\n        const data = await courseService.getAllCourses();\n        console.log('Initial courses load result:', data);\n        if (data && data.length > 0) {\n          setCourses(data);\n        } else {\n          console.log('No courses found during initial load');\n        }\n      } catch (error) {\n        console.error('Error during initial courses load:', error);\n      } finally {\n        setLoadingCourses(false);\n        setInitialLoadAttempted(true);\n      }\n    };\n    loadInitialCourses();\n  }, []);\n\n  // useEffect for initial loading of all courses\n  useEffect(() => {\n    // Load all courses when component first mounts\n    loadAllCourses();\n  }, []);\n\n  // Updated loadCourses function using direct fetch\n  const loadAllCourses = async () => {\n    try {\n      setLoadingCourses(true);\n      const data = await courseService.getAllCourses();\n\n      // Normalize course data to ensure consistent semester format\n      const normalizedCourses = data.map(course => ({\n        ...course,\n        program_id: course.program_id || (course.programs && course.programs.length > 0 ? course.programs[0].program_id : ''),\n        // Make sure semesters is always an array of actual values from the database\n        semesters: Array.isArray(course.semesters) ? course.semesters : course.semesters ? [course.semesters] : []\n      }));\n      setCourses(normalizedCourses);\n    } catch (error) {\n      console.error('Error loading all courses:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to load courses',\n        severity: 'error'\n      });\n      setCourses([]);\n    } finally {\n      setLoadingCourses(false);\n    }\n  };\n  const loadCourses = async programId => {\n    try {\n      setLoadingCourses(true);\n      console.log(`Loading courses for program: ${programId}`);\n      const coursesData = await courseService.getCoursesByProgram(programId);\n\n      // Ensure we have an array\n      const coursesArray = Array.isArray(coursesData) ? coursesData : [];\n\n      // Log the courses data for debugging\n      console.log('Courses data received:', coursesArray);\n\n      // Normalize the data format\n      const normalizedCourses = coursesArray.map(course => ({\n        ...course,\n        // Spread all properties from the original course\n        course_id: course.course_id,\n        program_id: programId,\n        course_name: course.course_name || course.name || '',\n        name: course.course_name || course.name || '',\n        description: course.description || '',\n        department_id: course.department_id || '',\n        duration_minutes: course.duration_minutes || 0,\n        is_core: Boolean(course.is_core),\n        // Use type assertion to avoid TypeScript error\n        numClasses: course.num_classes || course.numClasses || 1,\n        semesters: Array.isArray(course.semesters) ? course.semesters : course.semesters ? [course.semesters] : [],\n        created_at: course.created_at || new Date().toISOString(),\n        updated_at: course.updated_at || new Date().toISOString()\n      }));\n      console.log('Normalized courses:', normalizedCourses);\n      setCourses(normalizedCourses);\n    } catch (error) {\n      console.error('Error loading courses:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to load courses. Check the console for details.',\n        severity: 'error'\n      });\n      setCourses([]);\n    } finally {\n      setLoadingCourses(false);\n    }\n  };\n  const handleDepartmentChange = event => {\n    setSelectedDepartment(event.target.value);\n  };\n  const handleProgramChange = event => {\n    setSelectedProgram(event.target.value);\n  };\n  const handleAddCourse = () => {\n    if (selectedProgram) {\n      navigate(`/admin/courses/new?programId=${selectedProgram}`);\n    } else {\n      setSnackbar({\n        open: true,\n        message: 'Please select a department and program first',\n        severity: 'error'\n      });\n    }\n  };\n  const handleEditCourse = id => {\n    navigate(`/admin/courses/${id}/edit`);\n  };\n  const handleDeleteClick = ids => {\n    const idsArray = Array.isArray(ids) ? ids : [ids];\n    console.log('Delete clicked for courses:', idsArray);\n    setCoursesToDelete(idsArray);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteConfirm = async () => {\n    try {\n      setIsDeleting(true); // Use the isDeleting state\n      console.log(`CourseList: Deleting courses: ${coursesToDelete.join(', ')}`);\n\n      // Call the courseService.deleteCourses method\n      const result = await courseService.deleteCourses(coursesToDelete);\n      if (result.success) {\n        // Remove deleted courses from state\n        setCourses(prevCourses => prevCourses.filter(course => !coursesToDelete.includes(course.course_id)));\n        setSnackbar({\n          open: true,\n          message: result.message || 'Courses deleted successfully',\n          severity: 'success'\n        });\n      } else {\n        setSnackbar({\n          open: true,\n          message: result.message || 'Failed to delete courses',\n          severity: 'error'\n        });\n      }\n    } catch (error) {\n      console.error('Error deleting courses:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to delete courses',\n        severity: 'error'\n      });\n    } finally {\n      setDeleteDialogOpen(false);\n      setCoursesToDelete([]);\n      setIsDeleting(false); // Reset isDeleting state\n    }\n  };\n  const handleRowClick = id => {\n    navigate(`/admin/courses/${id}`);\n  };\n\n  // Filter courses based on Semester checkbox \n  const SemesterFilter = ({\n    selectedSemesters,\n    onChange\n  }) => {\n    const handleChange = event => {\n      const {\n        value,\n        checked\n      } = event.target;\n      if (checked) {\n        onChange([...selectedSemesters, value]);\n      } else {\n        onChange(selectedSemesters.filter(semester => semester !== value));\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        children: \"Semester\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedSemesters.includes('Fall'),\n            onChange: handleChange,\n            value: \"Fall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this),\n          label: \"Fall\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedSemesters.includes('Spring'),\n            onChange: handleChange,\n            value: \"Spring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this),\n          label: \"Spring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Simplified filtering logic\n  // Simplified filtering logic\n  const filteredCourses = courses.map(course => {\n    // Clone the course to avoid modifying the original\n    const courseCopy = {\n      ...course\n    };\n\n    // If it's in \"All Courses\" mode (no program selected) and we're filtering by semesters\n    if (!selectedProgram && selectedSemesters.length > 0) {\n      // Instead of showing all semesters, filter to only show the selected ones\n      // This makes the display consistent with what the user has selected\n      courseCopy.semesters = Array.isArray(courseCopy.semesters) ? courseCopy.semesters.filter(sem => selectedSemesters.includes(sem)) : [];\n    }\n    return courseCopy;\n  }).filter(course => {\n    var _course$course_id, _course$course_name;\n    // Search filtering\n    const searchMatch = !searchTerm || ((_course$course_id = course.course_id) === null || _course$course_id === void 0 ? void 0 : _course$course_id.toLowerCase().includes(searchTerm.toLowerCase())) || ((_course$course_name = course.course_name) === null || _course$course_name === void 0 ? void 0 : _course$course_name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n    // Core course filtering\n    const coreMatch = !showCoreOnly || course.is_core;\n\n    // Semester filtering\n    const semesterMatch = selectedSemesters.length === 0 || course.semesters && course.semesters.some(sem => selectedSemesters.includes(sem));\n\n    // Department filtering - only apply if a department is selected\n    const departmentMatch = !selectedDepartment || selectedDepartment === 'ALL' || course.department_id === selectedDepartment;\n\n    // Program filtering - only apply if a program is selected\n    const programMatch = !selectedProgram || course.program_id === selectedProgram;\n    return searchMatch && coreMatch && semesterMatch && departmentMatch && programMatch;\n  });\n\n  // Debug logging\n  console.log('Selected semesters:', selectedSemesters);\n  console.log('Total courses:', courses.length);\n  console.log('Filtered courses:', filteredCourses.length);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 22\n        }, this),\n        onClick: handleAddCourse,\n        sx: {\n          bgcolor: '#00539F'\n        },\n        disabled: !selectedProgram,\n        children: \"Add Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"department-select-label\",\n              children: \"Select Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"department-select-label\",\n              id: \"department-select\",\n              value: selectedDepartment,\n              label: \"Select Department\",\n              onChange: handleDepartmentChange,\n              disabled: loadingDepartments,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"Select a department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 17\n              }, this), departments.map(dept => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: dept.department_id,\n                children: dept.name\n              }, dept.department_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              mb: 2\n            },\n            disabled: !selectedDepartment || loadingPrograms,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"program-select-label\",\n              children: \"Select Program\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"program-select-label\",\n              id: \"program-select\",\n              value: selectedProgram,\n              label: \"Select Program\",\n              onChange: handleProgramChange,\n              disabled: !selectedDepartment || loadingPrograms,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"Select a program\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 17\n              }, this), programs.map(prog => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: prog.program_id,\n                children: prog.name\n              }, prog.program_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(SemesterFilter, {\n          selectedSemesters: selectedSemesters,\n          onChange: setSelectedSemesters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          placeholder: \"Search courses...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this)\n          },\n          sx: {\n            width: '70%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: showCoreOnly,\n              onChange: e => setShowCoreOnly(e.target.checked),\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this),\n            label: \"Core Courses Only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), loadingDepartments || loadingPrograms || loadingCourses ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 9\n    }, this) : initialLoadAttempted && courses.length === 0 && !selectedDepartment && !selectedProgram ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: \"No courses found in the system\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"To add a new course, click the \\\"ADD COURSE\\\" button in the top right corner.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        sx: {\n          mt: 2\n        },\n        children: \"Or select a department and program to view specific courses.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this) : filteredCourses.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        gutterBottom: true,\n        children: \"No courses match your current filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"Try changing your department, program, or semester selections.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: filteredCourses,\n      title: selectedProgram ? `Courses - ${((_programs$find = programs.find(p => p.program_id === selectedProgram)) === null || _programs$find === void 0 ? void 0 : _programs$find.name) || ''}` : \"All Courses\",\n      onEdit: handleEditCourse,\n      onDelete: handleDeleteClick,\n      onRowClick: handleRowClick,\n      selectable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      open: deleteDialogOpen,\n      title: \"Delete Course\",\n      message: `Are you sure you want to delete ${coursesToDelete.length > 1 ? 'these courses' : 'this course'}? This action cannot be undone.`,\n      onConfirm: handleDeleteConfirm,\n      onCancel: () => setDeleteDialogOpen(false),\n      confirmText: \"Delete\",\n      severity: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSnackbar({\n          ...snackbar,\n          open: false\n        }),\n        severity: snackbar.severity,\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseList, \"6TWMz25j6DYIGb60XTsOch1svZI=\", false, function () {\n  return [useNavigate];\n});\n_c = CourseList;\nexport default CourseList;\nvar _c;\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","FormControl","InputLabel","Select","MenuItem","TextField","InputAdornment","CircularProgress","Alert","Snackbar","FormGroup","FormControlLabel","Checkbox","Switch","Grid","AddIcon","SearchIcon","useNavigate","DataTable","ConfirmDialog","departmentService","programService","courseService","jsxDEV","_jsxDEV","CourseList","_s","_programs$find","navigate","departments","setDepartments","programs","setPrograms","selectedDepartment","setSelectedDepartment","selectedProgram","setSelectedProgram","courses","setCourses","loadingDepartments","setLoadingDepartments","loadingPrograms","setLoadingPrograms","loadingCourses","setLoadingCourses","isDeleting","setIsDeleting","searchTerm","setSearchTerm","showCoreOnly","setShowCoreOnly","selectedSemesters","setSelectedSemesters","deleteDialogOpen","setDeleteDialogOpen","coursesToDelete","setCoursesToDelete","snackbar","setSnackbar","open","message","severity","columns","id","label","minWidth","align","format","value","toString","console","log","Array","isArray","join","String","loadDepartments","data","getAllDepartments","error","loadPrograms","getProgramsByDepartment","loadCourses","initialLoadAttempted","setInitialLoadAttempted","loadInitialCourses","getAllCourses","length","loadAllCourses","normalizedCourses","map","course","program_id","semesters","programId","coursesData","getCoursesByProgram","coursesArray","course_id","course_name","name","description","department_id","duration_minutes","is_core","Boolean","numClasses","num_classes","created_at","Date","toISOString","updated_at","handleDepartmentChange","event","target","handleProgramChange","handleAddCourse","handleEditCourse","handleDeleteClick","ids","idsArray","handleDeleteConfirm","result","deleteCourses","success","prevCourses","filter","includes","handleRowClick","SemesterFilter","onChange","handleChange","checked","semester","sx","mb","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","control","filteredCourses","courseCopy","sem","_course$course_id","_course$course_name","searchMatch","toLowerCase","coreMatch","semesterMatch","some","departmentMatch","programMatch","justifyContent","alignItems","component","color","startIcon","onClick","bgcolor","disabled","container","spacing","item","xs","md","fullWidth","labelId","dept","prog","placeholder","e","InputProps","startAdornment","position","width","my","textAlign","py","mt","title","find","p","onEdit","onDelete","onRowClick","selectable","onConfirm","onCancel","confirmText","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["/Users/tanvinaraynagowda/University-Scheduler--1/frontend/src/components/admin/courses/CourseList.tsx"],"sourcesContent":["// src/components/admin/courses/CourseList.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Button, \n  Typography, \n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  InputAdornment,\n  CircularProgress,\n  Alert,\n  Snackbar,\n  SelectChangeEvent,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Switch,\n  Grid\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useNavigate } from 'react-router-dom';\nimport DataTable from '../../../components/common/DataTable';\nimport ConfirmDialog from '../../../components/common/ConfirmDialog';\n\n// Import real API services\nimport departmentService from '../../../services/departmentService';\nimport programService from '../../../services/programService';\nimport courseService, { Course } from '../../../services/courseService';\n\nconst CourseList: React.FC = () => {\n  const navigate = useNavigate();\n  const [departments, setDepartments] = useState<any[]>([]);\n  const [programs, setPrograms] = useState<any[]>([]);\n  const [selectedDepartment, setSelectedDepartment] = useState<string>('ALL');\n  const [selectedProgram, setSelectedProgram] = useState<string>('');\n  const [courses, setCourses] = useState<Course[]>([]);\n  const [loadingDepartments, setLoadingDepartments] = useState(false);\n  const [loadingPrograms, setLoadingPrograms] = useState(false);\n  const [loadingCourses, setLoadingCourses] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false); // Renamed from deletingCourses to actually use it\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showCoreOnly, setShowCoreOnly] = useState(false);\n  const [selectedSemesters, setSelectedSemesters] = useState<string[]>(['Fall', 'Spring']);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [coursesToDelete, setCoursesToDelete] = useState<string[]>([]);\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' as 'success' | 'error' });\n\n  const columns = [\n    { id: 'course_id', label: 'Course ID', minWidth: 100 },\n    { id: 'program_id', label: 'Program ID', minWidth: 100 },\n    { id: 'course_name', label: 'Name', minWidth: 170 },\n    { \n      id: 'duration_minutes', \n      label: 'Duration (min)', \n      minWidth: 120,\n      align: 'right' as const,\n      format: (value: number | undefined) => value?.toString() || '0'\n    },\n    {\n      id: 'numClasses',\n      label: 'Classes',\n      minWidth: 80,\n      align: 'right' as const,\n      format: (value: number | undefined) => {\n      console.log('Formatting numClasses value:', value);\n      return value?.toString() || '1';\n    }\n    },\n    { \n      id: 'is_core', \n    label: 'Core Course', \n    minWidth: 120,\n    format: (value: boolean | undefined) => {\n      return value === true ? 'Core' : 'Elective';\n      }\n    },\n    {\n      id: 'semesters',\n    label: 'Semesters',\n    minWidth: 120,\n    format: (value: string[] | string | undefined | null) => {\n      console.log('Semester value:', value); // Add this debug log\n      if (!value) return '';\n      return Array.isArray(value) ? value.join(', ') : String(value);\n      }\n    },\n  ];\n  // Load departments on component mount\n  useEffect(() => {\n    const loadDepartments = async () => {\n      try {\n        setLoadingDepartments(true);\n        const data = await departmentService.getAllDepartments();\n        setDepartments(data);\n      } catch (error) {\n        console.error('Error loading departments:', error);\n        setSnackbar({\n          open: true,\n          message: 'Failed to load departments',\n          severity: 'error'\n        });\n      } finally {\n        setLoadingDepartments(false);\n      }\n    };\n\n    loadDepartments();\n  }, []);\n\n  // Load programs when department is selected\n  useEffect(() => {\n    if (selectedDepartment) {\n      const loadPrograms = async () => {\n        try {\n          setLoadingPrograms(true);\n          setPrograms([]);\n          setSelectedProgram('');\n          setCourses([]);\n          \n          const data = await programService.getProgramsByDepartment(selectedDepartment);\n          setPrograms(data);\n        } catch (error) {\n          console.error('Error loading programs:', error);\n          setSnackbar({\n            open: true,\n            message: 'Failed to load programs',\n            severity: 'error'\n          });\n        } finally {\n          setLoadingPrograms(false);\n        }\n      };\n\n      loadPrograms();\n    } else {\n      setPrograms([]);\n      setSelectedProgram('');\n      setCourses([]);\n    }\n  }, [selectedDepartment]);\n\n  // Load courses when program is selected\n  useEffect(() => {\n    if (selectedProgram) {\n      loadCourses(selectedProgram);\n    } else {\n      setCourses([]);\n    }\n  }, [selectedProgram]);\n\n  const [initialLoadAttempted, setInitialLoadAttempted] = useState(false);\n  useEffect(() => {\n    const loadInitialCourses = async () => {\n      try {\n        setLoadingCourses(true);\n        // Try to load all courses\n        const data = await courseService.getAllCourses();\n        console.log('Initial courses load result:', data);\n        \n        if (data && data.length > 0) {\n          setCourses(data);\n        } else {\n          console.log('No courses found during initial load');\n        }\n      } catch (error) {\n        console.error('Error during initial courses load:', error);\n      } finally {\n        setLoadingCourses(false);\n        setInitialLoadAttempted(true);\n      }\n    };\n  \n    loadInitialCourses();\n  }, []);\n\n  // useEffect for initial loading of all courses\nuseEffect(() => {\n  // Load all courses when component first mounts\n  loadAllCourses();\n}, []);\n\n  // Updated loadCourses function using direct fetch\n  const loadAllCourses = async () => {\n    try {\n      setLoadingCourses(true);\n      const data = await courseService.getAllCourses();\n      \n      // Normalize course data to ensure consistent semester format\n      const normalizedCourses = data.map(course => ({\n        ...course,\n        program_id: course.program_id || \n                 (course.programs && course.programs.length > 0 ? \n                  course.programs[0].program_id : ''),\n        // Make sure semesters is always an array of actual values from the database\n        semesters: Array.isArray(course.semesters) ? course.semesters : \n                 (course.semesters ? [course.semesters] : [])\n      }));\n      \n      setCourses(normalizedCourses);\n    } catch (error) {\n      console.error('Error loading all courses:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to load courses',\n        severity: 'error'\n      });\n      setCourses([]);\n    } finally {\n      setLoadingCourses(false);\n    }\n  };\n  const loadCourses = async (programId: string) => {\n    try {\n      setLoadingCourses(true);\n      \n      console.log(`Loading courses for program: ${programId}`);\n      \n      const coursesData = await courseService.getCoursesByProgram(programId);\n      \n      // Ensure we have an array\n      const coursesArray = Array.isArray(coursesData) ? coursesData : [];\n      \n      // Log the courses data for debugging\n      console.log('Courses data received:', coursesArray);\n      \n      // Normalize the data format\n      const normalizedCourses = coursesArray.map(course => ({\n        ...course, // Spread all properties from the original course\n        course_id: course.course_id,\n        program_id: programId,\n        course_name: course.course_name || course.name || '',\n        name: course.course_name || course.name || '',\n        description: course.description || '',\n        department_id: course.department_id || '',\n        duration_minutes: course.duration_minutes || 0,\n        is_core: Boolean(course.is_core),\n        // Use type assertion to avoid TypeScript error\n        numClasses: (course as any).num_classes || course.numClasses || 1,\n        semesters: Array.isArray(course.semesters) ? course.semesters : \n                 (course.semesters ? [course.semesters] : []),\n        created_at: course.created_at || new Date().toISOString(),\n        updated_at: course.updated_at || new Date().toISOString()\n      }));\n      \n      console.log('Normalized courses:', normalizedCourses);\n      setCourses(normalizedCourses);\n    } catch (error) {\n      console.error('Error loading courses:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to load courses. Check the console for details.',\n        severity: 'error'\n      });\n      setCourses([]);\n    } finally {\n      setLoadingCourses(false);\n    }\n  };\n  const handleDepartmentChange = (event: SelectChangeEvent) => {\n    setSelectedDepartment(event.target.value);\n  };\n\n  const handleProgramChange = (event: SelectChangeEvent) => {\n    setSelectedProgram(event.target.value);\n  };\n\n  const handleAddCourse = () => {\n    if (selectedProgram) {\n      navigate(`/admin/courses/new?programId=${selectedProgram}`);\n    } else {\n      setSnackbar({\n        open: true,\n        message: 'Please select a department and program first',\n        severity: 'error'\n      });\n    }\n  };\n\n  const handleEditCourse = (id: string) => {\n    navigate(`/admin/courses/${id}/edit`);\n  };\n\n  const handleDeleteClick = (ids: string | string[]) => {\n    const idsArray = Array.isArray(ids) ? ids : [ids];\n    console.log('Delete clicked for courses:', idsArray);\n    setCoursesToDelete(idsArray);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleDeleteConfirm = async () => {\n    try {\n      setIsDeleting(true); // Use the isDeleting state\n      console.log(`CourseList: Deleting courses: ${coursesToDelete.join(', ')}`);\n      \n      // Call the courseService.deleteCourses method\n      const result = await courseService.deleteCourses(coursesToDelete);\n      \n      if (result.success) {\n        // Remove deleted courses from state\n        setCourses(prevCourses => \n          prevCourses.filter(course => !coursesToDelete.includes(course.course_id))\n        );\n        \n        setSnackbar({\n          open: true,\n          message: result.message || 'Courses deleted successfully',\n          severity: 'success'\n        });\n      } else {\n        setSnackbar({\n          open: true,\n          message: result.message || 'Failed to delete courses',\n          severity: 'error'\n        });\n      }\n    } catch (error) {\n      console.error('Error deleting courses:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to delete courses',\n        severity: 'error'\n      });\n    } finally {\n      setDeleteDialogOpen(false);\n      setCoursesToDelete([]);\n      setIsDeleting(false); // Reset isDeleting state\n    }\n  };\n\n  const handleRowClick = (id: string) => {\n    navigate(`/admin/courses/${id}`);\n  };\n\n  // Filter courses based on Semester checkbox \n  const SemesterFilter: React.FC<{\n    selectedSemesters: string[];\n    onChange: (semesters: string[]) => void;\n  }> = ({ selectedSemesters, onChange }) => {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { value, checked } = event.target;\n      \n      if (checked) {\n        onChange([...selectedSemesters, value]);\n      } else {\n        onChange(selectedSemesters.filter(semester => semester !== value));\n      }\n    };\n\n    return (\n      <Box sx={{ mb: 2 }}>\n        <Typography variant=\"subtitle2\" gutterBottom>\n          Semester\n        </Typography>\n        <Box sx={{ display: 'flex', gap: 2 }}>\n          <FormControlLabel\n            control={\n              <Checkbox \n                checked={selectedSemesters.includes('Fall')}\n                onChange={handleChange}\n                value=\"Fall\"\n              />\n            }\n            label=\"Fall\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox \n                checked={selectedSemesters.includes('Spring')}\n                onChange={handleChange}\n                value=\"Spring\"\n              />\n            }\n            label=\"Spring\"\n          />\n        </Box>\n      </Box>\n    );\n  };\n\n  // Simplified filtering logic\n  // Simplified filtering logic\nconst filteredCourses = courses.map(course => {\n  // Clone the course to avoid modifying the original\n  const courseCopy = {...course};\n  \n  // If it's in \"All Courses\" mode (no program selected) and we're filtering by semesters\n  if (!selectedProgram && selectedSemesters.length > 0) {\n    // Instead of showing all semesters, filter to only show the selected ones\n    // This makes the display consistent with what the user has selected\n    courseCopy.semesters = Array.isArray(courseCopy.semesters)\n      ? courseCopy.semesters.filter(sem => selectedSemesters.includes(sem))\n      : [];\n  }\n  return courseCopy;\n}).filter(course => {\n    // Search filtering\n    const searchMatch = !searchTerm || \n      course.course_id?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      course.course_name?.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    // Core course filtering\n    const coreMatch = !showCoreOnly || course.is_core;\n    \n    // Semester filtering\n    const semesterMatch = selectedSemesters.length === 0 || \n      (course.semesters && course.semesters.some(sem => \n        selectedSemesters.includes(sem)\n      ));\n    \n    // Department filtering - only apply if a department is selected\n    const departmentMatch = !selectedDepartment || selectedDepartment === 'ALL' || \n      course.department_id === selectedDepartment;\n    \n    // Program filtering - only apply if a program is selected\n    const programMatch = !selectedProgram || \n      (course.program_id === selectedProgram);\n    \n    return searchMatch && coreMatch && semesterMatch && departmentMatch && programMatch;\n  });\n\n  // Debug logging\n  console.log('Selected semesters:', selectedSemesters);\n  console.log('Total courses:', courses.length);\n  console.log('Filtered courses:', filteredCourses.length);\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Courses\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleAddCourse}\n          sx={{ bgcolor: '#00539F' }}\n          disabled={!selectedProgram}\n        >\n          Add Course\n        </Button>\n      </Box>\n\n      <Box sx={{ mb: 4 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6}>\n            <FormControl fullWidth sx={{ mb: 2 }}>\n              <InputLabel id=\"department-select-label\">Select Department</InputLabel>\n              <Select\n                labelId=\"department-select-label\"\n                id=\"department-select\"\n                value={selectedDepartment}\n                label=\"Select Department\"\n                onChange={handleDepartmentChange}\n                disabled={loadingDepartments}\n              >\n                <MenuItem value=\"\">\n                  <em>Select a department</em>\n                </MenuItem>\n                {departments.map((dept) => (\n                  <MenuItem key={dept.department_id} value={dept.department_id}>\n                    {dept.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <FormControl fullWidth sx={{ mb: 2 }} disabled={!selectedDepartment || loadingPrograms}>\n              <InputLabel id=\"program-select-label\">Select Program</InputLabel>\n              <Select\n                labelId=\"program-select-label\"\n                id=\"program-select\"\n                value={selectedProgram}\n                label=\"Select Program\"\n                onChange={handleProgramChange}\n                disabled={!selectedDepartment || loadingPrograms}\n              >\n                <MenuItem value=\"\">\n                  <em>Select a program</em>\n                </MenuItem>\n                {programs.map((prog) => (\n                  <MenuItem key={prog.program_id} value={prog.program_id}>\n                    {prog.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <SemesterFilter \n            selectedSemesters={selectedSemesters}\n            onChange={setSelectedSemesters}\n          />\n        </Grid>\n    \n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <TextField\n            variant=\"outlined\"\n            placeholder=\"Search courses...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            sx={{ width: '70%' }}\n          />\n          <FormGroup>\n            <FormControlLabel \n              control={\n                <Switch\n                  checked={showCoreOnly}\n                  onChange={(e) => setShowCoreOnly(e.target.checked)}\n                  color=\"primary\"\n                />\n              } \n              label=\"Core Courses Only\" \n            />\n          </FormGroup>\n        </Box>\n      </Box>\n\n      {loadingDepartments || loadingPrograms || loadingCourses ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n        <CircularProgress />\n      </Box>\n    ) : initialLoadAttempted && courses.length === 0 && !selectedDepartment && !selectedProgram ? (\n      <Box sx={{ textAlign: 'center', py: 4 }}>\n        <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n          No courses found in the system\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          To add a new course, click the \"ADD COURSE\" button in the top right corner.\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2 }}>\n          Or select a department and program to view specific courses.\n        </Typography>\n      </Box>\n    ) : filteredCourses.length === 0 ? (\n      <Box sx={{ textAlign: 'center', py: 4 }}>\n        <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n          No courses match your current filters\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Try changing your department, program, or semester selections.\n        </Typography>\n      </Box>\n    ) : (\n      <DataTable\n        columns={columns}\n        data={filteredCourses}\n        title={selectedProgram \n          ? `Courses - ${programs.find(p => p.program_id === selectedProgram)?.name || ''}` \n          : \"All Courses\"}\n        onEdit={handleEditCourse}\n        onDelete={handleDeleteClick}\n        onRowClick={handleRowClick}\n        selectable\n      />\n    )}\n      <ConfirmDialog\n        open={deleteDialogOpen}\n        title=\"Delete Course\"\n        message={`Are you sure you want to delete ${coursesToDelete.length > 1 \n          ? 'these courses' \n          : 'this course'}? This action cannot be undone.`}\n        onConfirm={handleDeleteConfirm}\n        onCancel={() => setDeleteDialogOpen(false)}\n        confirmText=\"Delete\"\n        severity=\"error\"\n      />\n\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity}>\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default CourseList;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,MAAM,EACNC,UAAU,EACVC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,SAAS,EACTC,cAAc,EACdC,gBAAgB,EAChBC,KAAK,EACLC,QAAQ,EAERC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAM,EACNC,IAAI,QACC,eAAe;AACtB,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,aAAa,MAAM,0CAA0C;;AAEpE;AACA,OAAOC,iBAAiB,MAAM,qCAAqC;AACnE,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,aAAa,MAAkB,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,cAAA;EACjC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAQ,EAAE,CAAC;EACzD,MAAM,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAQ,EAAE,CAAC;EACnD,MAAM,CAACqC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtC,QAAQ,CAAS,KAAK,CAAC;EAC3E,MAAM,CAACuC,eAAe,EAAEC,kBAAkB,CAAC,GAAGxC,QAAQ,CAAS,EAAE,CAAC;EAClE,MAAM,CAACyC,OAAO,EAAEC,UAAU,CAAC,GAAG1C,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAAC2C,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAAC6C,eAAe,EAAEC,kBAAkB,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC+C,cAAc,EAAEC,iBAAiB,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACiD,UAAU,EAAEC,aAAa,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAM,CAACmD,UAAU,EAAEC,aAAa,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqD,YAAY,EAAEC,eAAe,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACuD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxD,QAAQ,CAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;EACxF,MAAM,CAACyD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC2D,eAAe,EAAEC,kBAAkB,CAAC,GAAG5D,QAAQ,CAAW,EAAE,CAAC;EACpE,MAAM,CAAC6D,QAAQ,EAAEC,WAAW,CAAC,GAAG9D,QAAQ,CAAC;IAAE+D,IAAI,EAAE,KAAK;IAAEC,OAAO,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAiC,CAAC,CAAC;EAElH,MAAMC,OAAO,GAAG,CACd;IAAEC,EAAE,EAAE,WAAW;IAAEC,KAAK,EAAE,WAAW;IAAEC,QAAQ,EAAE;EAAI,CAAC,EACtD;IAAEF,EAAE,EAAE,YAAY;IAAEC,KAAK,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAI,CAAC,EACxD;IAAEF,EAAE,EAAE,aAAa;IAAEC,KAAK,EAAE,MAAM;IAAEC,QAAQ,EAAE;EAAI,CAAC,EACnD;IACEF,EAAE,EAAE,kBAAkB;IACtBC,KAAK,EAAE,gBAAgB;IACvBC,QAAQ,EAAE,GAAG;IACbC,KAAK,EAAE,OAAgB;IACvBC,MAAM,EAAGC,KAAyB,IAAK,CAAAA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,QAAQ,CAAC,CAAC,KAAI;EAC9D,CAAC,EACD;IACEN,EAAE,EAAE,YAAY;IAChBC,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,OAAgB;IACvBC,MAAM,EAAGC,KAAyB,IAAK;MACvCE,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,KAAK,CAAC;MAClD,OAAO,CAAAA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,QAAQ,CAAC,CAAC,KAAI,GAAG;IACjC;EACA,CAAC,EACD;IACEN,EAAE,EAAE,SAAS;IACfC,KAAK,EAAE,aAAa;IACpBC,QAAQ,EAAE,GAAG;IACbE,MAAM,EAAGC,KAA0B,IAAK;MACtC,OAAOA,KAAK,KAAK,IAAI,GAAG,MAAM,GAAG,UAAU;IAC3C;EACF,CAAC,EACD;IACEL,EAAE,EAAE,WAAW;IACjBC,KAAK,EAAE,WAAW;IAClBC,QAAQ,EAAE,GAAG;IACbE,MAAM,EAAGC,KAA2C,IAAK;MACvDE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,KAAK,CAAC,CAAC,CAAC;MACvC,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;MACrB,OAAOI,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,GAAGA,KAAK,CAACM,IAAI,CAAC,IAAI,CAAC,GAAGC,MAAM,CAACP,KAAK,CAAC;IAC9D;EACF,CAAC,CACF;EACD;EACAvE,SAAS,CAAC,MAAM;IACd,MAAM+E,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACFpC,qBAAqB,CAAC,IAAI,CAAC;QAC3B,MAAMqC,IAAI,GAAG,MAAMzD,iBAAiB,CAAC0D,iBAAiB,CAAC,CAAC;QACxDhD,cAAc,CAAC+C,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDrB,WAAW,CAAC;UACVC,IAAI,EAAE,IAAI;UACVC,OAAO,EAAE,4BAA4B;UACrCC,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ,CAAC,SAAS;QACRrB,qBAAqB,CAAC,KAAK,CAAC;MAC9B;IACF,CAAC;IAEDoC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA/E,SAAS,CAAC,MAAM;IACd,IAAIoC,kBAAkB,EAAE;MACtB,MAAM+C,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC/B,IAAI;UACFtC,kBAAkB,CAAC,IAAI,CAAC;UACxBV,WAAW,CAAC,EAAE,CAAC;UACfI,kBAAkB,CAAC,EAAE,CAAC;UACtBE,UAAU,CAAC,EAAE,CAAC;UAEd,MAAMuC,IAAI,GAAG,MAAMxD,cAAc,CAAC4D,uBAAuB,CAAChD,kBAAkB,CAAC;UAC7ED,WAAW,CAAC6C,IAAI,CAAC;QACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdT,OAAO,CAACS,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;UAC/CrB,WAAW,CAAC;YACVC,IAAI,EAAE,IAAI;YACVC,OAAO,EAAE,yBAAyB;YAClCC,QAAQ,EAAE;UACZ,CAAC,CAAC;QACJ,CAAC,SAAS;UACRnB,kBAAkB,CAAC,KAAK,CAAC;QAC3B;MACF,CAAC;MAEDsC,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACLhD,WAAW,CAAC,EAAE,CAAC;MACfI,kBAAkB,CAAC,EAAE,CAAC;MACtBE,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC,EAAE,CAACL,kBAAkB,CAAC,CAAC;;EAExB;EACApC,SAAS,CAAC,MAAM;IACd,IAAIsC,eAAe,EAAE;MACnB+C,WAAW,CAAC/C,eAAe,CAAC;IAC9B,CAAC,MAAM;MACLG,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC,EAAE,CAACH,eAAe,CAAC,CAAC;EAErB,MAAM,CAACgD,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGxF,QAAQ,CAAC,KAAK,CAAC;EACvEC,SAAS,CAAC,MAAM;IACd,MAAMwF,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACFzC,iBAAiB,CAAC,IAAI,CAAC;QACvB;QACA,MAAMiC,IAAI,GAAG,MAAMvD,aAAa,CAACgE,aAAa,CAAC,CAAC;QAChDhB,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEM,IAAI,CAAC;QAEjD,IAAIA,IAAI,IAAIA,IAAI,CAACU,MAAM,GAAG,CAAC,EAAE;UAC3BjD,UAAU,CAACuC,IAAI,CAAC;QAClB,CAAC,MAAM;UACLP,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;QACrD;MACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D,CAAC,SAAS;QACRnC,iBAAiB,CAAC,KAAK,CAAC;QACxBwC,uBAAuB,CAAC,IAAI,CAAC;MAC/B;IACF,CAAC;IAEDC,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACFxF,SAAS,CAAC,MAAM;IACd;IACA2F,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEJ;EACA,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF5C,iBAAiB,CAAC,IAAI,CAAC;MACvB,MAAMiC,IAAI,GAAG,MAAMvD,aAAa,CAACgE,aAAa,CAAC,CAAC;;MAEhD;MACA,MAAMG,iBAAiB,GAAGZ,IAAI,CAACa,GAAG,CAACC,MAAM,KAAK;QAC5C,GAAGA,MAAM;QACTC,UAAU,EAAED,MAAM,CAACC,UAAU,KACnBD,MAAM,CAAC5D,QAAQ,IAAI4D,MAAM,CAAC5D,QAAQ,CAACwD,MAAM,GAAG,CAAC,GAC7CI,MAAM,CAAC5D,QAAQ,CAAC,CAAC,CAAC,CAAC6D,UAAU,GAAG,EAAE,CAAC;QAC7C;QACAC,SAAS,EAAErB,KAAK,CAACC,OAAO,CAACkB,MAAM,CAACE,SAAS,CAAC,GAAGF,MAAM,CAACE,SAAS,GACnDF,MAAM,CAACE,SAAS,GAAG,CAACF,MAAM,CAACE,SAAS,CAAC,GAAG;MACpD,CAAC,CAAC,CAAC;MAEHvD,UAAU,CAACmD,iBAAiB,CAAC;IAC/B,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDrB,WAAW,CAAC;QACVC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,wBAAwB;QACjCC,QAAQ,EAAE;MACZ,CAAC,CAAC;MACFvB,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,SAAS;MACRM,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;EACD,MAAMsC,WAAW,GAAG,MAAOY,SAAiB,IAAK;IAC/C,IAAI;MACFlD,iBAAiB,CAAC,IAAI,CAAC;MAEvB0B,OAAO,CAACC,GAAG,CAAC,gCAAgCuB,SAAS,EAAE,CAAC;MAExD,MAAMC,WAAW,GAAG,MAAMzE,aAAa,CAAC0E,mBAAmB,CAACF,SAAS,CAAC;;MAEtE;MACA,MAAMG,YAAY,GAAGzB,KAAK,CAACC,OAAO,CAACsB,WAAW,CAAC,GAAGA,WAAW,GAAG,EAAE;;MAElE;MACAzB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE0B,YAAY,CAAC;;MAEnD;MACA,MAAMR,iBAAiB,GAAGQ,YAAY,CAACP,GAAG,CAACC,MAAM,KAAK;QACpD,GAAGA,MAAM;QAAE;QACXO,SAAS,EAAEP,MAAM,CAACO,SAAS;QAC3BN,UAAU,EAAEE,SAAS;QACrBK,WAAW,EAAER,MAAM,CAACQ,WAAW,IAAIR,MAAM,CAACS,IAAI,IAAI,EAAE;QACpDA,IAAI,EAAET,MAAM,CAACQ,WAAW,IAAIR,MAAM,CAACS,IAAI,IAAI,EAAE;QAC7CC,WAAW,EAAEV,MAAM,CAACU,WAAW,IAAI,EAAE;QACrCC,aAAa,EAAEX,MAAM,CAACW,aAAa,IAAI,EAAE;QACzCC,gBAAgB,EAAEZ,MAAM,CAACY,gBAAgB,IAAI,CAAC;QAC9CC,OAAO,EAAEC,OAAO,CAACd,MAAM,CAACa,OAAO,CAAC;QAChC;QACAE,UAAU,EAAGf,MAAM,CAASgB,WAAW,IAAIhB,MAAM,CAACe,UAAU,IAAI,CAAC;QACjEb,SAAS,EAAErB,KAAK,CAACC,OAAO,CAACkB,MAAM,CAACE,SAAS,CAAC,GAAGF,MAAM,CAACE,SAAS,GACnDF,MAAM,CAACE,SAAS,GAAG,CAACF,MAAM,CAACE,SAAS,CAAC,GAAG,EAAG;QACrDe,UAAU,EAAEjB,MAAM,CAACiB,UAAU,IAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACzDC,UAAU,EAAEpB,MAAM,CAACoB,UAAU,IAAI,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MAC1D,CAAC,CAAC,CAAC;MAEHxC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEkB,iBAAiB,CAAC;MACrDnD,UAAU,CAACmD,iBAAiB,CAAC;IAC/B,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CrB,WAAW,CAAC;QACVC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,wDAAwD;QACjEC,QAAQ,EAAE;MACZ,CAAC,CAAC;MACFvB,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,SAAS;MACRM,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;EACD,MAAMoE,sBAAsB,GAAIC,KAAwB,IAAK;IAC3D/E,qBAAqB,CAAC+E,KAAK,CAACC,MAAM,CAAC9C,KAAK,CAAC;EAC3C,CAAC;EAED,MAAM+C,mBAAmB,GAAIF,KAAwB,IAAK;IACxD7E,kBAAkB,CAAC6E,KAAK,CAACC,MAAM,CAAC9C,KAAK,CAAC;EACxC,CAAC;EAED,MAAMgD,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIjF,eAAe,EAAE;MACnBP,QAAQ,CAAC,gCAAgCO,eAAe,EAAE,CAAC;IAC7D,CAAC,MAAM;MACLuB,WAAW,CAAC;QACVC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,8CAA8C;QACvDC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMwD,gBAAgB,GAAItD,EAAU,IAAK;IACvCnC,QAAQ,CAAC,kBAAkBmC,EAAE,OAAO,CAAC;EACvC,CAAC;EAED,MAAMuD,iBAAiB,GAAIC,GAAsB,IAAK;IACpD,MAAMC,QAAQ,GAAGhD,KAAK,CAACC,OAAO,CAAC8C,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACA,GAAG,CAAC;IACjDjD,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEiD,QAAQ,CAAC;IACpDhE,kBAAkB,CAACgE,QAAQ,CAAC;IAC5BlE,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMmE,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF3E,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;MACrBwB,OAAO,CAACC,GAAG,CAAC,iCAAiChB,eAAe,CAACmB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;;MAE1E;MACA,MAAMgD,MAAM,GAAG,MAAMpG,aAAa,CAACqG,aAAa,CAACpE,eAAe,CAAC;MAEjE,IAAImE,MAAM,CAACE,OAAO,EAAE;QAClB;QACAtF,UAAU,CAACuF,WAAW,IACpBA,WAAW,CAACC,MAAM,CAACnC,MAAM,IAAI,CAACpC,eAAe,CAACwE,QAAQ,CAACpC,MAAM,CAACO,SAAS,CAAC,CAC1E,CAAC;QAEDxC,WAAW,CAAC;UACVC,IAAI,EAAE,IAAI;UACVC,OAAO,EAAE8D,MAAM,CAAC9D,OAAO,IAAI,8BAA8B;UACzDC,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ,CAAC,MAAM;QACLH,WAAW,CAAC;UACVC,IAAI,EAAE,IAAI;UACVC,OAAO,EAAE8D,MAAM,CAAC9D,OAAO,IAAI,0BAA0B;UACrDC,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CrB,WAAW,CAAC;QACVC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,0BAA0B;QACnCC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,SAAS;MACRP,mBAAmB,CAAC,KAAK,CAAC;MAC1BE,kBAAkB,CAAC,EAAE,CAAC;MACtBV,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;EAED,MAAMkF,cAAc,GAAIjE,EAAU,IAAK;IACrCnC,QAAQ,CAAC,kBAAkBmC,EAAE,EAAE,CAAC;EAClC,CAAC;;EAED;EACA,MAAMkE,cAGJ,GAAGA,CAAC;IAAE9E,iBAAiB;IAAE+E;EAAS,CAAC,KAAK;IACxC,MAAMC,YAAY,GAAIlB,KAA0C,IAAK;MACnE,MAAM;QAAE7C,KAAK;QAAEgE;MAAQ,CAAC,GAAGnB,KAAK,CAACC,MAAM;MAEvC,IAAIkB,OAAO,EAAE;QACXF,QAAQ,CAAC,CAAC,GAAG/E,iBAAiB,EAAEiB,KAAK,CAAC,CAAC;MACzC,CAAC,MAAM;QACL8D,QAAQ,CAAC/E,iBAAiB,CAAC2E,MAAM,CAACO,QAAQ,IAAIA,QAAQ,KAAKjE,KAAK,CAAC,CAAC;MACpE;IACF,CAAC;IAED,oBACE5C,OAAA,CAAC1B,GAAG;MAACwI,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,gBACjBhH,OAAA,CAACxB,UAAU;QAACyI,OAAO,EAAC,WAAW;QAACC,YAAY;QAAAF,QAAA,EAAC;MAE7C;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbtH,OAAA,CAAC1B,GAAG;QAACwI,EAAE,EAAE;UAAES,OAAO,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAE,CAAE;QAAAR,QAAA,gBACnChH,OAAA,CAACb,gBAAgB;UACfsI,OAAO,eACLzH,OAAA,CAACZ,QAAQ;YACPwH,OAAO,EAAEjF,iBAAiB,CAAC4E,QAAQ,CAAC,MAAM,CAAE;YAC5CG,QAAQ,EAAEC,YAAa;YACvB/D,KAAK,EAAC;UAAM;YAAAuE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CACF;UACD9E,KAAK,EAAC;QAAM;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eACFtH,OAAA,CAACb,gBAAgB;UACfsI,OAAO,eACLzH,OAAA,CAACZ,QAAQ;YACPwH,OAAO,EAAEjF,iBAAiB,CAAC4E,QAAQ,CAAC,QAAQ,CAAE;YAC9CG,QAAQ,EAAEC,YAAa;YACvB/D,KAAK,EAAC;UAAQ;YAAAuE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CACF;UACD9E,KAAK,EAAC;QAAQ;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;;EAED;EACA;EACF,MAAMI,eAAe,GAAG7G,OAAO,CAACqD,GAAG,CAACC,MAAM,IAAI;IAC5C;IACA,MAAMwD,UAAU,GAAG;MAAC,GAAGxD;IAAM,CAAC;;IAE9B;IACA,IAAI,CAACxD,eAAe,IAAIgB,iBAAiB,CAACoC,MAAM,GAAG,CAAC,EAAE;MACpD;MACA;MACA4D,UAAU,CAACtD,SAAS,GAAGrB,KAAK,CAACC,OAAO,CAAC0E,UAAU,CAACtD,SAAS,CAAC,GACtDsD,UAAU,CAACtD,SAAS,CAACiC,MAAM,CAACsB,GAAG,IAAIjG,iBAAiB,CAAC4E,QAAQ,CAACqB,GAAG,CAAC,CAAC,GACnE,EAAE;IACR;IACA,OAAOD,UAAU;EACnB,CAAC,CAAC,CAACrB,MAAM,CAACnC,MAAM,IAAI;IAAA,IAAA0D,iBAAA,EAAAC,mBAAA;IAChB;IACA,MAAMC,WAAW,GAAG,CAACxG,UAAU,MAAAsG,iBAAA,GAC7B1D,MAAM,CAACO,SAAS,cAAAmD,iBAAA,uBAAhBA,iBAAA,CAAkBG,WAAW,CAAC,CAAC,CAACzB,QAAQ,CAAChF,UAAU,CAACyG,WAAW,CAAC,CAAC,CAAC,OAAAF,mBAAA,GAClE3D,MAAM,CAACQ,WAAW,cAAAmD,mBAAA,uBAAlBA,mBAAA,CAAoBE,WAAW,CAAC,CAAC,CAACzB,QAAQ,CAAChF,UAAU,CAACyG,WAAW,CAAC,CAAC,CAAC;;IAEtE;IACA,MAAMC,SAAS,GAAG,CAACxG,YAAY,IAAI0C,MAAM,CAACa,OAAO;;IAEjD;IACA,MAAMkD,aAAa,GAAGvG,iBAAiB,CAACoC,MAAM,KAAK,CAAC,IACjDI,MAAM,CAACE,SAAS,IAAIF,MAAM,CAACE,SAAS,CAAC8D,IAAI,CAACP,GAAG,IAC5CjG,iBAAiB,CAAC4E,QAAQ,CAACqB,GAAG,CAChC,CAAE;;IAEJ;IACA,MAAMQ,eAAe,GAAG,CAAC3H,kBAAkB,IAAIA,kBAAkB,KAAK,KAAK,IACzE0D,MAAM,CAACW,aAAa,KAAKrE,kBAAkB;;IAE7C;IACA,MAAM4H,YAAY,GAAG,CAAC1H,eAAe,IAClCwD,MAAM,CAACC,UAAU,KAAKzD,eAAgB;IAEzC,OAAOoH,WAAW,IAAIE,SAAS,IAAIC,aAAa,IAAIE,eAAe,IAAIC,YAAY;EACrF,CAAC,CAAC;;EAEF;EACAvF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEpB,iBAAiB,CAAC;EACrDmB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAElC,OAAO,CAACkD,MAAM,CAAC;EAC7CjB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE2E,eAAe,CAAC3D,MAAM,CAAC;EAExD,oBACE/D,OAAA,CAAC1B,GAAG;IAAA0I,QAAA,gBACFhH,OAAA,CAAC1B,GAAG;MAACwI,EAAE,EAAE;QAAES,OAAO,EAAE,MAAM;QAAEe,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE,QAAQ;QAAExB,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,gBACzFhH,OAAA,CAACxB,UAAU;QAACyI,OAAO,EAAC,IAAI;QAACuB,SAAS,EAAC,IAAI;QAAAxB,QAAA,EAAC;MAExC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbtH,OAAA,CAACzB,MAAM;QACL0I,OAAO,EAAC,WAAW;QACnBwB,KAAK,EAAC,SAAS;QACfC,SAAS,eAAE1I,OAAA,CAACT,OAAO;UAAA4H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACvBqB,OAAO,EAAE/C,eAAgB;QACzBkB,EAAE,EAAE;UAAE8B,OAAO,EAAE;QAAU,CAAE;QAC3BC,QAAQ,EAAE,CAAClI,eAAgB;QAAAqG,QAAA,EAC5B;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENtH,OAAA,CAAC1B,GAAG;MAACwI,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,gBACjBhH,OAAA,CAACV,IAAI;QAACwJ,SAAS;QAACC,OAAO,EAAE,CAAE;QAAA/B,QAAA,gBACzBhH,OAAA,CAACV,IAAI;UAAC0J,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAlC,QAAA,eACvBhH,OAAA,CAACvB,WAAW;YAAC0K,SAAS;YAACrC,EAAE,EAAE;cAAEC,EAAE,EAAE;YAAE,CAAE;YAAAC,QAAA,gBACnChH,OAAA,CAACtB,UAAU;cAAC6D,EAAE,EAAC,yBAAyB;cAAAyE,QAAA,EAAC;YAAiB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACvEtH,OAAA,CAACrB,MAAM;cACLyK,OAAO,EAAC,yBAAyB;cACjC7G,EAAE,EAAC,mBAAmB;cACtBK,KAAK,EAAEnC,kBAAmB;cAC1B+B,KAAK,EAAC,mBAAmB;cACzBkE,QAAQ,EAAElB,sBAAuB;cACjCqD,QAAQ,EAAE9H,kBAAmB;cAAAiG,QAAA,gBAE7BhH,OAAA,CAACpB,QAAQ;gBAACgE,KAAK,EAAC,EAAE;gBAAAoE,QAAA,eAChBhH,OAAA;kBAAAgH,QAAA,EAAI;gBAAmB;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpB,CAAC,EACVjH,WAAW,CAAC6D,GAAG,CAAEmF,IAAI,iBACpBrJ,OAAA,CAACpB,QAAQ;gBAA0BgE,KAAK,EAAEyG,IAAI,CAACvE,aAAc;gBAAAkC,QAAA,EAC1DqC,IAAI,CAACzE;cAAI,GADGyE,IAAI,CAACvE,aAAa;gBAAAqC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEvB,CACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACPtH,OAAA,CAACV,IAAI;UAAC0J,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAlC,QAAA,eACvBhH,OAAA,CAACvB,WAAW;YAAC0K,SAAS;YAACrC,EAAE,EAAE;cAAEC,EAAE,EAAE;YAAE,CAAE;YAAC8B,QAAQ,EAAE,CAACpI,kBAAkB,IAAIQ,eAAgB;YAAA+F,QAAA,gBACrFhH,OAAA,CAACtB,UAAU;cAAC6D,EAAE,EAAC,sBAAsB;cAAAyE,QAAA,EAAC;YAAc;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACjEtH,OAAA,CAACrB,MAAM;cACLyK,OAAO,EAAC,sBAAsB;cAC9B7G,EAAE,EAAC,gBAAgB;cACnBK,KAAK,EAAEjC,eAAgB;cACvB6B,KAAK,EAAC,gBAAgB;cACtBkE,QAAQ,EAAEf,mBAAoB;cAC9BkD,QAAQ,EAAE,CAACpI,kBAAkB,IAAIQ,eAAgB;cAAA+F,QAAA,gBAEjDhH,OAAA,CAACpB,QAAQ;gBAACgE,KAAK,EAAC,EAAE;gBAAAoE,QAAA,eAChBhH,OAAA;kBAAAgH,QAAA,EAAI;gBAAgB;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC,EACV/G,QAAQ,CAAC2D,GAAG,CAAEoF,IAAI,iBACjBtJ,OAAA,CAACpB,QAAQ;gBAAuBgE,KAAK,EAAE0G,IAAI,CAAClF,UAAW;gBAAA4C,QAAA,EACpDsC,IAAI,CAAC1E;cAAI,GADG0E,IAAI,CAAClF,UAAU;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEpB,CACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEPtH,OAAA,CAACV,IAAI;QAAC0J,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAlC,QAAA,eACvBhH,OAAA,CAACyG,cAAc;UACb9E,iBAAiB,EAAEA,iBAAkB;UACrC+E,QAAQ,EAAE9E;QAAqB;UAAAuF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEPtH,OAAA,CAAC1B,GAAG;QAACwI,EAAE,EAAE;UAAES,OAAO,EAAE,MAAM;UAAEe,cAAc,EAAE,eAAe;UAAEC,UAAU,EAAE,QAAQ;UAAExB,EAAE,EAAE;QAAE,CAAE;QAAAC,QAAA,gBACzFhH,OAAA,CAACnB,SAAS;UACRoI,OAAO,EAAC,UAAU;UAClBsC,WAAW,EAAC,mBAAmB;UAC/B3G,KAAK,EAAErB,UAAW;UAClBmF,QAAQ,EAAG8C,CAAC,IAAKhI,aAAa,CAACgI,CAAC,CAAC9D,MAAM,CAAC9C,KAAK,CAAE;UAC/C6G,UAAU,EAAE;YACVC,cAAc,eACZ1J,OAAA,CAAClB,cAAc;cAAC6K,QAAQ,EAAC,OAAO;cAAA3C,QAAA,eAC9BhH,OAAA,CAACR,UAAU;gBAAA2H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAEpB,CAAE;UACFR,EAAE,EAAE;YAAE8C,KAAK,EAAE;UAAM;QAAE;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eACFtH,OAAA,CAACd,SAAS;UAAA8H,QAAA,eACRhH,OAAA,CAACb,gBAAgB;YACfsI,OAAO,eACLzH,OAAA,CAACX,MAAM;cACLuH,OAAO,EAAEnF,YAAa;cACtBiF,QAAQ,EAAG8C,CAAC,IAAK9H,eAAe,CAAC8H,CAAC,CAAC9D,MAAM,CAACkB,OAAO,CAAE;cACnD6B,KAAK,EAAC;YAAS;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CACF;YACD9E,KAAK,EAAC;UAAmB;YAAA2E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELvG,kBAAkB,IAAIE,eAAe,IAAIE,cAAc,gBACtDnB,OAAA,CAAC1B,GAAG;MAACwI,EAAE,EAAE;QAAES,OAAO,EAAE,MAAM;QAAEe,cAAc,EAAE,QAAQ;QAAEuB,EAAE,EAAE;MAAE,CAAE;MAAA7C,QAAA,eAC9DhH,OAAA,CAACjB,gBAAgB;QAAAoI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,GACJ3D,oBAAoB,IAAI9C,OAAO,CAACkD,MAAM,KAAK,CAAC,IAAI,CAACtD,kBAAkB,IAAI,CAACE,eAAe,gBACzFX,OAAA,CAAC1B,GAAG;MAACwI,EAAE,EAAE;QAAEgD,SAAS,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAA/C,QAAA,gBACtChH,OAAA,CAACxB,UAAU;QAACyI,OAAO,EAAC,IAAI;QAACwB,KAAK,EAAC,gBAAgB;QAACvB,YAAY;QAAAF,QAAA,EAAC;MAE7D;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbtH,OAAA,CAACxB,UAAU;QAACyI,OAAO,EAAC,OAAO;QAACwB,KAAK,EAAC,gBAAgB;QAAAzB,QAAA,EAAC;MAEnD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbtH,OAAA,CAACxB,UAAU;QAACyI,OAAO,EAAC,OAAO;QAACwB,KAAK,EAAC,gBAAgB;QAAC3B,EAAE,EAAE;UAAEkD,EAAE,EAAE;QAAE,CAAE;QAAAhD,QAAA,EAAC;MAElE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,GACJI,eAAe,CAAC3D,MAAM,KAAK,CAAC,gBAC9B/D,OAAA,CAAC1B,GAAG;MAACwI,EAAE,EAAE;QAAEgD,SAAS,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAA/C,QAAA,gBACtChH,OAAA,CAACxB,UAAU;QAACyI,OAAO,EAAC,IAAI;QAACwB,KAAK,EAAC,gBAAgB;QAACvB,YAAY;QAAAF,QAAA,EAAC;MAE7D;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbtH,OAAA,CAACxB,UAAU;QAACyI,OAAO,EAAC,OAAO;QAACwB,KAAK,EAAC,gBAAgB;QAAAzB,QAAA,EAAC;MAEnD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,gBAENtH,OAAA,CAACN,SAAS;MACR4C,OAAO,EAAEA,OAAQ;MACjBe,IAAI,EAAEqE,eAAgB;MACtBuC,KAAK,EAAEtJ,eAAe,GAClB,aAAa,EAAAR,cAAA,GAAAI,QAAQ,CAAC2J,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC/F,UAAU,KAAKzD,eAAe,CAAC,cAAAR,cAAA,uBAApDA,cAAA,CAAsDyE,IAAI,KAAI,EAAE,EAAE,GAC/E,aAAc;MAClBwF,MAAM,EAAEvE,gBAAiB;MACzBwE,QAAQ,EAAEvE,iBAAkB;MAC5BwE,UAAU,EAAE9D,cAAe;MAC3B+D,UAAU;IAAA;MAAApD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CACF,eACCtH,OAAA,CAACL,aAAa;MACZwC,IAAI,EAAEN,gBAAiB;MACvBoI,KAAK,EAAC,eAAe;MACrB7H,OAAO,EAAE,mCAAmCL,eAAe,CAACgC,MAAM,GAAG,CAAC,GAClE,eAAe,GACf,aAAa,iCAAkC;MACnDyG,SAAS,EAAEvE,mBAAoB;MAC/BwE,QAAQ,EAAEA,CAAA,KAAM3I,mBAAmB,CAAC,KAAK,CAAE;MAC3C4I,WAAW,EAAC,QAAQ;MACpBrI,QAAQ,EAAC;IAAO;MAAA8E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAEFtH,OAAA,CAACf,QAAQ;MACPkD,IAAI,EAAEF,QAAQ,CAACE,IAAK;MACpBwI,gBAAgB,EAAE,IAAK;MACvBC,OAAO,EAAEA,CAAA,KAAM1I,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEE,IAAI,EAAE;MAAM,CAAC,CAAE;MACzD0I,YAAY,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAA/D,QAAA,eAE3DhH,OAAA,CAAChB,KAAK;QAAC4L,OAAO,EAAEA,CAAA,KAAM1I,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEE,IAAI,EAAE;QAAM,CAAC,CAAE;QAACE,QAAQ,EAAEJ,QAAQ,CAACI,QAAS;QAAA2E,QAAA,EAC1F/E,QAAQ,CAACG;MAAO;QAAA+E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACpH,EAAA,CAjjBID,UAAoB;EAAA,QACPR,WAAW;AAAA;AAAAuL,EAAA,GADxB/K,UAAoB;AAmjB1B,eAAeA,UAAU;AAAC,IAAA+K,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}