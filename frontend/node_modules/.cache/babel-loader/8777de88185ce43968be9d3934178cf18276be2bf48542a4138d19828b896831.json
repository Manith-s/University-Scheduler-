{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Documents\\\\Master's Colleges\\\\UNIVERSITY OF DELAWARE\\\\COURSES\\\\Project\\\\university-scheduler\\\\frontend\\\\src\\\\components\\\\admin\\\\schedule\\\\ScheduleView.tsx\",\n  _s = $RefreshSig$();\n// src/components/admin/schedules/ScheduleView.tsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Box, Button, Container, Typography, Card, CardContent, FormControl, InputLabel, MenuItem, Select, Grid, Paper, CircularProgress, Alert, AlertTitle, Tabs, Tab, Tooltip,\n//IconButton,\nTextField } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n//import FilterListIcon from '@mui/icons-material/FilterList';\nimport WarningIcon from '@mui/icons-material/Warning';\n//import InfoIcon from '@mui/icons-material/Info';\nimport SearchIcon from '@mui/icons-material/Search';\nimport GetAppIcon from '@mui/icons-material/GetApp';\n//import { useNavigate } from 'react-router-dom';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\n\n// Import services\nimport scheduleService from '../../../services/scheduleService';\nimport departmentService from '../../../services/departmentService';\nimport programService from '../../../services/programService';\nimport semesterService from '../../../services/semesterService';\nimport GenerateSchedule from './GenerateSchedule';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScheduleView = () => {\n  _s();\n  //const navigate = useNavigate();\n\n  // State variables\n  const [scheduleData, setSchedule] = useState(null);\n  const [scheduledCourses, setScheduledCourses] = useState([]);\n  const [filteredCourses, setFilteredCourses] = useState([]);\n  const [conflicts, setConflicts] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [programs, setPrograms] = useState([]);\n  const [semesters, setSemesters] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedProgram, setSelectedProgram] = useState('all'); // Default to 'all' programs\n  const [selectedSemester, setSelectedSemester] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [viewMode, setViewMode] = useState('week');\n  const [showGenerateForm, setShowGenerateForm] = useState(false);\n  const [currentDay, setCurrentDay] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showResolvedConflicts, setShowResolvedConflicts] = useState(false);\n\n  // Days and time slots for schedule display\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n  const timeSlots = [{\n    id: 1,\n    name: 'Time Slot 1',\n    start: '09:10',\n    end: '10:05'\n  }, {\n    id: 2,\n    name: 'Time Slot 2',\n    start: '10:20',\n    end: '11:15'\n  }, {\n    id: 3,\n    name: 'Time Slot 3',\n    start: '11:30',\n    end: '12:25'\n  }, {\n    id: 4,\n    name: 'Time Slot 4',\n    start: '12:45',\n    end: '14:05'\n  }, {\n    id: 5,\n    name: 'Time Slot 5',\n    start: '13:30',\n    end: '14:50'\n  }, {\n    id: 6,\n    name: 'Time Slot 6',\n    start: '17:30',\n    end: '20:30'\n  }, {\n    id: 7,\n    name: 'Time Slot 7',\n    start: '18:00',\n    end: '21:00'\n  }];\n\n  // Add this helper function near the top of your component\n  const normalizeDayName = day => {\n    if (!day) return '';\n\n    // Handle short codes\n    const dayMap = {\n      'MON': 'Monday',\n      'TUE': 'Tuesday',\n      'WED': 'Wednesday',\n      'THU': 'Thursday',\n      'FRI': 'Friday'\n    };\n\n    // If it's a short code, convert it\n    if (dayMap[day]) {\n      return dayMap[day];\n    }\n\n    // If it's already a full name, return it\n    const fullNames = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n    if (fullNames.includes(day)) {\n      return day;\n    }\n\n    // Try to match partial\n    for (const [code, fullName] of Object.entries(dayMap)) {\n      if (day.toUpperCase().includes(code) || fullName.toLowerCase().includes(day.toLowerCase())) {\n        return fullName;\n      }\n    }\n\n    // Default\n    return day;\n  };\n  const handleRefresh = useCallback(async () => {\n    if (!selectedSemester) return;\n    setLoading(true);\n    setError(null);\n    try {\n      console.log(`Refreshing schedule data for semester: ${selectedSemester}`);\n      let scheduleData;\n      try {\n        scheduleData = await scheduleService.getActiveSchedule(selectedSemester);\n        console.log('FULL SCHEDULE DATA:', JSON.stringify({\n          keys: Object.keys(scheduleData),\n          hasScheduledCourses: !!scheduleData.ScheduledCourses,\n          hasCourses: !!scheduleData.courses,\n          courseCount: (scheduleData.courses || []).length,\n          ScheduledCoursesCount: (scheduleData.ScheduledCourses || []).length\n        }));\n      } catch (err) {\n        console.error(\"Error getting active schedule:\", err);\n        setSchedule(null);\n        setScheduledCourses([]);\n        setFilteredCourses([]);\n        setConflicts([]);\n        throw err;\n      }\n      let conflictsData = [];\n      if (scheduleData && scheduleData.schedule_id) {\n        conflictsData = await scheduleService.getScheduleConflicts(scheduleData.schedule_id);\n      }\n      setSelectedDepartment('');\n      setSelectedProgram('all');\n      setSchedule(scheduleData);\n\n      // Extract courses, checking both possible properties\n      const courses = scheduleData.courses || (scheduleData.ScheduledCourses ? scheduleData.ScheduledCourses : []);\n      console.log(`Found ${courses.length} courses to display`, courses.length > 0 ? {\n        sampleCourse: {\n          id: courses[0].course_id,\n          timeSlot: courses[0].time_slot_id,\n          day: courses[0].day_of_week\n        }\n      } : 'No courses');\n      setScheduledCourses(courses);\n      setFilteredCourses(courses);\n      setConflicts(conflictsData);\n    } catch (err) {\n      console.error(\"Error refreshing data:\", err);\n      setError(\"Failed to refresh data. Please ensure a schedule exists for this semester.\");\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedSemester]);\n\n  // Add this effect to check URL parameters\n  useEffect(() => {\n    // Check URL params for direct navigation from schedule generation\n    const queryParams = new URLSearchParams(window.location.search);\n    const semesterParam = queryParams.get('semester');\n    const refreshParam = queryParams.get('refresh');\n    if (semesterParam) {\n      console.log(`URL has semester param: ${semesterParam}, setting as selected`);\n      setSelectedSemester(semesterParam);\n\n      // If refresh=true is in the URL, force a refresh\n      if (refreshParam === 'true') {\n        // Use setTimeout to ensure the semester state is updated first\n        setTimeout(() => handleRefresh(), 500);\n      }\n    }\n  }, [handleRefresh]); // Empty dependency array means this runs once on component mount\n\n  // Initial data loading\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Get semesters\n        const semestersData = await semesterService.getAllSemesters();\n        setSemesters(semestersData);\n\n        // Get departments and programs\n        const departmentsData = await departmentService.getAllDepartments();\n        const programsData = await programService.getAllPrograms();\n        setDepartments(departmentsData);\n        setPrograms(programsData);\n\n        // If we have semesters, try to get a schedule\n        if (semestersData.length > 0) {\n          // Find the current semester or use the first one\n          const currentSemester = semestersData.find(s => s.is_current) || semestersData[0];\n          setSelectedSemester(currentSemester.semester_id);\n          try {\n            // Try to get the active schedule for this semester\n            const scheduleData = await scheduleService.getActiveSchedule(currentSemester.semester_id);\n            const conflictsData = await scheduleService.getScheduleConflicts(scheduleData.schedule_id);\n            setSchedule(scheduleData);\n            setScheduledCourses(scheduleData.courses || []);\n            setFilteredCourses(scheduleData.courses || []);\n            setConflicts(conflictsData);\n          } catch (err) {\n            // No schedule exists yet, show message to create one\n            console.log('No active schedule found:', err);\n            setError('No active schedule found for the selected semester. Please generate a new schedule.');\n          }\n        } else {\n          setError('No semesters found. Please create a semester before generating schedules.');\n        }\n      } catch (err) {\n        console.error('Error fetching initial data:', err);\n        setError('Failed to load data. Please ensure your backend server is running.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Fetch schedule when semester changes\n  useEffect(() => {\n    if (selectedSemester) {\n      const fetchSchedule = async () => {\n        try {\n          setLoading(true);\n          const scheduleData = await scheduleService.getActiveSchedule(selectedSemester);\n          const conflictsData = await scheduleService.getScheduleConflicts(scheduleData.schedule_id);\n          setSchedule(scheduleData);\n          setScheduledCourses(scheduleData.courses || []);\n          setFilteredCourses(scheduleData.courses || []);\n          setConflicts(conflictsData);\n          setLoading(false);\n        } catch (err) {\n          console.error('Error fetching schedule for semester:', err);\n          setError('Failed to load schedule for selected semester.');\n          setLoading(false);\n        }\n      };\n      fetchSchedule();\n    }\n  }, [selectedSemester]);\n\n  // Apply filters when department, program, or search term changes\n  useEffect(() => {\n    if (!scheduledCourses.length) return;\n    let filtered = [...scheduledCourses];\n\n    // Filter by department\n    if (selectedDepartment) {\n      filtered = filtered.filter(course => course.department_id === selectedDepartment);\n    }\n\n    // Filter by program - if \"all\" is selected, don't filter by program\n    if (selectedProgram && selectedProgram !== 'all') {\n      filtered = filtered.filter(course => {\n        var _course$program_ids;\n        return (_course$program_ids = course.program_ids) === null || _course$program_ids === void 0 ? void 0 : _course$program_ids.includes(selectedProgram);\n      });\n    }\n\n    // Filter by search term\n    if (searchTerm) {\n      const search = searchTerm.toLowerCase();\n      filtered = filtered.filter(course => course.course_name.toLowerCase().includes(search) || course.course_id.toLowerCase().includes(search) || course.professor_name && course.professor_name.toLowerCase().includes(search));\n    }\n    setFilteredCourses(filtered);\n  }, [scheduledCourses, selectedDepartment, selectedProgram, searchTerm]);\n  const handleDepartmentChange = event => {\n    const deptId = event.target.value;\n    setSelectedDepartment(deptId);\n\n    // Reset program selection when department changes, but set to \"all\" instead of empty\n    setSelectedProgram('all');\n  };\n  const handleProgramChange = event => {\n    setSelectedProgram(event.target.value);\n\n    // If user selects \"all programs\", we need to update the filtered courses\n    // to show all courses for the selected department\n    if (event.target.value === 'all') {\n      let filtered = [...scheduledCourses];\n\n      // Keep department filter if selected\n      if (selectedDepartment) {\n        filtered = filtered.filter(course => course.department_id === selectedDepartment);\n      }\n\n      // Apply search filter if any\n      if (searchTerm) {\n        const search = searchTerm.toLowerCase();\n        filtered = filtered.filter(course => course.course_name.toLowerCase().includes(search) || course.course_id.toLowerCase().includes(search) || course.professor_name && course.professor_name.toLowerCase().includes(search));\n      }\n      setFilteredCourses(filtered);\n    }\n  };\n  const handleSemesterChange = event => {\n    setSelectedSemester(event.target.value);\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleViewModeChange = (event, newValue) => {\n    setViewMode(newValue);\n  };\n  const handleDayChange = (event, newValue) => {\n    setCurrentDay(newValue);\n  };\n  const handleCreateSchedule = () => {\n    setShowGenerateForm(true);\n  };\n  const handleScheduleGenerated = semesterId => {\n    console.log(`Schedule generated for semester: ${semesterId}, refreshing data`);\n    setSelectedSemester(semesterId);\n    setShowGenerateForm(false);\n    // Reload the schedule data\n    setTimeout(() => {\n      handleRefresh();\n    }, 500);\n  };\n  const handleExport = () => {\n    if (!scheduleData || !filteredCourses.length) {\n      setError(\"No schedule data available to export\");\n      return;\n    }\n    try {\n      var _semesters$find;\n      // Create a formatted schedule for export\n      const semesterName = ((_semesters$find = semesters.find(s => s.semester_id === selectedSemester)) === null || _semesters$find === void 0 ? void 0 : _semesters$find.name) || 'Current Semester';\n\n      // Create header rows\n      let csvContent = \"Course Schedule - \" + semesterName + \"\\n\";\n      csvContent += \"Generated on: \" + new Date().toLocaleString() + \"\\n\\n\";\n\n      // Column headers\n      csvContent += \"Course ID,Course Name,Professor,Day,Time,Room,Type\\n\";\n\n      // Add data rows\n      filteredCourses.forEach(course => {\n        const timeSlotId = course.time_slot_id;\n        const slotNumber = parseInt(timeSlotId.replace(/[^\\d]/g, ''));\n        const timeSlot = timeSlots.find(ts => ts.id === slotNumber) || {\n          start: \"\",\n          end: \"\"\n        };\n        const row = [course.course_id, course.course_name, course.professor_name || 'TBA', course.day_of_week, `${timeSlot.start}-${timeSlot.end}`, course.room || 'TBA', course.is_core ? 'Core' : 'Elective'];\n        csvContent += row.join(',') + '\\n';\n      });\n\n      // Create and download the file\n      const blob = new Blob([csvContent], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.setAttribute('href', url);\n      link.setAttribute('download', `schedule_${semesterName.replace(/\\s+/g, '_')}.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (err) {\n      console.error(\"Error exporting schedule:\", err);\n      setError(\"Failed to export schedule\");\n    }\n  };\n\n  // Function to determine background color for course blocks\n  const getCourseColor = course => {\n    if (course.is_override) return 'rgba(255, 152, 0, 0.8)'; // Orange for overrides\n    if (course.is_core) return 'rgba(25, 118, 210, 0.8)'; // Blue for core courses\n    return 'rgba(76, 175, 80, 0.8)'; // Green for electives\n  };\n\n  // Helper function to check if a course has conflicts\n  const hasConflict = course => {\n    return conflicts.some(conflict => conflict.courses.some(c => c.scheduled_course_id === course.scheduled_course_id) && !conflict.is_resolved);\n  };\n\n  // Function to find courses for a specific timeslot and day\n  //const getCoursesForTimeSlot = (timeSlotId: number, day: string) => {\n  const getCoursesForTimeSlot = (slotNumber, day) => {\n    if (!scheduleData || !scheduleData.courses || scheduleData.courses.length === 0) {\n      return [];\n    }\n    const normalizedDay = normalizeDayName(day);\n    console.log(`Looking for courses for slot ${slotNumber} on ${normalizedDay}`);\n    return scheduleData.courses.filter(course => {\n      // Try to match the day of week\n      const courseDayNormalized = normalizeDayName(course.day_of_week);\n      const dayMatch = courseDayNormalized === normalizedDay;\n\n      // Try multiple ways to match the time slot\n      let slotMatch = false;\n\n      // Match by time_slot_number if available\n      if (course.time_slot_number && course.time_slot_number === slotNumber) {\n        slotMatch = true;\n      }\n\n      // Match by timeslot_id or time_slot_id which has the format TSn-DAY\n      const timeSlotId = course.timeslot_id || course.time_slot_id || '';\n      if (timeSlotId.includes(`TS${slotNumber}`)) {\n        slotMatch = true;\n      }\n      const matches = dayMatch && slotMatch;\n      if (matches) {\n        console.log(`Found match: Course ${course.course_name} for ${day} in slot ${slotNumber}`);\n      }\n      return matches;\n    });\n  };\n\n  /*  \r\n  // Create a unique ID for detailed logging\r\n  const logId = Math.floor(Math.random() * 10000);\r\n  \r\n  console.log(`[${logId}] Looking for courses for day=\"${day}\", timeSlot=${timeSlotId}`);\r\n  console.log(`[${logId}] Number of filtered courses to search: ${filteredCourses.length}`);\r\n  \r\n  if (filteredCourses.length > 0) {\r\n    // Log a sample course to see its structure\r\n    console.log(`[${logId}] Sample course:`, {\r\n      id: filteredCourses[0].course_id,\r\n      day: filteredCourses[0].day_of_week,\r\n      slot: filteredCourses[0].time_slot_id || filteredCourses[0].timeslot_id\r\n    });\r\n  }\r\n    // Multiple ways to try to match the day\r\n  const dayMatchers = [\r\n    // Exact match\r\n    (courseDay: string) => courseDay === day,\r\n    // Normalized match\r\n    (courseDay: string) => normalizeDayName(courseDay) === day,\r\n    // Substring match (MON in Monday, etc.)\r\n    (courseDay: string) => day.toUpperCase().includes(courseDay.toUpperCase()) || courseDay.toUpperCase().includes(day.substring(0, 3).toUpperCase())\r\n  ];\r\n  \r\n  // Multiple ways to try to match the time slot\r\n  const slotMatchers = [\r\n    // Exact formatted match\r\n    (slot: string) => slot === `TS${timeSlotId}-${day.substring(0, 3).toUpperCase()}`,\r\n    // Just check if it has the slot number\r\n    (slot: string) => slot.includes(`TS${timeSlotId}`),\r\n    // Check if it starts with the slot number\r\n    (slot: string) => slot.startsWith(`TS${timeSlotId}`),\r\n    // Just check the numeric part\r\n    (slot: string) => {\r\n      const match = slot.match(/TS(\\d+)/);\r\n      return match && parseInt(match[1]) === timeSlotId;\r\n    }\r\n  ];\r\n  \r\n  // Try all possible combinations of matchers\r\n  const matchedCourses = filteredCourses.filter(course => {\r\n    // Use either timeslot_id or time_slot_id, whichever exists\r\n    const slotId = course.timeslot_id || course.time_slot_id;\r\n    const courseDay = course.day_of_week;\r\n    \r\n    // If we're missing critical data, skip this course\r\n    if (!slotId || !courseDay) return false;\r\n    \r\n    // Try each day matcher\r\n    const dayMatched = dayMatchers.some(matcher => matcher(courseDay));\r\n    // Try each slot matcher\r\n    const slotMatched = slotMatchers.some(matcher => matcher(slotId));\r\n    \r\n    // Both must match\r\n    const matched = dayMatched && slotMatched;\r\n    \r\n    if (matched) {\r\n      console.log(`[${logId}] Found matching course:`, {\r\n        id: course.course_id,\r\n        day: courseDay,\r\n        slot: slotId\r\n      });\r\n    }\r\n    \r\n    return matched;\r\n  });\r\n  \r\n  console.log(`[${logId}] Found ${matchedCourses.length} matching courses`);\r\n  return matchedCourses;\r\n  }; */\n\n  // Function to accept a conflict\n  const handleAcceptConflict = async conflictId => {\n    try {\n      await scheduleService.resolveConflict(conflictId, {\n        action: 'ACCEPT',\n        notes: 'Conflict accepted by administrator'\n      });\n\n      // Update local state\n      setConflicts(conflicts.map(conflict => conflict.conflict_id === conflictId ? {\n        ...conflict,\n        is_resolved: true,\n        resolution_notes: 'Conflict accepted by administrator'\n      } : conflict));\n    } catch (err) {\n      console.error(\"Error accepting conflict:\", err);\n      setError(\"Failed to accept conflict\");\n    }\n  };\n\n  // Function to override a conflict\n  const handleOverrideConflict = async conflictId => {\n    // In a real implementation, this would open a dialog to collect details\n    try {\n      // Simplified implementation for now\n      setConflicts(conflicts.map(conflict => conflict.conflict_id === conflictId ? {\n        ...conflict,\n        is_resolved: true,\n        resolution_notes: 'Conflict overridden by administrator'\n      } : conflict));\n    } catch (err) {\n      console.error(\"Error overriding conflict:\", err);\n      setError(\"Failed to override conflict\");\n    }\n  };\n\n  // Function to render a course block in the timetable\n  const renderCourseBlock = course => {\n    const courseHasConflict = hasConflict(course);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: getCourseColor(course),\n        color: 'white',\n        p: 1,\n        borderRadius: 1,\n        mb: 1,\n        position: 'relative',\n        cursor: 'pointer',\n        '&:hover': {\n          opacity: 0.9\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        fontWeight: \"bold\",\n        noWrap: true,\n        children: course.course_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        display: \"block\",\n        noWrap: true,\n        children: course.course_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        display: \"block\",\n        noWrap: true,\n        children: [\"Prof. \", course.professor_name || 'TBA']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this), courseHasConflict && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"This course has scheduling conflicts\",\n        children: /*#__PURE__*/_jsxDEV(WarningIcon, {\n          sx: {\n            position: 'absolute',\n            top: 5,\n            right: 5,\n            color: 'orange',\n            fontSize: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 11\n      }, this)]\n    }, course.scheduled_course_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render weekly view\n  const renderWeekView = () => {\n    console.log('Rendering week view with:', {\n      filteredCourses: filteredCourses.length,\n      scheduledCourses: scheduledCourses.length,\n      scheduleData: scheduleData ? {\n        id: scheduleData.schedule_id,\n        hasCourses: Array.isArray(scheduleData.courses) && scheduleData.courses.length > 0,\n        hasScheduledCourses: Array.isArray(scheduleData.ScheduledCourses) && scheduleData.ScheduledCourses.length > 0\n      } : 'null',\n      sampleCourse: filteredCourses.length > 0 ? {\n        course_id: filteredCourses[0].course_id,\n        day_of_week: filteredCourses[0].day_of_week,\n        time_slot_id: filteredCourses[0].time_slot_id\n      } : 'No courses'\n    });\n    if (!filteredCourses || filteredCourses.length === 0) {\n      console.log('No filtered courses available. All scheduled courses:', scheduledCourses.length);\n      console.log('Schedule object:', scheduleData ? Object.keys(scheduleData) : 'null');\n\n      // Provide a more informative message with a button to generate courses\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          children: \"No courses found for this schedule. Generate courses or select a different schedule.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            mt: 2\n          },\n          onClick: handleCreateSchedule,\n          children: \"Generate New Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mt: 2,\n        overflowX: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 800\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                borderRight: 1,\n                borderColor: 'divider',\n                height: '100%',\n                pt: 7\n              },\n              children: timeSlots.map(slot => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 120,\n                  p: 1,\n                  borderBottom: 1,\n                  borderColor: 'divider',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  children: [slot.start, \" - \", slot.end]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 21\n                }, this)\n              }, slot.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), daysOfWeek.map((day, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                borderRight: index < daysOfWeek.length - 1 ? 1 : 0,\n                borderColor: 'divider'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  borderBottom: 1,\n                  borderColor: 'divider',\n                  textAlign: 'center',\n                  fontWeight: 'bold',\n                  bgcolor: 'grey.100'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: day\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 19\n              }, this), timeSlots.map(slot => {\n                const coursesForSlot = getCoursesForTimeSlot(slot.id, day);\n                return /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    height: 120,\n                    p: 1,\n                    borderBottom: 1,\n                    borderColor: 'divider',\n                    overflow: 'auto'\n                  },\n                  children: coursesForSlot.map(course => renderCourseBlock(course))\n                }, `${day}-${slot.id}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 17\n            }, this)\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render day view\n  const renderDayView = () => {\n    if (!filteredCourses.length) {\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No schedule data available or no courses match your filters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 9\n      }, this);\n    }\n    const day = daysOfWeek[currentDay];\n    const dayFilteredCourses = filteredCourses.filter(course => course.day_of_week === day);\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [day, \"'s Schedule\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: timeSlots.map(slot => {\n            const coursesForSlot = dayFilteredCourses.filter(course => course.time_slot_id === `TS${slot.id}-${day.substring(0, 3).toUpperCase()}`);\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                elevation: 1,\n                sx: {\n                  p: 2,\n                  borderLeft: 4,\n                  borderColor: coursesForSlot.length > 0 ? 'primary.main' : 'grey.300'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  color: \"textSecondary\",\n                  children: [slot.start, \" - \", slot.end]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 1\n                  },\n                  children: coursesForSlot.length > 0 ? coursesForSlot.map(course => renderCourseBlock(course)) : /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: \"No courses scheduled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 794,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 790,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 19\n              }, this)\n            }, slot.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Function to render the conflicts section\n  const renderConflicts = () => {\n    const displayConflicts = showResolvedConflicts ? conflicts : conflicts.filter(conflict => !conflict.is_resolved);\n    if (displayConflicts.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mt: 3\n        },\n        children: \"No unresolved conflicts in this schedule.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mt: 3,\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Conflicts (\", displayConflicts.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"small\",\n          onClick: () => setShowResolvedConflicts(!showResolvedConflicts),\n          children: showResolvedConflicts ? 'Hide Resolved' : 'Show Resolved'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: displayConflicts.map(conflict => {\n          var _conflict$time_slot;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 1,\n              sx: {\n                p: 2,\n                borderLeft: 4,\n                borderColor: conflict.is_resolved ? 'success.main' : 'warning.main'\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'flex-start'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    sx: {\n                      fontWeight: 'bold'\n                    },\n                    children: conflict.conflict_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 851,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: conflict.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 854,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Time: \", conflict.day_of_week, \", \", ((_conflict$time_slot = conflict.time_slot) === null || _conflict$time_slot === void 0 ? void 0 : _conflict$time_slot.name) || 'Unknown time slot']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 857,\n                    columnNumber: 21\n                  }, this), conflict.courses && conflict.courses.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mt: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        fontWeight: 'medium'\n                      },\n                      children: \"Affected Courses:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 863,\n                      columnNumber: 25\n                    }, this), conflict.courses.map(course => /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        ml: 2\n                      },\n                      children: [\"\\u2022 \", course.course_name, \" (Prof. \", course.professor_name, \")\"]\n                    }, course.scheduled_course_id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 867,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 862,\n                    columnNumber: 23\n                  }, this), conflict.is_resolved && /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mt: 1,\n                      p: 1,\n                      bgcolor: 'success.light',\n                      borderRadius: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"success.contrastText\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Resolution:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 877,\n                        columnNumber: 27\n                      }, this), \" \", conflict.resolution_notes]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 876,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 875,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 850,\n                  columnNumber: 19\n                }, this), !conflict.is_resolved && /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    size: \"small\",\n                    onClick: () => handleOverrideConflict(conflict.conflict_id),\n                    sx: {\n                      mr: 1\n                    },\n                    children: \"Override\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 885,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    size: \"small\",\n                    onClick: () => handleAcceptConflict(conflict.conflict_id),\n                    children: \"Accept\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 894,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 15\n            }, this)\n          }, conflict.conflict_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          children: \"Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 933,\n              columnNumber: 26\n            }, this),\n            onClick: handleRefresh,\n            sx: {\n              mr: 2\n            },\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 26\n            }, this),\n            onClick: handleExport,\n            sx: {\n              mr: 2\n            },\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 26\n            }, this),\n            onClick: handleCreateSchedule,\n            children: \"Generate New Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 13\n        }, this), error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"semester-select-label\",\n                  children: \"Semester\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 972,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"semester-select-label\",\n                  value: selectedSemester,\n                  onChange: handleSemesterChange,\n                  label: \"Semester\",\n                  children: semesters.map(semester => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: semester.semester_id,\n                    children: semester.name\n                  }, semester.semester_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 980,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"department-select-label\",\n                  children: \"Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 989,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"department-select-label\",\n                  value: selectedDepartment,\n                  onChange: handleDepartmentChange,\n                  label: \"Department\",\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"All Departments\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 997,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 996,\n                    columnNumber: 21\n                  }, this), departments.map(department => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: department.department_id,\n                    children: department.name\n                  }, department.department_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1000,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 988,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"program-select-label\",\n                  children: \"Program\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"program-select-label\",\n                  value: selectedProgram,\n                  onChange: handleProgramChange,\n                  label: \"Program\",\n                  disabled: !selectedDepartment,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"all\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"All Programs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1018,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1017,\n                    columnNumber: 21\n                  }, this), programs.filter(program => !selectedDepartment || program.department_id === selectedDepartment).map(program => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: program.program_id,\n                    children: program.name\n                  }, program.program_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1010,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Search\",\n                variant: \"outlined\",\n                value: searchTerm,\n                onChange: handleSearchChange,\n                placeholder: \"Search courses\",\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                    color: \"action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1039,\n                    columnNumber: 35\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider',\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: viewMode,\n          onChange: handleViewModeChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Week View\",\n            value: \"week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1051,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Day View\",\n            value: \"day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1048,\n        columnNumber: 9\n      }, this), viewMode === 'day' && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider',\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: currentDay,\n          onChange: handleDayChange,\n          children: daysOfWeek.map((day, index) => /*#__PURE__*/_jsxDEV(Tab, {\n            label: day,\n            value: index\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1071,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1065,\n        columnNumber: 1\n      }, this), viewMode === 'week' ? renderWeekView() : renderDayView(), renderConflicts(), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3,\n          display: 'flex',\n          alignItems: 'center',\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mr: 3,\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 16,\n              height: 16,\n              bgcolor: 'rgba(25, 118, 210, 0.8)',\n              mr: 1,\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1101,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Core Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mr: 3,\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 16,\n              height: 16,\n              bgcolor: 'rgba(76, 175, 80, 0.8)',\n              mr: 1,\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Elective Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1107,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mr: 3,\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 16,\n              height: 16,\n              bgcolor: 'rgba(255, 152, 0, 0.8)',\n              mr: 1,\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Overridden Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(WarningIcon, {\n            sx: {\n              color: 'orange',\n              fontSize: 16,\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Scheduling Conflict\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 7\n    }, this), showGenerateForm && /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showGenerateForm,\n      onClose: () => setShowGenerateForm(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Generate New Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(GenerateSchedule, {\n          onScheduleGenerated: handleScheduleGenerated,\n          onClose: () => setShowGenerateForm(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowGenerateForm(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1144,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1136,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 922,\n    columnNumber: 5\n  }, this);\n};\n_s(ScheduleView, \"AZtAzXsO+i1yXROO92GgBLifLjc=\");\n_c = ScheduleView;\nexport default ScheduleView;\nvar _c;\n$RefreshReg$(_c, \"ScheduleView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Button","Container","Typography","Card","CardContent","FormControl","InputLabel","MenuItem","Select","Grid","Paper","CircularProgress","Alert","AlertTitle","Tabs","Tab","Tooltip","TextField","AddIcon","RefreshIcon","WarningIcon","SearchIcon","GetAppIcon","Dialog","DialogTitle","DialogContent","DialogActions","scheduleService","departmentService","programService","semesterService","GenerateSchedule","jsxDEV","_jsxDEV","ScheduleView","_s","scheduleData","setSchedule","scheduledCourses","setScheduledCourses","filteredCourses","setFilteredCourses","conflicts","setConflicts","departments","setDepartments","programs","setPrograms","semesters","setSemesters","selectedDepartment","setSelectedDepartment","selectedProgram","setSelectedProgram","selectedSemester","setSelectedSemester","searchTerm","setSearchTerm","viewMode","setViewMode","showGenerateForm","setShowGenerateForm","currentDay","setCurrentDay","loading","setLoading","error","setError","showResolvedConflicts","setShowResolvedConflicts","daysOfWeek","timeSlots","id","name","start","end","normalizeDayName","day","dayMap","fullNames","includes","code","fullName","Object","entries","toUpperCase","toLowerCase","handleRefresh","console","log","getActiveSchedule","JSON","stringify","keys","hasScheduledCourses","ScheduledCourses","hasCourses","courses","courseCount","length","ScheduledCoursesCount","err","conflictsData","schedule_id","getScheduleConflicts","sampleCourse","course_id","timeSlot","time_slot_id","day_of_week","queryParams","URLSearchParams","window","location","search","semesterParam","get","refreshParam","setTimeout","fetchData","semestersData","getAllSemesters","departmentsData","getAllDepartments","programsData","getAllPrograms","currentSemester","find","s","is_current","semester_id","fetchSchedule","filtered","filter","course","department_id","_course$program_ids","program_ids","course_name","professor_name","handleDepartmentChange","event","deptId","target","value","handleProgramChange","handleSemesterChange","handleSearchChange","handleViewModeChange","newValue","handleDayChange","handleCreateSchedule","handleScheduleGenerated","semesterId","handleExport","_semesters$find","semesterName","csvContent","Date","toLocaleString","forEach","timeSlotId","slotNumber","parseInt","replace","ts","row","room","is_core","join","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","getCourseColor","is_override","hasConflict","some","conflict","c","scheduled_course_id","is_resolved","getCoursesForTimeSlot","normalizedDay","courseDayNormalized","dayMatch","slotMatch","time_slot_number","timeslot_id","matches","handleAcceptConflict","conflictId","resolveConflict","action","notes","map","conflict_id","resolution_notes","handleOverrideConflict","renderCourseBlock","courseHasConflict","sx","backgroundColor","color","p","borderRadius","mb","position","cursor","opacity","children","variant","fontWeight","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","display","title","top","right","fontSize","renderWeekView","Array","isArray","textAlign","gutterBottom","mt","onClick","overflowX","minWidth","container","item","xs","borderRight","borderColor","height","pt","slot","borderBottom","alignItems","justifyContent","index","bgcolor","coursesForSlot","overflow","renderDayView","dayFilteredCourses","spacing","substring","elevation","borderLeft","renderConflicts","displayConflicts","severity","size","_conflict$time_slot","conflict_type","description","time_slot","ml","mr","minHeight","maxWidth","component","startIcon","md","fullWidth","labelId","onChange","label","semester","department","disabled","program","program_id","placeholder","InputProps","endAdornment","flexWrap","width","open","onClose","onScheduleGenerated","_c","$RefreshReg$"],"sources":["C:/Users/shash/Documents/Master's Colleges/UNIVERSITY OF DELAWARE/COURSES/Project/university-scheduler/frontend/src/components/admin/schedule/ScheduleView.tsx"],"sourcesContent":["// src/components/admin/schedules/ScheduleView.tsx\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Grid,\r\n  Paper,\r\n  CircularProgress,\r\n  Alert,\r\n  AlertTitle,\r\n  Tabs,\r\n  Tab,\r\n  Tooltip,\r\n //IconButton,\r\n  TextField\r\n} from '@mui/material';\r\nimport { SelectChangeEvent } from '@mui/material/Select';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\n//import FilterListIcon from '@mui/icons-material/FilterList';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\n//import InfoIcon from '@mui/icons-material/Info';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport GetAppIcon from '@mui/icons-material/GetApp';\r\n//import { useNavigate } from 'react-router-dom';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\n\r\n// Import services\r\nimport scheduleService from '../../../services/scheduleService';\r\nimport departmentService from '../../../services/departmentService';\r\nimport programService from '../../../services/programService';\r\nimport semesterService from '../../../services/semesterService';\r\nimport GenerateSchedule from './GenerateSchedule';\r\n\r\nconst ScheduleView: React.FC = () => {\r\n  //const navigate = useNavigate();\r\n  \r\n  // State variables\r\n  const [scheduleData, setSchedule] = useState<any>(null);\r\n  const [scheduledCourses, setScheduledCourses] = useState<any[]>([]);\r\n  const [filteredCourses, setFilteredCourses] = useState<any[]>([]);\r\n  const [conflicts, setConflicts] = useState<any[]>([]);\r\n  const [departments, setDepartments] = useState<any[]>([]);\r\n  const [programs, setPrograms] = useState<any[]>([]);\r\n  const [semesters, setSemesters] = useState<any[]>([]);\r\n  \r\n  const [selectedDepartment, setSelectedDepartment] = useState<string>('');\r\n  const [selectedProgram, setSelectedProgram] = useState<string>('all'); // Default to 'all' programs\r\n  const [selectedSemester, setSelectedSemester] = useState<string>('');\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [viewMode, setViewMode] = useState<string>('week');\r\n  const [showGenerateForm, setShowGenerateForm] = useState<boolean>(false);\r\n  const [currentDay, setCurrentDay] = useState<number>(0);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showResolvedConflicts, setShowResolvedConflicts] = useState<boolean>(false);\r\n  \r\n  // Days and time slots for schedule display\r\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\r\n  const timeSlots = [\r\n    { id: 1, name: 'Time Slot 1', start: '09:10', end: '10:05' },\r\n    { id: 2, name: 'Time Slot 2', start: '10:20', end: '11:15' },\r\n    { id: 3, name: 'Time Slot 3', start: '11:30', end: '12:25' },\r\n    { id: 4, name: 'Time Slot 4', start: '12:45', end: '14:05' },\r\n    { id: 5, name: 'Time Slot 5', start: '13:30', end: '14:50' },\r\n    { id: 6, name: 'Time Slot 6', start: '17:30', end: '20:30' },\r\n    { id: 7, name: 'Time Slot 7', start: '18:00', end: '21:00' }\r\n  ];\r\n\r\n  // Add this helper function near the top of your component\r\n  const normalizeDayName = (day: string | undefined | null): string => {\r\n    if (!day) return '';\r\n    \r\n    // Handle short codes\r\n    const dayMap: Record<string, string> = {\r\n      'MON': 'Monday',\r\n      'TUE': 'Tuesday',\r\n      'WED': 'Wednesday',\r\n      'THU': 'Thursday',\r\n      'FRI': 'Friday'\r\n    };\r\n    \r\n    // If it's a short code, convert it\r\n    if (dayMap[day]) {\r\n      return dayMap[day];\r\n    }\r\n    \r\n    // If it's already a full name, return it\r\n    const fullNames = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\r\n    if (fullNames.includes(day)) {\r\n      return day;\r\n    }\r\n    \r\n    // Try to match partial\r\n    for (const [code, fullName] of Object.entries(dayMap)) {\r\n      if (day.toUpperCase().includes(code) || fullName.toLowerCase().includes(day.toLowerCase())) {\r\n        return fullName;\r\n      }\r\n    }\r\n    \r\n    // Default\r\n    return day;\r\n  };\r\n    \r\n\r\n  const handleRefresh = useCallback(async () => {\r\n    if (!selectedSemester) return;\r\n  \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log(`Refreshing schedule data for semester: ${selectedSemester}`);\r\n      let scheduleData;\r\n      \r\n      try {\r\n        scheduleData = await scheduleService.getActiveSchedule(selectedSemester);\r\n        console.log('FULL SCHEDULE DATA:', JSON.stringify({\r\n          keys: Object.keys(scheduleData),\r\n          hasScheduledCourses: !!scheduleData.ScheduledCourses,\r\n          hasCourses: !!scheduleData.courses,\r\n          courseCount: (scheduleData.courses || []).length,\r\n          ScheduledCoursesCount: (scheduleData.ScheduledCourses || []).length\r\n        }));\r\n      } catch (err) {\r\n        console.error(\"Error getting active schedule:\", err);\r\n        setSchedule(null);\r\n        setScheduledCourses([]);\r\n        setFilteredCourses([]);\r\n        setConflicts([]);\r\n        throw err;\r\n      }\r\n  \r\n      let conflictsData: any[] = [];\r\n      if (scheduleData && scheduleData.schedule_id) {\r\n        conflictsData = await scheduleService.getScheduleConflicts(scheduleData.schedule_id);\r\n      }\r\n  \r\n      setSelectedDepartment('');\r\n      setSelectedProgram('all');\r\n      \r\n      setSchedule(scheduleData);\r\n  \r\n      // Extract courses, checking both possible properties\r\n      const courses = scheduleData.courses || (scheduleData.ScheduledCourses ? scheduleData.ScheduledCourses : []);\r\n      \r\n      console.log(`Found ${courses.length} courses to display`, \r\n        courses.length > 0 ? {\r\n          sampleCourse: {\r\n            id: courses[0].course_id,\r\n            timeSlot: courses[0].time_slot_id,\r\n            day: courses[0].day_of_week\r\n          }\r\n        } : 'No courses');\r\n      \r\n      setScheduledCourses(courses);\r\n      setFilteredCourses(courses);\r\n      setConflicts(conflictsData);\r\n      \r\n    } catch (err) {\r\n      console.error(\"Error refreshing data:\", err);\r\n      setError(\"Failed to refresh data. Please ensure a schedule exists for this semester.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [selectedSemester]);\r\n\r\n  // Add this effect to check URL parameters\r\n  useEffect(() => {\r\n      // Check URL params for direct navigation from schedule generation\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const semesterParam = queryParams.get('semester');\r\n    const refreshParam = queryParams.get('refresh');\r\n\r\n    if (semesterParam) {\r\n      console.log(`URL has semester param: ${semesterParam}, setting as selected`);\r\n      setSelectedSemester(semesterParam);\r\n      \r\n      // If refresh=true is in the URL, force a refresh\r\n      if (refreshParam === 'true') {\r\n        // Use setTimeout to ensure the semester state is updated first\r\n        setTimeout(() => handleRefresh(), 500);\r\n      }\r\n    }\r\n  }, [handleRefresh]);  // Empty dependency array means this runs once on component mount\r\n\r\n  // Initial data loading\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Get semesters\r\n        const semestersData = await semesterService.getAllSemesters();\r\n        setSemesters(semestersData);\r\n        \r\n        // Get departments and programs\r\n        const departmentsData = await departmentService.getAllDepartments();\r\n        const programsData = await programService.getAllPrograms();\r\n        \r\n        setDepartments(departmentsData);\r\n        setPrograms(programsData);\r\n        \r\n        // If we have semesters, try to get a schedule\r\n        if (semestersData.length > 0) {\r\n          // Find the current semester or use the first one\r\n          const currentSemester = semestersData.find((s: any) => s.is_current) || semestersData[0];\r\n          setSelectedSemester(currentSemester.semester_id);\r\n          \r\n          try {\r\n            // Try to get the active schedule for this semester\r\n            const scheduleData = await scheduleService.getActiveSchedule(currentSemester.semester_id);\r\n            const conflictsData = await scheduleService.getScheduleConflicts(scheduleData.schedule_id);\r\n            \r\n            setSchedule(scheduleData);\r\n            setScheduledCourses(scheduleData.courses || []);\r\n            setFilteredCourses(scheduleData.courses || []);\r\n            setConflicts(conflictsData);\r\n          } catch (err) {\r\n            // No schedule exists yet, show message to create one\r\n            console.log('No active schedule found:', err);\r\n            setError('No active schedule found for the selected semester. Please generate a new schedule.');\r\n          }\r\n        } else {\r\n          setError('No semesters found. Please create a semester before generating schedules.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching initial data:', err);\r\n        setError('Failed to load data. Please ensure your backend server is running.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Fetch schedule when semester changes\r\n  useEffect(() => {\r\n    if (selectedSemester) {\r\n      const fetchSchedule = async () => {\r\n        try {\r\n          setLoading(true);\r\n          \r\n          const scheduleData = await scheduleService.getActiveSchedule(selectedSemester);\r\n          const conflictsData = await scheduleService.getScheduleConflicts(scheduleData.schedule_id);\r\n          \r\n          setSchedule(scheduleData);\r\n          setScheduledCourses(scheduleData.courses || []);\r\n          setFilteredCourses(scheduleData.courses || []);\r\n          setConflicts(conflictsData);\r\n          \r\n          setLoading(false);\r\n        } catch (err) {\r\n          console.error('Error fetching schedule for semester:', err);\r\n          setError('Failed to load schedule for selected semester.');\r\n          setLoading(false);\r\n        }\r\n      };\r\n      \r\n      fetchSchedule();\r\n    }\r\n  }, [selectedSemester]);\r\n  \r\n  // Apply filters when department, program, or search term changes\r\n  useEffect(() => {\r\n    if (!scheduledCourses.length) return;\r\n    \r\n    let filtered = [...scheduledCourses];\r\n    \r\n    // Filter by department\r\n    if (selectedDepartment) {\r\n      filtered = filtered.filter(course => \r\n        course.department_id === selectedDepartment\r\n      );\r\n    }\r\n    \r\n    // Filter by program - if \"all\" is selected, don't filter by program\r\n    if (selectedProgram && selectedProgram !== 'all') {\r\n      filtered = filtered.filter(course => \r\n        course.program_ids?.includes(selectedProgram)\r\n      );\r\n    }\r\n    \r\n    // Filter by search term\r\n    if (searchTerm) {\r\n      const search = searchTerm.toLowerCase();\r\n      filtered = filtered.filter(course => \r\n        course.course_name.toLowerCase().includes(search) ||\r\n        course.course_id.toLowerCase().includes(search) ||\r\n        (course.professor_name && course.professor_name.toLowerCase().includes(search))\r\n      );\r\n    }\r\n    \r\n    setFilteredCourses(filtered);\r\n  }, [scheduledCourses, selectedDepartment, selectedProgram, searchTerm]);\r\n  \r\n  const handleDepartmentChange = (event: SelectChangeEvent) => {\r\n    const deptId = event.target.value as string;\r\n    setSelectedDepartment(deptId);\r\n    \r\n    // Reset program selection when department changes, but set to \"all\" instead of empty\r\n    setSelectedProgram('all');\r\n  };\r\n  \r\n  const handleProgramChange = (event: SelectChangeEvent) => {\r\n    setSelectedProgram(event.target.value as string);\r\n    \r\n    // If user selects \"all programs\", we need to update the filtered courses\r\n    // to show all courses for the selected department\r\n    if (event.target.value === 'all') {\r\n      let filtered = [...scheduledCourses];\r\n      \r\n      // Keep department filter if selected\r\n      if (selectedDepartment) {\r\n        filtered = filtered.filter(course => \r\n          course.department_id === selectedDepartment\r\n        );\r\n      }\r\n      \r\n      // Apply search filter if any\r\n      if (searchTerm) {\r\n        const search = searchTerm.toLowerCase();\r\n        filtered = filtered.filter(course => \r\n          course.course_name.toLowerCase().includes(search) ||\r\n          course.course_id.toLowerCase().includes(search) ||\r\n          (course.professor_name && course.professor_name.toLowerCase().includes(search))\r\n        );\r\n      }\r\n      \r\n      setFilteredCourses(filtered);\r\n    }\r\n  };\r\n  \r\n  const handleSemesterChange = (event: SelectChangeEvent) => {\r\n    setSelectedSemester(event.target.value as string);\r\n  };\r\n  \r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n  \r\n  const handleViewModeChange = (event: React.SyntheticEvent, newValue: string) => {\r\n    setViewMode(newValue);\r\n  };\r\n  \r\n  const handleDayChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setCurrentDay(newValue);\r\n  };\r\n  \r\n  const handleCreateSchedule = () => {\r\n    setShowGenerateForm(true);\r\n  };\r\n\r\n  const handleScheduleGenerated = (semesterId: string) => {\r\n    console.log(`Schedule generated for semester: ${semesterId}, refreshing data`);\r\n    setSelectedSemester(semesterId);\r\n    setShowGenerateForm(false);\r\n    // Reload the schedule data\r\n    setTimeout(() => {\r\n      handleRefresh();\r\n    }, 500);\r\n  };\r\n\r\n\r\n  const handleExport = () => {\r\n    if (!scheduleData || !filteredCourses.length) {\r\n      setError(\"No schedule data available to export\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Create a formatted schedule for export\r\n      const semesterName = semesters.find(s => s.semester_id === selectedSemester)?.name || 'Current Semester';\r\n      \r\n      // Create header rows\r\n      let csvContent = \"Course Schedule - \" + semesterName + \"\\n\";\r\n      csvContent += \"Generated on: \" + new Date().toLocaleString() + \"\\n\\n\";\r\n      \r\n      // Column headers\r\n      csvContent += \"Course ID,Course Name,Professor,Day,Time,Room,Type\\n\";\r\n      \r\n      // Add data rows\r\n      filteredCourses.forEach(course => {\r\n        const timeSlotId = course.time_slot_id;\r\n        const slotNumber = parseInt(timeSlotId.replace(/[^\\d]/g, ''));\r\n        const timeSlot = timeSlots.find(ts => ts.id === slotNumber) || { start: \"\", end: \"\" };\r\n        \r\n        const row = [\r\n          course.course_id,\r\n          course.course_name,\r\n          course.professor_name || 'TBA',\r\n          course.day_of_week,\r\n          `${timeSlot.start}-${timeSlot.end}`,\r\n          course.room || 'TBA',\r\n          course.is_core ? 'Core' : 'Elective'\r\n        ];\r\n        \r\n        csvContent += row.join(',') + '\\n';\r\n      });\r\n      \r\n      // Create and download the file\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.setAttribute('href', url);\r\n      link.setAttribute('download', `schedule_${semesterName.replace(/\\s+/g, '_')}.csv`);\r\n      link.style.visibility = 'hidden';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (err) {\r\n      console.error(\"Error exporting schedule:\", err);\r\n      setError(\"Failed to export schedule\");\r\n    }\r\n  };\r\n  \r\n  // Function to determine background color for course blocks\r\n  const getCourseColor = (course: any) => {\r\n    if (course.is_override) return 'rgba(255, 152, 0, 0.8)'; // Orange for overrides\r\n    if (course.is_core) return 'rgba(25, 118, 210, 0.8)'; // Blue for core courses\r\n    return 'rgba(76, 175, 80, 0.8)'; // Green for electives\r\n  };\r\n\r\n  // Helper function to check if a course has conflicts\r\n  const hasConflict = (course: any) => {\r\n    return conflicts.some(conflict => \r\n      conflict.courses.some((c: any) => c.scheduled_course_id === course.scheduled_course_id) &&\r\n      !conflict.is_resolved\r\n    );\r\n  };\r\n\r\n  // Function to find courses for a specific timeslot and day\r\n  //const getCoursesForTimeSlot = (timeSlotId: number, day: string) => {\r\n  const getCoursesForTimeSlot = (slotNumber: number, day: string): any[] => {\r\n    if (!scheduleData || !scheduleData.courses || scheduleData.courses.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    const normalizedDay = normalizeDayName(day);\r\n    console.log(`Looking for courses for slot ${slotNumber} on ${normalizedDay}`);\r\n    \r\n    return scheduleData.courses.filter((course: any) => {\r\n      // Try to match the day of week\r\n      const courseDayNormalized = normalizeDayName(course.day_of_week);\r\n      const dayMatch = courseDayNormalized === normalizedDay;\r\n      \r\n      // Try multiple ways to match the time slot\r\n      let slotMatch = false;\r\n      \r\n      // Match by time_slot_number if available\r\n      if (course.time_slot_number && course.time_slot_number === slotNumber) {\r\n        slotMatch = true;\r\n      }\r\n      \r\n      // Match by timeslot_id or time_slot_id which has the format TSn-DAY\r\n      const timeSlotId = course.timeslot_id || course.time_slot_id || '';\r\n      if (timeSlotId.includes(`TS${slotNumber}`)) {\r\n        slotMatch = true;\r\n      }\r\n      \r\n      const matches = dayMatch && slotMatch;\r\n      if (matches) {\r\n        console.log(`Found match: Course ${course.course_name} for ${day} in slot ${slotNumber}`);\r\n      }\r\n      \r\n      return matches;\r\n    });\r\n\r\n  };\r\n\r\n  /*  \r\n  // Create a unique ID for detailed logging\r\n  const logId = Math.floor(Math.random() * 10000);\r\n  \r\n  console.log(`[${logId}] Looking for courses for day=\"${day}\", timeSlot=${timeSlotId}`);\r\n  console.log(`[${logId}] Number of filtered courses to search: ${filteredCourses.length}`);\r\n  \r\n  if (filteredCourses.length > 0) {\r\n    // Log a sample course to see its structure\r\n    console.log(`[${logId}] Sample course:`, {\r\n      id: filteredCourses[0].course_id,\r\n      day: filteredCourses[0].day_of_week,\r\n      slot: filteredCourses[0].time_slot_id || filteredCourses[0].timeslot_id\r\n    });\r\n  }\r\n\r\n  // Multiple ways to try to match the day\r\n  const dayMatchers = [\r\n    // Exact match\r\n    (courseDay: string) => courseDay === day,\r\n    // Normalized match\r\n    (courseDay: string) => normalizeDayName(courseDay) === day,\r\n    // Substring match (MON in Monday, etc.)\r\n    (courseDay: string) => day.toUpperCase().includes(courseDay.toUpperCase()) || courseDay.toUpperCase().includes(day.substring(0, 3).toUpperCase())\r\n  ];\r\n  \r\n  // Multiple ways to try to match the time slot\r\n  const slotMatchers = [\r\n    // Exact formatted match\r\n    (slot: string) => slot === `TS${timeSlotId}-${day.substring(0, 3).toUpperCase()}`,\r\n    // Just check if it has the slot number\r\n    (slot: string) => slot.includes(`TS${timeSlotId}`),\r\n    // Check if it starts with the slot number\r\n    (slot: string) => slot.startsWith(`TS${timeSlotId}`),\r\n    // Just check the numeric part\r\n    (slot: string) => {\r\n      const match = slot.match(/TS(\\d+)/);\r\n      return match && parseInt(match[1]) === timeSlotId;\r\n    }\r\n  ];\r\n  \r\n  // Try all possible combinations of matchers\r\n  const matchedCourses = filteredCourses.filter(course => {\r\n    // Use either timeslot_id or time_slot_id, whichever exists\r\n    const slotId = course.timeslot_id || course.time_slot_id;\r\n    const courseDay = course.day_of_week;\r\n    \r\n    // If we're missing critical data, skip this course\r\n    if (!slotId || !courseDay) return false;\r\n    \r\n    // Try each day matcher\r\n    const dayMatched = dayMatchers.some(matcher => matcher(courseDay));\r\n    // Try each slot matcher\r\n    const slotMatched = slotMatchers.some(matcher => matcher(slotId));\r\n    \r\n    // Both must match\r\n    const matched = dayMatched && slotMatched;\r\n    \r\n    if (matched) {\r\n      console.log(`[${logId}] Found matching course:`, {\r\n        id: course.course_id,\r\n        day: courseDay,\r\n        slot: slotId\r\n      });\r\n    }\r\n    \r\n    return matched;\r\n  });\r\n  \r\n  console.log(`[${logId}] Found ${matchedCourses.length} matching courses`);\r\n  return matchedCourses;\r\n  }; */\r\n\r\n\r\n  // Function to accept a conflict\r\n  const handleAcceptConflict = async (conflictId: string) => {\r\n    try {\r\n      await scheduleService.resolveConflict(conflictId, {\r\n        action: 'ACCEPT',\r\n        notes: 'Conflict accepted by administrator'\r\n      });\r\n      \r\n      // Update local state\r\n      setConflicts(conflicts.map(conflict => \r\n        conflict.conflict_id === conflictId \r\n          ? { ...conflict, is_resolved: true, resolution_notes: 'Conflict accepted by administrator' }\r\n          : conflict\r\n      ));\r\n    } catch (err) {\r\n      console.error(\"Error accepting conflict:\", err);\r\n      setError(\"Failed to accept conflict\");\r\n    }\r\n  };\r\n\r\n  // Function to override a conflict\r\n  const handleOverrideConflict = async (conflictId: string) => {\r\n    // In a real implementation, this would open a dialog to collect details\r\n    try {\r\n      // Simplified implementation for now\r\n      setConflicts(conflicts.map(conflict => \r\n        conflict.conflict_id === conflictId \r\n          ? { ...conflict, is_resolved: true, resolution_notes: 'Conflict overridden by administrator' }\r\n          : conflict\r\n      ));\r\n    } catch (err) {\r\n      console.error(\"Error overriding conflict:\", err);\r\n      setError(\"Failed to override conflict\");\r\n    }\r\n  };\r\n\r\n  // Function to render a course block in the timetable\r\n  const renderCourseBlock = (course: any) => {\r\n    const courseHasConflict = hasConflict(course);\r\n    \r\n    return (\r\n      <Box\r\n        key={course.scheduled_course_id}\r\n        sx={{\r\n          backgroundColor: getCourseColor(course),\r\n          color: 'white',\r\n          p: 1,\r\n          borderRadius: 1,\r\n          mb: 1,\r\n          position: 'relative',\r\n          cursor: 'pointer',\r\n          '&:hover': {\r\n            opacity: 0.9,\r\n          }\r\n        }}\r\n      >\r\n        <Typography variant=\"subtitle2\" fontWeight=\"bold\" noWrap>\r\n          {course.course_name}\r\n        </Typography>\r\n        <Typography variant=\"caption\" display=\"block\" noWrap>\r\n          {course.course_id}\r\n        </Typography>\r\n        <Typography variant=\"caption\" display=\"block\" noWrap>\r\n          Prof. {course.professor_name || 'TBA'}\r\n        </Typography>\r\n        \r\n        {courseHasConflict && (\r\n          <Tooltip title=\"This course has scheduling conflicts\">\r\n            <WarningIcon \r\n              sx={{ \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n                color: 'orange',\r\n                fontSize: 20\r\n              }} \r\n            />\r\n          </Tooltip>\r\n        )}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  // Render weekly view\r\n  const renderWeekView = () => {\r\n    console.log('Rendering week view with:', {\r\n      filteredCourses: filteredCourses.length,\r\n      scheduledCourses: scheduledCourses.length,\r\n      scheduleData: scheduleData ? {\r\n        id: scheduleData.schedule_id,\r\n        hasCourses: Array.isArray(scheduleData.courses) && scheduleData.courses.length > 0,\r\n        hasScheduledCourses: Array.isArray(scheduleData.ScheduledCourses) && scheduleData.ScheduledCourses.length > 0\r\n      } : 'null',\r\n      sampleCourse: filteredCourses.length > 0 ? {\r\n        course_id: filteredCourses[0].course_id,\r\n        day_of_week: filteredCourses[0].day_of_week,\r\n        time_slot_id: filteredCourses[0].time_slot_id\r\n      } : 'No courses'\r\n    });\r\n  \r\n    if (!filteredCourses || filteredCourses.length === 0) {\r\n      console.log('No filtered courses available. All scheduled courses:', scheduledCourses.length);\r\n      console.log('Schedule object:', scheduleData ? Object.keys(scheduleData) : 'null');\r\n      \r\n      // Provide a more informative message with a button to generate courses\r\n      return (\r\n        <Paper sx={{ p: 3, textAlign: 'center' }}>\r\n          <Typography gutterBottom>No courses found for this schedule. Generate courses or select a different schedule.</Typography>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            sx={{ mt: 2 }}\r\n            onClick={handleCreateSchedule}\r\n          >\r\n            Generate New Schedule\r\n          </Button>\r\n        </Paper>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Paper sx={{ mt: 2, overflowX: 'auto' }}>\r\n        <Box sx={{ minWidth: 800 }}>\r\n          <Grid container>\r\n            {/* Time slots column */}\r\n            <Grid item xs={1}>\r\n              <Box sx={{ borderRight: 1, borderColor: 'divider', height: '100%', pt: 7 }}>\r\n                {timeSlots.map(slot => (\r\n                  <Box \r\n                    key={slot.id} \r\n                    sx={{ \r\n                      height: 120, \r\n                      p: 1, \r\n                      borderBottom: 1, \r\n                      borderColor: 'divider',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center'\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"caption\">\r\n                      {slot.start} - {slot.end}\r\n                    </Typography>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </Grid>\r\n\r\n            {/* Days columns */}\r\n            {daysOfWeek.map((day, index) => (\r\n              <Grid item xs key={day}>\r\n                <Box sx={{ borderRight: index < daysOfWeek.length - 1 ? 1 : 0, borderColor: 'divider' }}>\r\n                  {/* Day header */}\r\n                  <Box \r\n                    sx={{ \r\n                      p: 2, \r\n                      borderBottom: 1, \r\n                      borderColor: 'divider',\r\n                      textAlign: 'center',\r\n                      fontWeight: 'bold',\r\n                      bgcolor: 'grey.100'\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"subtitle1\">{day}</Typography>\r\n                  </Box>\r\n\r\n                  {/* Time slots */}\r\n                  {timeSlots.map(slot => {\r\n                    const coursesForSlot = getCoursesForTimeSlot(slot.id, day);\r\n\r\n                    return (\r\n                      <Box \r\n                        key={`${day}-${slot.id}`}\r\n                        sx={{ \r\n                          height: 120, \r\n                          p: 1, \r\n                          borderBottom: 1, \r\n                          borderColor: 'divider',\r\n                          overflow: 'auto'\r\n                        }}\r\n                      >\r\n                        {coursesForSlot.map(course => renderCourseBlock(course))}\r\n                      </Box>\r\n                    );\r\n                  })}\r\n                </Box>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  // Render day view\r\n  const renderDayView = () => {\r\n    if (!filteredCourses.length) {\r\n      return (\r\n        <Paper sx={{ p: 3, textAlign: 'center' }}>\r\n          <Typography>No schedule data available or no courses match your filters.</Typography>\r\n        </Paper>\r\n      );\r\n    }\r\n\r\n    const day = daysOfWeek[currentDay];\r\n    const dayFilteredCourses = filteredCourses.filter(course => course.day_of_week === day);\r\n\r\n    return (\r\n      <Paper sx={{ mt: 2 }}>\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {day}'s Schedule\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            {timeSlots.map(slot => {\r\n              const coursesForSlot = dayFilteredCourses.filter(course => \r\n                course.time_slot_id === `TS${slot.id}-${day.substring(0, 3).toUpperCase()}`\r\n              );\r\n\r\n              return (\r\n                <Grid item xs={12} key={slot.id}>\r\n                  <Paper \r\n                    elevation={1} \r\n                    sx={{ \r\n                      p: 2, \r\n                      borderLeft: 4, \r\n                      borderColor: coursesForSlot.length > 0 ? 'primary.main' : 'grey.300'\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                      {slot.start} - {slot.end}\r\n                    </Typography>\r\n                    <Box sx={{ mt: 1 }}>\r\n                      {coursesForSlot.length > 0 ? (\r\n                        coursesForSlot.map(course => renderCourseBlock(course))\r\n                      ) : (\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          No courses scheduled\r\n                        </Typography>\r\n                      )}\r\n                    </Box>\r\n                  </Paper>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  // Function to render the conflicts section\r\n  const renderConflicts = () => {\r\n    const displayConflicts = showResolvedConflicts \r\n      ? conflicts \r\n      : conflicts.filter(conflict => !conflict.is_resolved);\r\n    \r\n    if (displayConflicts.length === 0) {\r\n      return (\r\n        <Alert severity=\"success\" sx={{ mt: 3 }}>\r\n          No unresolved conflicts in this schedule.\r\n        </Alert>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <Paper sx={{ mt: 3, p: 2 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n          <Typography variant=\"h6\">\r\n            Conflicts ({displayConflicts.length})\r\n          </Typography>\r\n          <Button \r\n            variant=\"outlined\" \r\n            size=\"small\"\r\n            onClick={() => setShowResolvedConflicts(!showResolvedConflicts)}\r\n          >\r\n            {showResolvedConflicts ? 'Hide Resolved' : 'Show Resolved'}\r\n          </Button>\r\n        </Box>\r\n        \r\n        <Grid container spacing={2}>\r\n          {displayConflicts.map(conflict => (\r\n            <Grid item xs={12} key={conflict.conflict_id}>\r\n              <Paper \r\n                elevation={1} \r\n                sx={{ \r\n                  p: 2, \r\n                  borderLeft: 4, \r\n                  borderColor: conflict.is_resolved ? 'success.main' : 'warning.main'\r\n                }}\r\n              >\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\r\n                      {conflict.conflict_type}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {conflict.description}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Time: {conflict.day_of_week}, {conflict.time_slot?.name || 'Unknown time slot'}\r\n                    </Typography>\r\n                    \r\n                    {conflict.courses && conflict.courses.length > 0 && (\r\n                      <Box sx={{ mt: 1 }}>\r\n                        <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                          Affected Courses:\r\n                        </Typography>\r\n                        {conflict.courses.map((course: any) => (\r\n                          <Typography key={course.scheduled_course_id} variant=\"body2\" sx={{ ml: 2 }}>\r\n                            • {course.course_name} (Prof. {course.professor_name})\r\n                          </Typography>\r\n                        ))}\r\n                      </Box>\r\n                    )}\r\n                    \r\n                    {conflict.is_resolved && (\r\n                      <Box sx={{ mt: 1, p: 1, bgcolor: 'success.light', borderRadius: 1 }}>\r\n                        <Typography variant=\"body2\" color=\"success.contrastText\">\r\n                          <strong>Resolution:</strong> {conflict.resolution_notes}\r\n                        </Typography>\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n                  \r\n                  {!conflict.is_resolved && (\r\n                    <Box>\r\n                      <Button \r\n                        variant=\"outlined\" \r\n                        color=\"primary\" \r\n                        size=\"small\" \r\n                        onClick={() => handleOverrideConflict(conflict.conflict_id)}\r\n                        sx={{ mr: 1 }}\r\n                      >\r\n                        Override\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => handleAcceptConflict(conflict.conflict_id)}\r\n                      >\r\n                        Accept\r\n                      </Button>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Box sx={{ mt: 4, mb: 4 }}>\r\n        {/* Header */}\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n          <Typography variant=\"h4\" component=\"h1\">\r\n            Schedule\r\n          </Typography>\r\n          <Box>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<RefreshIcon />}\r\n              onClick={handleRefresh}\r\n              sx={{ mr: 2 }}\r\n            >\r\n              Refresh\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<GetAppIcon />}\r\n              onClick={handleExport}\r\n              sx={{ mr: 2 }}\r\n            >\r\n              Export\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AddIcon />}\r\n              onClick={handleCreateSchedule}\r\n            >\r\n              Generate New Schedule\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        \r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n            <AlertTitle>Error</AlertTitle>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        {/* Filters */}\r\n        <Card sx={{ mb: 4 }}>\r\n          <CardContent>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item xs={12} md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"semester-select-label\">Semester</InputLabel>\r\n                  <Select\r\n                    labelId=\"semester-select-label\"\r\n                    value={selectedSemester}\r\n                    onChange={handleSemesterChange}\r\n                    label=\"Semester\"\r\n                  >\r\n                    {semesters.map((semester: any) => (\r\n                      <MenuItem key={semester.semester_id} value={semester.semester_id}>\r\n                        {semester.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"department-select-label\">Department</InputLabel>\r\n                  <Select\r\n                    labelId=\"department-select-label\"\r\n                    value={selectedDepartment}\r\n                    onChange={handleDepartmentChange}\r\n                    label=\"Department\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>All Departments</em>\r\n                    </MenuItem>\r\n                    {departments.map((department) => (\r\n                      <MenuItem key={department.department_id} value={department.department_id}>\r\n                        {department.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"program-select-label\">Program</InputLabel>\r\n                  <Select\r\n                    labelId=\"program-select-label\"\r\n                    value={selectedProgram}\r\n                    onChange={handleProgramChange}\r\n                    label=\"Program\"\r\n                    disabled={!selectedDepartment}\r\n                  >\r\n                    <MenuItem value=\"all\">\r\n                      <em>All Programs</em>\r\n                    </MenuItem>\r\n                    {programs\r\n                      .filter(program => !selectedDepartment || program.department_id === selectedDepartment)\r\n                      .map((program) => (\r\n                        <MenuItem key={program.program_id} value={program.program_id}>\r\n                          {program.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Search\"\r\n                  variant=\"outlined\"\r\n                  value={searchTerm}\r\n                  onChange={handleSearchChange}\r\n                  placeholder=\"Search courses\"\r\n                  InputProps={{\r\n                    endAdornment: <SearchIcon color=\"action\" />\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        {/* View Mode Tabs */}\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\r\n        <Tabs value={viewMode} onChange={handleViewModeChange}>\r\n\r\n<Tab label=\"Week View\" value=\"week\" />\r\n\r\n<Tab label=\"Day View\" value=\"day\" />\r\n\r\n</Tabs>\r\n\r\n</Box>\r\n\r\n\r\n\r\n{/* Day Selection Tabs (for Day View) */}\r\n\r\n{viewMode === 'day' && (\r\n\r\n<Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\r\n\r\n<Tabs value={currentDay} onChange={handleDayChange}>\r\n\r\n  {daysOfWeek.map((day, index) => (\r\n\r\n    <Tab key={day} label={day} value={index} />\r\n\r\n  ))}\r\n\r\n</Tabs>\r\n\r\n</Box>\r\n\r\n)}\r\n\r\n\r\n\r\n{/* Schedule Display */}\r\n\r\n{viewMode === 'week' ? renderWeekView() : renderDayView()}\r\n\r\n\r\n\r\n{/* Conflicts */}\r\n\r\n{renderConflicts()}\r\n\r\n\r\n\r\n{/* Legend */}\r\n\r\n<Box sx={{ mt: 3, display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\r\n\r\n<Box sx={{ display: 'flex', alignItems: 'center', mr: 3, mb: 1 }}>\r\n\r\n<Box sx={{ width: 16, height: 16, bgcolor: 'rgba(25, 118, 210, 0.8)', mr: 1, borderRadius: 1 }} />\r\n\r\n<Typography variant=\"caption\">Core Course</Typography>\r\n\r\n</Box>\r\n\r\n<Box sx={{ display: 'flex', alignItems: 'center', mr: 3, mb: 1 }}>\r\n\r\n<Box sx={{ width: 16, height: 16, bgcolor: 'rgba(76, 175, 80, 0.8)', mr: 1, borderRadius: 1 }} />\r\n\r\n<Typography variant=\"caption\">Elective Course</Typography>\r\n\r\n</Box>\r\n\r\n<Box sx={{ display: 'flex', alignItems: 'center', mr: 3, mb: 1 }}>\r\n\r\n<Box sx={{ width: 16, height: 16, bgcolor: 'rgba(255, 152, 0, 0.8)', mr: 1, borderRadius: 1 }} />\r\n\r\n<Typography variant=\"caption\">Overridden Course</Typography>\r\n\r\n</Box>\r\n\r\n<Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n\r\n<WarningIcon sx={{ color: 'orange', fontSize: 16, mr: 1 }} />\r\n\r\n<Typography variant=\"caption\">Scheduling Conflict</Typography>\r\n\r\n</Box>\r\n\r\n</Box>\r\n\r\n</Box>\r\n\r\n{showGenerateForm && (\r\n  <Dialog open={showGenerateForm} onClose={() => setShowGenerateForm(false)} maxWidth=\"md\" fullWidth>\r\n    <DialogTitle>Generate New Schedule</DialogTitle>\r\n    <DialogContent>\r\n      <GenerateSchedule \r\n        onScheduleGenerated={handleScheduleGenerated} \r\n        onClose={() => setShowGenerateForm(false)}\r\n      />\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={() => setShowGenerateForm(false)}>Cancel</Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n)}\r\n\r\n</Container>\r\n\r\n\r\n\r\n);\r\n\r\n};\r\n\r\nexport default ScheduleView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}