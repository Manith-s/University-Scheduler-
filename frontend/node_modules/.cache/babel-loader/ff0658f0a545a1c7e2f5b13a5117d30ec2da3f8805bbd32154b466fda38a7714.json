{"ast":null,"code":"var _jsxFileName = \"/Users/tanvinaraynagowda/University-Scheduler--1/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.tsx\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  loading: true,\n  isAuthenticated: false,\n  login: async () => ({\n    success: false\n  }),\n  logout: () => {},\n  checkAuth: async () => false\n});\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initAuth = async () => {\n      await checkAuth();\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const checkAuth = async () => {\n    try {\n      if (!authService.isAuthenticated()) {\n        return false;\n      }\n      const currentUser = await authService.getCurrentUser();\n      if (currentUser) {\n        // Transform the user object to match our User type\n        // Always set role as 'admin' regardless of what comes from the API\n        const userData = {\n          id: currentUser.admin_id || currentUser.id,\n          email: currentUser.email,\n          first_name: currentUser.first_name,\n          last_name: currentUser.last_name,\n          role: 'admin',\n          // Always admin\n          department_id: currentUser.department_id\n        };\n        setUser(userData);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      return false;\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      // Always use 'admin' role\n      const result = await authService.login(email, password, 'admin');\n      if (result.success && result.user) {\n        // Transform the user object to match our User type\n        const userData = {\n          id: result.user.admin_id || result.user.id,\n          email: result.user.email,\n          first_name: result.user.first_name,\n          last_name: result.user.last_name,\n          role: 'admin',\n          // Always admin\n          department_id: result.user.department_id\n        };\n        setUser(userData);\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        message: result.message\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: error instanceof Error ? error.message : 'An unexpected error occurred'\n      };\n    }\n  };\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      isAuthenticated: !!user,\n      login,\n      logout,\n      checkAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","user","loading","isAuthenticated","login","success","logout","checkAuth","useAuth","_s","AuthProvider","children","_s2","setUser","setLoading","initAuth","currentUser","getCurrentUser","userData","id","admin_id","email","first_name","last_name","role","department_id","error","console","password","result","message","Error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tanvinaraynagowda/University-Scheduler--1/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["// src/contexts/AuthContext.tsx\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\n\ntype User = {\n  id: string;\n  email: string;\n  first_name: string;\n  last_name: string;\n  role: 'admin'; // Changed to only allow 'admin' role\n  department_id: string;\n};\n\ntype AuthContextType = {\n  user: User | null;\n  loading: boolean;\n  isAuthenticated: boolean;\n  login: (email: string, password: string) => Promise<{ success: boolean; message?: string }>; // Removed role parameter\n  logout: () => void;\n  checkAuth: () => Promise<boolean>;\n};\n\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  loading: true,\n  isAuthenticated: false,\n  login: async () => ({ success: false }),\n  logout: () => {},\n  checkAuth: async () => false,\n});\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initAuth = async () => {\n      await checkAuth();\n      setLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const checkAuth = async (): Promise<boolean> => {\n    try {\n      if (!authService.isAuthenticated()) {\n        return false;\n      }\n\n      const currentUser = await authService.getCurrentUser();\n      \n      if (currentUser) {\n        // Transform the user object to match our User type\n        // Always set role as 'admin' regardless of what comes from the API\n        const userData: User = {\n          id: currentUser.admin_id || currentUser.id,\n          email: currentUser.email,\n          first_name: currentUser.first_name,\n          last_name: currentUser.last_name,\n          role: 'admin', // Always admin\n          department_id: currentUser.department_id,\n        };\n        \n        setUser(userData);\n        return true;\n      }\n\n      return false;\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      return false;\n    }\n  };\n\n  const login = async (email: string, password: string): Promise<{ success: boolean; message?: string }> => {\n    try {\n      // Always use 'admin' role\n      const result = await authService.login(email, password, 'admin');\n      \n      if (result.success && result.user) {\n        // Transform the user object to match our User type\n        const userData: User = {\n          id: result.user.admin_id || result.user.id,\n          email: result.user.email,\n          first_name: result.user.first_name,\n          last_name: result.user.last_name,\n          role: 'admin', // Always admin\n          department_id: result.user.department_id,\n        };\n        \n        setUser(userData);\n        return { success: true };\n      }\n      \n      return { success: false, message: result.message };\n    } catch (error) {\n      console.error('Login error:', error);\n      return { \n        success: false, \n        message: (error instanceof Error) ? error.message : 'An unexpected error occurred'\n      };\n    }\n  };\n\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        loading,\n        isAuthenticated: !!user,\n        login,\n        logout,\n        checkAuth,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}