{"ast":null,"code":"// Define the base API URL\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\n\n// Types\n\n// Get all schedules\nexport const getAllSchedules = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${API_URL}/schedules`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch all schedules');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error in getAllSchedules:', error);\n    return [];\n  }\n};\n\n// Get active schedule for a semester\nexport const getActiveSchedule = async semesterId => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${API_URL}/schedules/semester/${semesterId}/active`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch active schedule');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error in getActiveSchedule for semester ${semesterId}:`, error);\n    return null;\n  }\n};\n\n// Get all schedules for a semester\nexport const getSchedulesBySemester = async semesterId => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${API_URL}/schedules/semester/${semesterId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch schedules by semester');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error in getSchedulesBySemester for semester ${semesterId}:`, error);\n    return [];\n  }\n};\n\n// Get schedule by ID with courses\nexport const getScheduleById = async id => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${API_URL}/schedules/${id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch schedule');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error in getScheduleById for ID ${id}:`, error);\n    return null;\n  }\n};\nconst scheduleService = {\n  getAllSchedules,\n  getActiveSchedule,\n  getSchedulesBySemester,\n  getScheduleById\n};\nexport default scheduleService;","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","getAllSchedules","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","error","console","getActiveSchedule","semesterId","getSchedulesBySemester","getScheduleById","id","scheduleService"],"sources":["C:/Users/shash/Documents/Master's Colleges/UNIVERSITY OF DELAWARE/COURSES/Project/university-scheduler/frontend/src/services/scheduleService.ts"],"sourcesContent":["// Define the base API URL\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\r\n\r\n// Types\r\nexport interface ScheduledCourse {\r\n  scheduled_course_id: string;\r\n  schedule_id: string;\r\n  course_id: string;\r\n  course_name: string;\r\n  professor_id: string;\r\n  professor_name: string;\r\n  timeslot_id: string;\r\n  day_of_week: string;\r\n  time_slot_id: string;\r\n  room?: string;\r\n  is_core: boolean;\r\n  is_override: boolean;\r\n  override_reason?: string;\r\n  conflicts?: any[];\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface Schedule {\r\n  schedule_id: string;\r\n  semester_id: string;\r\n  semester_name: string;\r\n  name: string;\r\n  is_final: boolean;\r\n  is_active?: boolean;\r\n  courses: ScheduledCourse[];\r\n  conflicts: any[];\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\n// Get all schedules\r\nexport const getAllSchedules = async (): Promise<Schedule[]> => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_URL}/schedules`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch all schedules');\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error in getAllSchedules:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Get active schedule for a semester\r\nexport const getActiveSchedule = async (semesterId: string): Promise<Schedule | null> => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_URL}/schedules/semester/${semesterId}/active`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch active schedule');\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(`Error in getActiveSchedule for semester ${semesterId}:`, error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Get all schedules for a semester\r\nexport const getSchedulesBySemester = async (semesterId: string): Promise<Schedule[]> => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_URL}/schedules/semester/${semesterId}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch schedules by semester');\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(`Error in getSchedulesBySemester for semester ${semesterId}:`, error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Get schedule by ID with courses\r\nexport const getScheduleById = async (id: string): Promise<Schedule | null> => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_URL}/schedules/${id}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch schedule');\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(`Error in getScheduleById for ID ${id}:`, error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst scheduleService = {\r\n  getAllSchedules,\r\n  getActiveSchedule,\r\n  getSchedulesBySemester,\r\n  getScheduleById\r\n};\r\n\r\nexport default scheduleService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}