{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Documents\\\\Master's Colleges\\\\UNIVERSITY OF DELAWARE\\\\COURSES\\\\Project\\\\university-scheduler\\\\frontend\\\\src\\\\components\\\\admin\\\\schedule\\\\ScheduleView.tsx\",\n  _s = $RefreshSig$();\n// src/components/admin/schedules/ScheduleView.tsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Box, Button, Container, Typography, Card, CardContent, FormControl, InputLabel, MenuItem, Select, Grid, Paper, CircularProgress, Alert, AlertTitle, Tabs, Tab, Tooltip,\n//IconButton,\nTextField } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n//import FilterListIcon from '@mui/icons-material/FilterList';\nimport WarningIcon from '@mui/icons-material/Warning';\n//import InfoIcon from '@mui/icons-material/Info';\nimport SearchIcon from '@mui/icons-material/Search';\nimport GetAppIcon from '@mui/icons-material/GetApp';\n//import { useNavigate } from 'react-router-dom';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\n\n// Import services\nimport scheduleService from '../../../services/scheduleService';\nimport departmentService from '../../../services/departmentService';\nimport programService from '../../../services/programService';\nimport semesterService from '../../../services/semesterService';\nimport GenerateSchedule from './GenerateSchedule';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScheduleView = () => {\n  _s();\n  //const navigate = useNavigate();\n\n  // State variables\n  const [scheduleData, setSchedule] = useState(null);\n  const [scheduledCourses, setScheduledCourses] = useState([]);\n  const [filteredCourses, setFilteredCourses] = useState([]);\n  const [conflicts, setConflicts] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [programs, setPrograms] = useState([]);\n  const [semesters, setSemesters] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedProgram, setSelectedProgram] = useState('all'); // Default to 'all' programs\n  const [selectedSemester, setSelectedSemester] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [viewMode, setViewMode] = useState('week');\n  const [showGenerateForm, setShowGenerateForm] = useState(false);\n  const [currentDay, setCurrentDay] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showResolvedConflicts, setShowResolvedConflicts] = useState(false);\n\n  // Add state for available schedules and selected schedule\n  const [availableSchedules, setAvailableSchedules] = useState([]);\n  const [selectedScheduleId, setSelectedScheduleId] = useState('');\n\n  // Days and time slots for schedule display\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n  const timeSlots = [{\n    id: 1,\n    name: 'Time Slot 1',\n    start: '09:10',\n    end: '10:05'\n  }, {\n    id: 2,\n    name: 'Time Slot 2',\n    start: '10:20',\n    end: '11:15'\n  }, {\n    id: 3,\n    name: 'Time Slot 3',\n    start: '11:30',\n    end: '12:25'\n  }, {\n    id: 4,\n    name: 'Time Slot 4',\n    start: '12:45',\n    end: '14:05'\n  }, {\n    id: 5,\n    name: 'Time Slot 5',\n    start: '13:30',\n    end: '14:50'\n  }, {\n    id: 6,\n    name: 'Time Slot 6',\n    start: '17:30',\n    end: '20:30'\n  }, {\n    id: 7,\n    name: 'Time Slot 7',\n    start: '18:00',\n    end: '21:00'\n  }];\n\n  // Add this helper function near the top of your component\n  const normalizeDayName = day => {\n    if (!day) return '';\n\n    // Handle short codes\n    const dayMap = {\n      'MON': 'Monday',\n      'TUE': 'Tuesday',\n      'WED': 'Wednesday',\n      'THU': 'Thursday',\n      'FRI': 'Friday'\n    };\n\n    // If it's a short code, convert it\n    if (dayMap[day]) {\n      return dayMap[day];\n    }\n\n    // If it's already a full name, return it\n    const fullNames = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n    if (fullNames.includes(day)) {\n      return day;\n    }\n\n    // Try to match partial\n    for (const [code, fullName] of Object.entries(dayMap)) {\n      if (day.toUpperCase().includes(code) || fullName.toLowerCase().includes(day.toLowerCase())) {\n        return fullName;\n      }\n    }\n\n    // Default\n    return day;\n  };\n\n  // Add this function to fetch available schedules when semester changes\n  const fetchAvailableSchedules = useCallback(async semesterId => {\n    if (!semesterId) return;\n    try {\n      setLoading(true);\n      const data = await scheduleService.getSchedulesBySemester(semesterId);\n      console.log(`Found ${data.length} schedules for semester ${semesterId}`);\n      setAvailableSchedules(data);\n\n      // If we have schedules and none is selected yet, select the first one\n      if (data.length > 0 && !selectedScheduleId) {\n        setSelectedScheduleId(data[0].schedule_id);\n        console.log(`Auto-selecting first schedule: ${data[0].schedule_id}`);\n      }\n    } catch (err) {\n      console.error('Error fetching schedules for semester:', err);\n      setError('Failed to load schedules for this semester');\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedScheduleId]);\n\n  // Function to load a specific schedule by ID\n  const loadScheduleById = useCallback(async scheduleId => {\n    if (!scheduleId) return;\n    try {\n      var _scheduleData$courses;\n      setLoading(true);\n      setError(null);\n      console.log(`Loading specific schedule: ${scheduleId}`);\n      const scheduleData = await scheduleService.getScheduleById(scheduleId);\n      const conflictsData = await scheduleService.getScheduleConflicts(scheduleId);\n      console.log(`Loaded schedule with ${((_scheduleData$courses = scheduleData.courses) === null || _scheduleData$courses === void 0 ? void 0 : _scheduleData$courses.length) || 0} courses`);\n      setSchedule(scheduleData);\n      setScheduledCourses(scheduleData.courses || []);\n      setFilteredCourses(scheduleData.courses || []);\n      setConflicts(conflictsData);\n    } catch (err) {\n      console.error(`Error loading schedule ${scheduleId}:`, err);\n      setError('Failed to load the selected schedule');\n      setSchedule(null);\n      setScheduledCourses([]);\n      setFilteredCourses([]);\n      setConflicts([]);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const handleRefresh = useCallback(async () => {\n    if (!selectedSemester) return;\n    setLoading(true);\n    setError(null);\n    try {\n      console.log(`Refreshing schedule data for semester: ${selectedSemester}`);\n\n      // First, refresh the list of available schedules\n      console.log(`Fetching available schedules for semester: ${selectedSemester}`);\n      await fetchAvailableSchedules(selectedSemester);\n\n      // If we have a selected schedule, reload it\n      if (selectedScheduleId) {\n        console.log(`Reloading selected schedule: ${selectedScheduleId}`);\n        await loadScheduleById(selectedScheduleId);\n      } else {\n        console.log('No schedule selected, will try to select one from available schedules');\n        // If we don't have a selected schedule but we've just loaded available schedules,\n        // the fetchAvailableSchedules function will auto-select the first one\n      }\n\n      // Reset filters\n      setSelectedDepartment('');\n      setSelectedProgram('all');\n    } catch (err) {\n      console.error(\"Error refreshing data:\", err);\n      setError(\"Failed to refresh data. Please ensure schedules exist for this semester.\");\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedSemester, selectedScheduleId, fetchAvailableSchedules, loadScheduleById]); // ADD THESE DEPENDENCIES\n\n  // Add this effect to check URL parameters\n  useEffect(() => {\n    // Check URL params for direct navigation from schedule generation\n    const queryParams = new URLSearchParams(window.location.search);\n    const semesterParam = queryParams.get('semester');\n    const refreshParam = queryParams.get('refresh');\n    if (semesterParam) {\n      console.log(`URL has semester param: ${semesterParam}, setting as selected`);\n      setSelectedSemester(semesterParam);\n\n      // If refresh=true is in the URL, force a refresh\n      if (refreshParam === 'true') {\n        // Use setTimeout to ensure the semester state is updated first\n        setTimeout(() => handleRefresh(), 500);\n      }\n    }\n  }, [handleRefresh]); // Empty dependency array means this runs once on component mount\n\n  // Initial data loading\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Get semesters\n        const semestersData = await semesterService.getAllSemesters();\n        setSemesters(semestersData);\n\n        // Get departments and programs\n        const departmentsData = await departmentService.getAllDepartments();\n        const programsData = await programService.getAllPrograms();\n        setDepartments(departmentsData);\n        setPrograms(programsData);\n\n        // If we have semesters, try to get a schedule\n        if (semestersData.length > 0) {\n          // Find the current semester or use the first one\n          const currentSemester = semestersData.find(s => s.is_current) || semestersData[0];\n          setSelectedSemester(currentSemester.semester_id);\n          try {\n            // Try to get the active schedule for this semester\n            const scheduleData = await scheduleService.getActiveSchedule(currentSemester.semester_id);\n            const conflictsData = await scheduleService.getScheduleConflicts(scheduleData.schedule_id);\n            setSchedule(scheduleData);\n            setScheduledCourses(scheduleData.courses || []);\n            setFilteredCourses(scheduleData.courses || []);\n            setConflicts(conflictsData);\n          } catch (err) {\n            // No schedule exists yet, show message to create one\n            console.log('No active schedule found:', err);\n            setError('No active schedule found for the selected semester. Please generate a new schedule.');\n          }\n        } else {\n          setError('No semesters found. Please create a semester before generating schedules.');\n        }\n      } catch (err) {\n        console.error('Error fetching initial data:', err);\n        setError('Failed to load data. Please ensure your backend server is running.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Fetch schedule when semester changes\n  /*\r\n  useEffect(() => {\r\n    if (selectedSemester) {\r\n      const fetchSchedule = async () => {\r\n        try {\r\n          setLoading(true);\r\n          \r\n          const scheduleData = await scheduleService.getActiveSchedule(selectedSemester);\r\n          const conflictsData = await scheduleService.getScheduleConflicts(scheduleData.schedule_id);\r\n          \r\n          setSchedule(scheduleData);\r\n          setScheduledCourses(scheduleData.courses || []);\r\n          setFilteredCourses(scheduleData.courses || []);\r\n          setConflicts(conflictsData);\r\n          \r\n          setLoading(false);\r\n        } catch (err) {\r\n          console.error('Error fetching schedule for semester:', err);\r\n          setError('Failed to load schedule for selected semester.');\r\n          setLoading(false);\r\n        }\r\n      };\r\n      \r\n      fetchSchedule();\r\n    }\r\n  }, [selectedSemester]);*/\n\n  // Fetch schedules when semester changes\n  useEffect(() => {\n    if (selectedSemester) {\n      fetchAvailableSchedules(selectedSemester);\n    }\n  }, [selectedSemester, fetchAvailableSchedules]);\n\n  // Load the selected schedule when selectedScheduleId changes\n  useEffect(() => {\n    if (selectedScheduleId) {\n      loadScheduleById(selectedScheduleId);\n    }\n  }, [selectedScheduleId, loadScheduleById]);\n\n  // Apply filters when department, program, or search term changes\n  useEffect(() => {\n    if (!scheduledCourses.length) return;\n    let filtered = [...scheduledCourses];\n\n    // Filter by department\n    if (selectedDepartment) {\n      filtered = filtered.filter(course => course.department_id === selectedDepartment);\n    }\n\n    // Filter by program - if \"all\" is selected, don't filter by program\n    if (selectedProgram && selectedProgram !== 'all') {\n      filtered = filtered.filter(course => {\n        var _course$program_ids;\n        return (_course$program_ids = course.program_ids) === null || _course$program_ids === void 0 ? void 0 : _course$program_ids.includes(selectedProgram);\n      });\n    }\n\n    // Filter by search term\n    if (searchTerm) {\n      const search = searchTerm.toLowerCase();\n      filtered = filtered.filter(course => course.course_name.toLowerCase().includes(search) || course.course_id.toLowerCase().includes(search) || course.professor_name && course.professor_name.toLowerCase().includes(search));\n    }\n    setFilteredCourses(filtered);\n  }, [scheduledCourses, selectedDepartment, selectedProgram, searchTerm]);\n  const handleDepartmentChange = event => {\n    const deptId = event.target.value;\n    setSelectedDepartment(deptId);\n\n    // Reset program selection when department changes, but set to \"all\" instead of empty\n    setSelectedProgram('all');\n  };\n  const handleProgramChange = event => {\n    setSelectedProgram(event.target.value);\n\n    // If user selects \"all programs\", we need to update the filtered courses\n    // to show all courses for the selected department\n    if (event.target.value === 'all') {\n      let filtered = [...scheduledCourses];\n\n      // Keep department filter if selected\n      if (selectedDepartment) {\n        filtered = filtered.filter(course => course.department_id === selectedDepartment);\n      }\n\n      // Apply search filter if any\n      if (searchTerm) {\n        const search = searchTerm.toLowerCase();\n        filtered = filtered.filter(course => course.course_name.toLowerCase().includes(search) || course.course_id.toLowerCase().includes(search) || course.professor_name && course.professor_name.toLowerCase().includes(search));\n      }\n      setFilteredCourses(filtered);\n    }\n  };\n  const handleSemesterChange = event => {\n    setSelectedSemester(event.target.value);\n  };\n\n  // Add handler for schedule selection\n  const handleScheduleChange = event => {\n    console.log(`Selected schedule changed to: ${event.target.value}`);\n    setSelectedScheduleId(event.target.value);\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleViewModeChange = (event, newValue) => {\n    setViewMode(newValue);\n  };\n  const handleDayChange = (event, newValue) => {\n    setCurrentDay(newValue);\n  };\n  const handleCreateSchedule = () => {\n    setShowGenerateForm(true);\n  };\n  const handleScheduleGenerated = semesterId => {\n    console.log(`Schedule generated for semester: ${semesterId}, refreshing data`);\n    setSelectedSemester(semesterId);\n    setShowGenerateForm(false);\n    // Reload the schedule data\n    setTimeout(() => {\n      handleRefresh();\n    }, 500);\n  };\n  const handleExport = () => {\n    if (!scheduleData || !filteredCourses.length) {\n      setError(\"No schedule data available to export\");\n      return;\n    }\n    try {\n      var _semesters$find;\n      // Create a formatted schedule for export\n      const semesterName = ((_semesters$find = semesters.find(s => s.semester_id === selectedSemester)) === null || _semesters$find === void 0 ? void 0 : _semesters$find.name) || 'Current Semester';\n\n      // Create header rows\n      let csvContent = \"Course Schedule - \" + semesterName + \"\\n\";\n      csvContent += \"Generated on: \" + new Date().toLocaleString() + \"\\n\\n\";\n\n      // Column headers\n      csvContent += \"Course ID,Course Name,Professor,Day,Time,Room,Type\\n\";\n\n      // Add data rows\n      filteredCourses.forEach(course => {\n        const timeSlotId = course.time_slot_id;\n        const slotNumber = parseInt(timeSlotId.replace(/[^\\d]/g, ''));\n        const timeSlot = timeSlots.find(ts => ts.id === slotNumber) || {\n          start: \"\",\n          end: \"\"\n        };\n        const row = [course.course_id, course.course_name, course.professor_name || 'TBA', course.day_of_week, `${timeSlot.start}-${timeSlot.end}`, course.room || 'TBA', course.is_core ? 'Core' : 'Elective'];\n        csvContent += row.join(',') + '\\n';\n      });\n\n      // Create and download the file\n      const blob = new Blob([csvContent], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.setAttribute('href', url);\n      link.setAttribute('download', `schedule_${semesterName.replace(/\\s+/g, '_')}.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (err) {\n      console.error(\"Error exporting schedule:\", err);\n      setError(\"Failed to export schedule\");\n    }\n  };\n\n  // Function to determine background color for course blocks\n  const getCourseColor = course => {\n    if (course.is_override) return 'rgba(255, 152, 0, 0.8)'; // Orange for overrides\n    if (course.is_core) return 'rgba(25, 118, 210, 0.8)'; // Blue for core courses\n    return 'rgba(76, 175, 80, 0.8)'; // Green for electives\n  };\n\n  // Helper function to check if a course has conflicts\n  const hasConflict = course => {\n    return conflicts.some(conflict => conflict.courses.some(c => c.scheduled_course_id === course.scheduled_course_id) && !conflict.is_resolved);\n  };\n\n  // Function to find courses for a specific timeslot and day\n  //const getCoursesForTimeSlot = (timeSlotId: number, day: string) => {\n  const getCoursesForTimeSlot = (slotNumber, day) => {\n    if (!scheduleData || !scheduleData.courses || scheduleData.courses.length === 0) {\n      return [];\n    }\n    const normalizedDay = normalizeDayName(day);\n    console.log(`Looking for courses for slot ${slotNumber} on ${normalizedDay}`);\n    return scheduleData.courses.filter(course => {\n      // Try to match the day of week\n      const courseDayNormalized = normalizeDayName(course.day_of_week);\n      const dayMatch = courseDayNormalized === normalizedDay;\n\n      // Try multiple ways to match the time slot\n      let slotMatch = false;\n\n      // Match by time_slot_number if available\n      if (course.time_slot_number && course.time_slot_number === slotNumber) {\n        slotMatch = true;\n      }\n\n      // Match by timeslot_id or time_slot_id which has the format TSn-DAY\n      const timeSlotId = course.timeslot_id || course.time_slot_id || '';\n      if (timeSlotId.includes(`TS${slotNumber}`)) {\n        slotMatch = true;\n      }\n      const matches = dayMatch && slotMatch;\n      if (matches) {\n        console.log(`Found match: Course ${course.course_name} for ${day} in slot ${slotNumber}`);\n      }\n      return matches;\n    });\n  };\n\n  /*  \r\n  // Create a unique ID for detailed logging\r\n  const logId = Math.floor(Math.random() * 10000);\r\n  \r\n  console.log(`[${logId}] Looking for courses for day=\"${day}\", timeSlot=${timeSlotId}`);\r\n  console.log(`[${logId}] Number of filtered courses to search: ${filteredCourses.length}`);\r\n  \r\n  if (filteredCourses.length > 0) {\r\n    // Log a sample course to see its structure\r\n    console.log(`[${logId}] Sample course:`, {\r\n      id: filteredCourses[0].course_id,\r\n      day: filteredCourses[0].day_of_week,\r\n      slot: filteredCourses[0].time_slot_id || filteredCourses[0].timeslot_id\r\n    });\r\n  }\r\n    // Multiple ways to try to match the day\r\n  const dayMatchers = [\r\n    // Exact match\r\n    (courseDay: string) => courseDay === day,\r\n    // Normalized match\r\n    (courseDay: string) => normalizeDayName(courseDay) === day,\r\n    // Substring match (MON in Monday, etc.)\r\n    (courseDay: string) => day.toUpperCase().includes(courseDay.toUpperCase()) || courseDay.toUpperCase().includes(day.substring(0, 3).toUpperCase())\r\n  ];\r\n  \r\n  // Multiple ways to try to match the time slot\r\n  const slotMatchers = [\r\n    // Exact formatted match\r\n    (slot: string) => slot === `TS${timeSlotId}-${day.substring(0, 3).toUpperCase()}`,\r\n    // Just check if it has the slot number\r\n    (slot: string) => slot.includes(`TS${timeSlotId}`),\r\n    // Check if it starts with the slot number\r\n    (slot: string) => slot.startsWith(`TS${timeSlotId}`),\r\n    // Just check the numeric part\r\n    (slot: string) => {\r\n      const match = slot.match(/TS(\\d+)/);\r\n      return match && parseInt(match[1]) === timeSlotId;\r\n    }\r\n  ];\r\n  \r\n  // Try all possible combinations of matchers\r\n  const matchedCourses = filteredCourses.filter(course => {\r\n    // Use either timeslot_id or time_slot_id, whichever exists\r\n    const slotId = course.timeslot_id || course.time_slot_id;\r\n    const courseDay = course.day_of_week;\r\n    \r\n    // If we're missing critical data, skip this course\r\n    if (!slotId || !courseDay) return false;\r\n    \r\n    // Try each day matcher\r\n    const dayMatched = dayMatchers.some(matcher => matcher(courseDay));\r\n    // Try each slot matcher\r\n    const slotMatched = slotMatchers.some(matcher => matcher(slotId));\r\n    \r\n    // Both must match\r\n    const matched = dayMatched && slotMatched;\r\n    \r\n    if (matched) {\r\n      console.log(`[${logId}] Found matching course:`, {\r\n        id: course.course_id,\r\n        day: courseDay,\r\n        slot: slotId\r\n      });\r\n    }\r\n    \r\n    return matched;\r\n  });\r\n  \r\n  console.log(`[${logId}] Found ${matchedCourses.length} matching courses`);\r\n  return matchedCourses;\r\n  }; */\n\n  // Function to accept a conflict\n  const handleAcceptConflict = async conflictId => {\n    try {\n      await scheduleService.resolveConflict(conflictId, {\n        action: 'ACCEPT',\n        notes: 'Conflict accepted by administrator'\n      });\n\n      // Update local state\n      setConflicts(conflicts.map(conflict => conflict.conflict_id === conflictId ? {\n        ...conflict,\n        is_resolved: true,\n        resolution_notes: 'Conflict accepted by administrator'\n      } : conflict));\n    } catch (err) {\n      console.error(\"Error accepting conflict:\", err);\n      setError(\"Failed to accept conflict\");\n    }\n  };\n\n  // Function to override a conflict\n  const handleOverrideConflict = async conflictId => {\n    // In a real implementation, this would open a dialog to collect details\n    try {\n      // Simplified implementation for now\n      setConflicts(conflicts.map(conflict => conflict.conflict_id === conflictId ? {\n        ...conflict,\n        is_resolved: true,\n        resolution_notes: 'Conflict overridden by administrator'\n      } : conflict));\n    } catch (err) {\n      console.error(\"Error overriding conflict:\", err);\n      setError(\"Failed to override conflict\");\n    }\n  };\n\n  // Function to render a course block in the timetable\n  const renderCourseBlock = course => {\n    const courseHasConflict = hasConflict(course);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: getCourseColor(course),\n        color: 'white',\n        p: 1,\n        borderRadius: 1,\n        mb: 1,\n        position: 'relative',\n        cursor: 'pointer',\n        '&:hover': {\n          opacity: 0.9\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        fontWeight: \"bold\",\n        noWrap: true,\n        children: course.course_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        display: \"block\",\n        noWrap: true,\n        children: course.course_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        display: \"block\",\n        noWrap: true,\n        children: [\"Prof. \", course.professor_name || 'TBA']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 9\n      }, this), courseHasConflict && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"This course has scheduling conflicts\",\n        children: /*#__PURE__*/_jsxDEV(WarningIcon, {\n          sx: {\n            position: 'absolute',\n            top: 5,\n            right: 5,\n            color: 'orange',\n            fontSize: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 11\n      }, this)]\n    }, course.scheduled_course_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render weekly view\n  const renderWeekView = () => {\n    console.log('Rendering week view with:', {\n      filteredCourses: filteredCourses.length,\n      scheduledCourses: scheduledCourses.length,\n      scheduleData: scheduleData ? {\n        id: scheduleData.schedule_id,\n        hasCourses: Array.isArray(scheduleData.courses) && scheduleData.courses.length > 0,\n        hasScheduledCourses: Array.isArray(scheduleData.ScheduledCourses) && scheduleData.ScheduledCourses.length > 0\n      } : 'null',\n      sampleCourse: filteredCourses.length > 0 ? {\n        course_id: filteredCourses[0].course_id,\n        day_of_week: filteredCourses[0].day_of_week,\n        time_slot_id: filteredCourses[0].time_slot_id\n      } : 'No courses'\n    });\n    if (!filteredCourses || filteredCourses.length === 0) {\n      console.log('No filtered courses available. All scheduled courses:', scheduledCourses.length);\n      console.log('Schedule object:', scheduleData ? Object.keys(scheduleData) : 'null');\n\n      // Provide a more informative message with a button to generate courses\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          children: \"No courses found for this schedule. Generate courses or select a different schedule.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            mt: 2\n          },\n          onClick: handleCreateSchedule,\n          children: \"Generate New Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mt: 2,\n        overflowX: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 800\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                borderRight: 1,\n                borderColor: 'divider',\n                height: '100%',\n                pt: 7\n              },\n              children: timeSlots.map(slot => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 120,\n                  p: 1,\n                  borderBottom: 1,\n                  borderColor: 'divider',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  children: [slot.start, \" - \", slot.end]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 750,\n                  columnNumber: 21\n                }, this)\n              }, slot.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this), daysOfWeek.map((day, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                borderRight: index < daysOfWeek.length - 1 ? 1 : 0,\n                borderColor: 'divider'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  borderBottom: 1,\n                  borderColor: 'divider',\n                  textAlign: 'center',\n                  fontWeight: 'bold',\n                  bgcolor: 'grey.100'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: day\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 19\n              }, this), timeSlots.map(slot => {\n                const coursesForSlot = getCoursesForTimeSlot(slot.id, day);\n                return /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    height: 120,\n                    p: 1,\n                    borderBottom: 1,\n                    borderColor: 'divider',\n                    overflow: 'auto'\n                  },\n                  children: coursesForSlot.map(course => renderCourseBlock(course))\n                }, `${day}-${slot.id}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 781,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 17\n            }, this)\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render day view\n  const renderDayView = () => {\n    if (!filteredCourses.length) {\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No schedule data available or no courses match your filters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 9\n      }, this);\n    }\n    const day = daysOfWeek[currentDay];\n    const dayFilteredCourses = filteredCourses.filter(course => course.day_of_week === day);\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [day, \"'s Schedule\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: timeSlots.map(slot => {\n            const coursesForSlot = dayFilteredCourses.filter(course => course.time_slot_id === `TS${slot.id}-${day.substring(0, 3).toUpperCase()}`);\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                elevation: 1,\n                sx: {\n                  p: 2,\n                  borderLeft: 4,\n                  borderColor: coursesForSlot.length > 0 ? 'primary.main' : 'grey.300'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  color: \"textSecondary\",\n                  children: [slot.start, \" - \", slot.end]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 839,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 1\n                  },\n                  children: coursesForSlot.length > 0 ? coursesForSlot.map(course => renderCourseBlock(course)) : /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: \"No courses scheduled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 846,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 842,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 19\n              }, this)\n            }, slot.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Function to render the conflicts section\n  const renderConflicts = () => {\n    const displayConflicts = showResolvedConflicts ? conflicts : conflicts.filter(conflict => !conflict.is_resolved);\n    if (displayConflicts.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mt: 3\n        },\n        children: \"No unresolved conflicts in this schedule.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mt: 3,\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Conflicts (\", displayConflicts.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"small\",\n          onClick: () => setShowResolvedConflicts(!showResolvedConflicts),\n          children: showResolvedConflicts ? 'Hide Resolved' : 'Show Resolved'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: displayConflicts.map(conflict => {\n          var _conflict$time_slot;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 1,\n              sx: {\n                p: 2,\n                borderLeft: 4,\n                borderColor: conflict.is_resolved ? 'success.main' : 'warning.main'\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'flex-start'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    sx: {\n                      fontWeight: 'bold'\n                    },\n                    children: conflict.conflict_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 903,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: conflict.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 906,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Time: \", conflict.day_of_week, \", \", ((_conflict$time_slot = conflict.time_slot) === null || _conflict$time_slot === void 0 ? void 0 : _conflict$time_slot.name) || 'Unknown time slot']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 909,\n                    columnNumber: 21\n                  }, this), conflict.courses && conflict.courses.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mt: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        fontWeight: 'medium'\n                      },\n                      children: \"Affected Courses:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 915,\n                      columnNumber: 25\n                    }, this), conflict.courses.map(course => /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        ml: 2\n                      },\n                      children: [\"\\u2022 \", course.course_name, \" (Prof. \", course.professor_name, \")\"]\n                    }, course.scheduled_course_id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 919,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 914,\n                    columnNumber: 23\n                  }, this), conflict.is_resolved && /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mt: 1,\n                      p: 1,\n                      bgcolor: 'success.light',\n                      borderRadius: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"success.contrastText\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Resolution:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 929,\n                        columnNumber: 27\n                      }, this), \" \", conflict.resolution_notes]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 928,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 927,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 902,\n                  columnNumber: 19\n                }, this), !conflict.is_resolved && /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    size: \"small\",\n                    onClick: () => handleOverrideConflict(conflict.conflict_id),\n                    sx: {\n                      mr: 1\n                    },\n                    children: \"Override\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 937,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    size: \"small\",\n                    onClick: () => handleAcceptConflict(conflict.conflict_id),\n                    children: \"Accept\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 946,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 936,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 15\n            }, this)\n          }, conflict.conflict_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          children: \"Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 985,\n              columnNumber: 26\n            }, this),\n            onClick: handleRefresh,\n            sx: {\n              mr: 2\n            },\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 26\n            }, this),\n            onClick: handleExport,\n            sx: {\n              mr: 2\n            },\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1003,\n              columnNumber: 26\n            }, this),\n            onClick: handleCreateSchedule,\n            children: \"Generate New Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 13\n        }, this), error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 2.4,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"semester-select-label\",\n                  children: \"Semester\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1024,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"semester-select-label\",\n                  value: selectedSemester,\n                  onChange: handleSemesterChange,\n                  label: \"Semester\",\n                  children: semesters.map(semester => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: semester.semester_id,\n                    children: semester.name\n                  }, semester.semester_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1032,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1025,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1023,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 2.4,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"schedule-select-label\",\n                  children: \"Schedule\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1041,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"schedule-select-label\",\n                  value: selectedScheduleId,\n                  onChange: handleScheduleChange,\n                  label: \"Schedule\",\n                  disabled: availableSchedules.length === 0,\n                  children: availableSchedules.map(schedule => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: schedule.schedule_id,\n                    children: [schedule.name, \" \", schedule.is_final ? '(Final)' : '']\n                  }, schedule.schedule_id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1050,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1042,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 2.4,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"department-select-label\",\n                  children: \"Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1059,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"department-select-label\",\n                  value: selectedDepartment,\n                  onChange: handleDepartmentChange,\n                  label: \"Department\",\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"All Departments\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1067,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1066,\n                    columnNumber: 21\n                  }, this), departments.map(department => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: department.department_id,\n                    children: department.name\n                  }, department.department_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1070,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1060,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 2.4,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"program-select-label\",\n                  children: \"Program\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1079,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"program-select-label\",\n                  value: selectedProgram,\n                  onChange: handleProgramChange,\n                  label: \"Program\",\n                  disabled: !selectedDepartment,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"all\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"All Programs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1088,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1087,\n                    columnNumber: 21\n                  }, this), programs.filter(program => !selectedDepartment || program.department_id === selectedDepartment).map(program => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: program.program_id,\n                    children: program.name\n                  }, program.program_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1093,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1080,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 2.4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Search\",\n                variant: \"outlined\",\n                value: searchTerm,\n                onChange: handleSearchChange,\n                placeholder: \"Search courses\",\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                    color: \"action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1109,\n                    columnNumber: 35\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider',\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: viewMode,\n          onChange: handleViewModeChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Week View\",\n            value: \"week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Day View\",\n            value: \"day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 9\n      }, this), viewMode === 'day' && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider',\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: currentDay,\n          onChange: handleDayChange,\n          children: daysOfWeek.map((day, index) => /*#__PURE__*/_jsxDEV(Tab, {\n            label: day,\n            value: index\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 1\n      }, this), viewMode === 'week' ? renderWeekView() : renderDayView(), renderConflicts(), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3,\n          display: 'flex',\n          alignItems: 'center',\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mr: 3,\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 16,\n              height: 16,\n              bgcolor: 'rgba(25, 118, 210, 0.8)',\n              mr: 1,\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Core Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mr: 3,\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 16,\n              height: 16,\n              bgcolor: 'rgba(76, 175, 80, 0.8)',\n              mr: 1,\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1179,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Elective Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mr: 3,\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 16,\n              height: 16,\n              bgcolor: 'rgba(255, 152, 0, 0.8)',\n              mr: 1,\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Overridden Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1189,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(WarningIcon, {\n            sx: {\n              color: 'orange',\n              fontSize: 16,\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1195,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Scheduling Conflict\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1197,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1167,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 7\n    }, this), showGenerateForm && /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showGenerateForm,\n      onClose: () => setShowGenerateForm(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Generate New Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1207,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(GenerateSchedule, {\n          onScheduleGenerated: handleScheduleGenerated,\n          onClose: () => setShowGenerateForm(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1208,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowGenerateForm(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1206,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 974,\n    columnNumber: 5\n  }, this);\n};\n_s(ScheduleView, \"vhYPGlrMwWYxaCzr1+mEjvMyeLQ=\");\n_c = ScheduleView;\nexport default ScheduleView;\nvar _c;\n$RefreshReg$(_c, \"ScheduleView\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Button","Container","Typography","Card","CardContent","FormControl","InputLabel","MenuItem","Select","Grid","Paper","CircularProgress","Alert","AlertTitle","Tabs","Tab","Tooltip","TextField","AddIcon","RefreshIcon","WarningIcon","SearchIcon","GetAppIcon","Dialog","DialogTitle","DialogContent","DialogActions","scheduleService","departmentService","programService","semesterService","GenerateSchedule","jsxDEV","_jsxDEV","ScheduleView","_s","scheduleData","setSchedule","scheduledCourses","setScheduledCourses","filteredCourses","setFilteredCourses","conflicts","setConflicts","departments","setDepartments","programs","setPrograms","semesters","setSemesters","selectedDepartment","setSelectedDepartment","selectedProgram","setSelectedProgram","selectedSemester","setSelectedSemester","searchTerm","setSearchTerm","viewMode","setViewMode","showGenerateForm","setShowGenerateForm","currentDay","setCurrentDay","loading","setLoading","error","setError","showResolvedConflicts","setShowResolvedConflicts","availableSchedules","setAvailableSchedules","selectedScheduleId","setSelectedScheduleId","daysOfWeek","timeSlots","id","name","start","end","normalizeDayName","day","dayMap","fullNames","includes","code","fullName","Object","entries","toUpperCase","toLowerCase","fetchAvailableSchedules","semesterId","data","getSchedulesBySemester","console","log","length","schedule_id","err","loadScheduleById","scheduleId","_scheduleData$courses","getScheduleById","conflictsData","getScheduleConflicts","courses","handleRefresh","queryParams","URLSearchParams","window","location","search","semesterParam","get","refreshParam","setTimeout","fetchData","semestersData","getAllSemesters","departmentsData","getAllDepartments","programsData","getAllPrograms","currentSemester","find","s","is_current","semester_id","getActiveSchedule","filtered","filter","course","department_id","_course$program_ids","program_ids","course_name","course_id","professor_name","handleDepartmentChange","event","deptId","target","value","handleProgramChange","handleSemesterChange","handleScheduleChange","handleSearchChange","handleViewModeChange","newValue","handleDayChange","handleCreateSchedule","handleScheduleGenerated","handleExport","_semesters$find","semesterName","csvContent","Date","toLocaleString","forEach","timeSlotId","time_slot_id","slotNumber","parseInt","replace","timeSlot","ts","row","day_of_week","room","is_core","join","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","getCourseColor","is_override","hasConflict","some","conflict","c","scheduled_course_id","is_resolved","getCoursesForTimeSlot","normalizedDay","courseDayNormalized","dayMatch","slotMatch","time_slot_number","timeslot_id","matches","handleAcceptConflict","conflictId","resolveConflict","action","notes","map","conflict_id","resolution_notes","handleOverrideConflict","renderCourseBlock","courseHasConflict","sx","backgroundColor","color","p","borderRadius","mb","position","cursor","opacity","children","variant","fontWeight","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","display","title","top","right","fontSize","renderWeekView","hasCourses","Array","isArray","hasScheduledCourses","ScheduledCourses","sampleCourse","keys","textAlign","gutterBottom","mt","onClick","overflowX","minWidth","container","item","xs","borderRight","borderColor","height","pt","slot","borderBottom","alignItems","justifyContent","index","bgcolor","coursesForSlot","overflow","renderDayView","dayFilteredCourses","spacing","substring","elevation","borderLeft","renderConflicts","displayConflicts","severity","size","_conflict$time_slot","conflict_type","description","time_slot","ml","mr","minHeight","maxWidth","component","startIcon","md","fullWidth","labelId","onChange","label","semester","disabled","schedule","is_final","department","program","program_id","placeholder","InputProps","endAdornment","flexWrap","width","open","onClose","onScheduleGenerated","_c","$RefreshReg$"],"sources":["C:/Users/shash/Documents/Master's Colleges/UNIVERSITY OF DELAWARE/COURSES/Project/university-scheduler/frontend/src/components/admin/schedule/ScheduleView.tsx"],"sourcesContent":["// src/components/admin/schedules/ScheduleView.tsx\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Grid,\r\n  Paper,\r\n  CircularProgress,\r\n  Alert,\r\n  AlertTitle,\r\n  Tabs,\r\n  Tab,\r\n  Tooltip,\r\n //IconButton,\r\n  TextField\r\n} from '@mui/material';\r\nimport { SelectChangeEvent } from '@mui/material/Select';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\n//import FilterListIcon from '@mui/icons-material/FilterList';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\n//import InfoIcon from '@mui/icons-material/Info';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport GetAppIcon from '@mui/icons-material/GetApp';\r\n//import { useNavigate } from 'react-router-dom';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\n\r\n// Import services\r\nimport scheduleService from '../../../services/scheduleService';\r\nimport departmentService from '../../../services/departmentService';\r\nimport programService from '../../../services/programService';\r\nimport semesterService from '../../../services/semesterService';\r\nimport GenerateSchedule from './GenerateSchedule';\r\n\r\nconst ScheduleView: React.FC = () => {\r\n  //const navigate = useNavigate();\r\n  \r\n  // State variables\r\n  const [scheduleData, setSchedule] = useState<any>(null);\r\n  const [scheduledCourses, setScheduledCourses] = useState<any[]>([]);\r\n  const [filteredCourses, setFilteredCourses] = useState<any[]>([]);\r\n  const [conflicts, setConflicts] = useState<any[]>([]);\r\n  const [departments, setDepartments] = useState<any[]>([]);\r\n  const [programs, setPrograms] = useState<any[]>([]);\r\n  const [semesters, setSemesters] = useState<any[]>([]);\r\n  \r\n  const [selectedDepartment, setSelectedDepartment] = useState<string>('');\r\n  const [selectedProgram, setSelectedProgram] = useState<string>('all'); // Default to 'all' programs\r\n  const [selectedSemester, setSelectedSemester] = useState<string>('');\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [viewMode, setViewMode] = useState<string>('week');\r\n  const [showGenerateForm, setShowGenerateForm] = useState<boolean>(false);\r\n  const [currentDay, setCurrentDay] = useState<number>(0);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showResolvedConflicts, setShowResolvedConflicts] = useState<boolean>(false);\r\n\r\n  // Add state for available schedules and selected schedule\r\n  const [availableSchedules, setAvailableSchedules] = useState<any[]>([]);\r\n  const [selectedScheduleId, setSelectedScheduleId] = useState<string>('');\r\n  \r\n  // Days and time slots for schedule display\r\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\r\n  const timeSlots = [\r\n    { id: 1, name: 'Time Slot 1', start: '09:10', end: '10:05' },\r\n    { id: 2, name: 'Time Slot 2', start: '10:20', end: '11:15' },\r\n    { id: 3, name: 'Time Slot 3', start: '11:30', end: '12:25' },\r\n    { id: 4, name: 'Time Slot 4', start: '12:45', end: '14:05' },\r\n    { id: 5, name: 'Time Slot 5', start: '13:30', end: '14:50' },\r\n    { id: 6, name: 'Time Slot 6', start: '17:30', end: '20:30' },\r\n    { id: 7, name: 'Time Slot 7', start: '18:00', end: '21:00' }\r\n  ];\r\n\r\n  // Add this helper function near the top of your component\r\n  const normalizeDayName = (day: string | undefined | null): string => {\r\n    if (!day) return '';\r\n    \r\n    // Handle short codes\r\n    const dayMap: Record<string, string> = {\r\n      'MON': 'Monday',\r\n      'TUE': 'Tuesday',\r\n      'WED': 'Wednesday',\r\n      'THU': 'Thursday',\r\n      'FRI': 'Friday'\r\n    };\r\n    \r\n    // If it's a short code, convert it\r\n    if (dayMap[day]) {\r\n      return dayMap[day];\r\n    }\r\n    \r\n    // If it's already a full name, return it\r\n    const fullNames = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\r\n    if (fullNames.includes(day)) {\r\n      return day;\r\n    }\r\n    \r\n    // Try to match partial\r\n    for (const [code, fullName] of Object.entries(dayMap)) {\r\n      if (day.toUpperCase().includes(code) || fullName.toLowerCase().includes(day.toLowerCase())) {\r\n        return fullName;\r\n      }\r\n    }\r\n    \r\n    // Default\r\n    return day;\r\n  };\r\n    \r\n  // Add this function to fetch available schedules when semester changes\r\n  const fetchAvailableSchedules = useCallback(async (semesterId: string) => {\r\n    if (!semesterId) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      const data = await scheduleService.getSchedulesBySemester(semesterId);\r\n      console.log(`Found ${data.length} schedules for semester ${semesterId}`);\r\n      setAvailableSchedules(data);\r\n      \r\n      // If we have schedules and none is selected yet, select the first one\r\n      if (data.length > 0 && !selectedScheduleId) {\r\n        setSelectedScheduleId(data[0].schedule_id);\r\n        console.log(`Auto-selecting first schedule: ${data[0].schedule_id}`);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching schedules for semester:', err);\r\n      setError('Failed to load schedules for this semester');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [selectedScheduleId]);\r\n\r\n  // Function to load a specific schedule by ID\r\n  const loadScheduleById = useCallback(async (scheduleId: string) => {\r\n    if (!scheduleId) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      console.log(`Loading specific schedule: ${scheduleId}`);\r\n      const scheduleData = await scheduleService.getScheduleById(scheduleId);\r\n      const conflictsData = await scheduleService.getScheduleConflicts(scheduleId);\r\n      \r\n      console.log(`Loaded schedule with ${scheduleData.courses?.length || 0} courses`);\r\n      \r\n      setSchedule(scheduleData);\r\n      setScheduledCourses(scheduleData.courses || []);\r\n      setFilteredCourses(scheduleData.courses || []);\r\n      setConflicts(conflictsData);\r\n    } catch (err) {\r\n      console.error(`Error loading schedule ${scheduleId}:`, err);\r\n      setError('Failed to load the selected schedule');\r\n      setSchedule(null);\r\n      setScheduledCourses([]);\r\n      setFilteredCourses([]);\r\n      setConflicts([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  \r\n  const handleRefresh = useCallback(async () => {\r\n    if (!selectedSemester) return;\r\n  \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log(`Refreshing schedule data for semester: ${selectedSemester}`);\r\n      \r\n      // First, refresh the list of available schedules\r\n      console.log(`Fetching available schedules for semester: ${selectedSemester}`);\r\n      await fetchAvailableSchedules(selectedSemester);\r\n      \r\n      // If we have a selected schedule, reload it\r\n      if (selectedScheduleId) {\r\n        console.log(`Reloading selected schedule: ${selectedScheduleId}`);\r\n        await loadScheduleById(selectedScheduleId);\r\n      } else {\r\n        console.log('No schedule selected, will try to select one from available schedules');\r\n        // If we don't have a selected schedule but we've just loaded available schedules,\r\n        // the fetchAvailableSchedules function will auto-select the first one\r\n      }\r\n      \r\n      // Reset filters\r\n      setSelectedDepartment('');\r\n      setSelectedProgram('all');\r\n      \r\n    } catch (err) {\r\n      console.error(\"Error refreshing data:\", err);\r\n      setError(\"Failed to refresh data. Please ensure schedules exist for this semester.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n      \r\n  }, [selectedSemester, selectedScheduleId, fetchAvailableSchedules, loadScheduleById]); // ADD THESE DEPENDENCIES\r\n\r\n  // Add this effect to check URL parameters\r\n  useEffect(() => {\r\n      // Check URL params for direct navigation from schedule generation\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const semesterParam = queryParams.get('semester');\r\n    const refreshParam = queryParams.get('refresh');\r\n\r\n    if (semesterParam) {\r\n      console.log(`URL has semester param: ${semesterParam}, setting as selected`);\r\n      setSelectedSemester(semesterParam);\r\n      \r\n      // If refresh=true is in the URL, force a refresh\r\n      if (refreshParam === 'true') {\r\n        // Use setTimeout to ensure the semester state is updated first\r\n        setTimeout(() => handleRefresh(), 500);\r\n      }\r\n    }\r\n  }, [handleRefresh]);  // Empty dependency array means this runs once on component mount\r\n\r\n  // Initial data loading\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Get semesters\r\n        const semestersData = await semesterService.getAllSemesters();\r\n        setSemesters(semestersData);\r\n        \r\n        // Get departments and programs\r\n        const departmentsData = await departmentService.getAllDepartments();\r\n        const programsData = await programService.getAllPrograms();\r\n        \r\n        setDepartments(departmentsData);\r\n        setPrograms(programsData);\r\n        \r\n        // If we have semesters, try to get a schedule\r\n        if (semestersData.length > 0) {\r\n          // Find the current semester or use the first one\r\n          const currentSemester = semestersData.find((s: any) => s.is_current) || semestersData[0];\r\n          setSelectedSemester(currentSemester.semester_id);\r\n          \r\n          try {\r\n            // Try to get the active schedule for this semester\r\n            const scheduleData = await scheduleService.getActiveSchedule(currentSemester.semester_id);\r\n            const conflictsData = await scheduleService.getScheduleConflicts(scheduleData.schedule_id);\r\n            \r\n            setSchedule(scheduleData);\r\n            setScheduledCourses(scheduleData.courses || []);\r\n            setFilteredCourses(scheduleData.courses || []);\r\n            setConflicts(conflictsData);\r\n          } catch (err) {\r\n            // No schedule exists yet, show message to create one\r\n            console.log('No active schedule found:', err);\r\n            setError('No active schedule found for the selected semester. Please generate a new schedule.');\r\n          }\r\n        } else {\r\n          setError('No semesters found. Please create a semester before generating schedules.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching initial data:', err);\r\n        setError('Failed to load data. Please ensure your backend server is running.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Fetch schedule when semester changes\r\n  /*\r\n  useEffect(() => {\r\n    if (selectedSemester) {\r\n      const fetchSchedule = async () => {\r\n        try {\r\n          setLoading(true);\r\n          \r\n          const scheduleData = await scheduleService.getActiveSchedule(selectedSemester);\r\n          const conflictsData = await scheduleService.getScheduleConflicts(scheduleData.schedule_id);\r\n          \r\n          setSchedule(scheduleData);\r\n          setScheduledCourses(scheduleData.courses || []);\r\n          setFilteredCourses(scheduleData.courses || []);\r\n          setConflicts(conflictsData);\r\n          \r\n          setLoading(false);\r\n        } catch (err) {\r\n          console.error('Error fetching schedule for semester:', err);\r\n          setError('Failed to load schedule for selected semester.');\r\n          setLoading(false);\r\n        }\r\n      };\r\n      \r\n      fetchSchedule();\r\n    }\r\n  }, [selectedSemester]);*/\r\n\r\n  // Fetch schedules when semester changes\r\n  useEffect(() => {\r\n    if (selectedSemester) {\r\n      fetchAvailableSchedules(selectedSemester);\r\n    }\r\n  }, [selectedSemester, fetchAvailableSchedules]);\r\n  \r\n  // Load the selected schedule when selectedScheduleId changes\r\n  useEffect(() => {\r\n    if (selectedScheduleId) {\r\n      loadScheduleById(selectedScheduleId);\r\n    }\r\n  }, [selectedScheduleId, loadScheduleById]);\r\n  \r\n  // Apply filters when department, program, or search term changes\r\n  useEffect(() => {\r\n    if (!scheduledCourses.length) return;\r\n    \r\n    let filtered = [...scheduledCourses];\r\n    \r\n    // Filter by department\r\n    if (selectedDepartment) {\r\n      filtered = filtered.filter(course => \r\n        course.department_id === selectedDepartment\r\n      );\r\n    }\r\n    \r\n    // Filter by program - if \"all\" is selected, don't filter by program\r\n    if (selectedProgram && selectedProgram !== 'all') {\r\n      filtered = filtered.filter(course => \r\n        course.program_ids?.includes(selectedProgram)\r\n      );\r\n    }\r\n    \r\n    // Filter by search term\r\n    if (searchTerm) {\r\n      const search = searchTerm.toLowerCase();\r\n      filtered = filtered.filter(course => \r\n        course.course_name.toLowerCase().includes(search) ||\r\n        course.course_id.toLowerCase().includes(search) ||\r\n        (course.professor_name && course.professor_name.toLowerCase().includes(search))\r\n      );\r\n    }\r\n    \r\n    setFilteredCourses(filtered);\r\n  }, [scheduledCourses, selectedDepartment, selectedProgram, searchTerm]);\r\n  \r\n  const handleDepartmentChange = (event: SelectChangeEvent) => {\r\n    const deptId = event.target.value as string;\r\n    setSelectedDepartment(deptId);\r\n    \r\n    // Reset program selection when department changes, but set to \"all\" instead of empty\r\n    setSelectedProgram('all');\r\n  };\r\n  \r\n  const handleProgramChange = (event: SelectChangeEvent) => {\r\n    setSelectedProgram(event.target.value as string);\r\n    \r\n    // If user selects \"all programs\", we need to update the filtered courses\r\n    // to show all courses for the selected department\r\n    if (event.target.value === 'all') {\r\n      let filtered = [...scheduledCourses];\r\n      \r\n      // Keep department filter if selected\r\n      if (selectedDepartment) {\r\n        filtered = filtered.filter(course => \r\n          course.department_id === selectedDepartment\r\n        );\r\n      }\r\n      \r\n      // Apply search filter if any\r\n      if (searchTerm) {\r\n        const search = searchTerm.toLowerCase();\r\n        filtered = filtered.filter(course => \r\n          course.course_name.toLowerCase().includes(search) ||\r\n          course.course_id.toLowerCase().includes(search) ||\r\n          (course.professor_name && course.professor_name.toLowerCase().includes(search))\r\n        );\r\n      }\r\n      \r\n      setFilteredCourses(filtered);\r\n    }\r\n  };\r\n  \r\n  const handleSemesterChange = (event: SelectChangeEvent) => {\r\n    setSelectedSemester(event.target.value as string);\r\n  };\r\n\r\n  // Add handler for schedule selection\r\n  const handleScheduleChange = (event: SelectChangeEvent) => {\r\n    console.log(`Selected schedule changed to: ${event.target.value}`);\r\n    setSelectedScheduleId(event.target.value as string);\r\n  };\r\n  \r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n  \r\n  const handleViewModeChange = (event: React.SyntheticEvent, newValue: string) => {\r\n    setViewMode(newValue);\r\n  };\r\n  \r\n  const handleDayChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setCurrentDay(newValue);\r\n  };\r\n  \r\n  const handleCreateSchedule = () => {\r\n    setShowGenerateForm(true);\r\n  };\r\n\r\n  const handleScheduleGenerated = (semesterId: string) => {\r\n    console.log(`Schedule generated for semester: ${semesterId}, refreshing data`);\r\n    setSelectedSemester(semesterId);\r\n    setShowGenerateForm(false);\r\n    // Reload the schedule data\r\n    setTimeout(() => {\r\n      handleRefresh();\r\n    }, 500);\r\n  };\r\n\r\n\r\n  const handleExport = () => {\r\n    if (!scheduleData || !filteredCourses.length) {\r\n      setError(\"No schedule data available to export\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Create a formatted schedule for export\r\n      const semesterName = semesters.find(s => s.semester_id === selectedSemester)?.name || 'Current Semester';\r\n      \r\n      // Create header rows\r\n      let csvContent = \"Course Schedule - \" + semesterName + \"\\n\";\r\n      csvContent += \"Generated on: \" + new Date().toLocaleString() + \"\\n\\n\";\r\n      \r\n      // Column headers\r\n      csvContent += \"Course ID,Course Name,Professor,Day,Time,Room,Type\\n\";\r\n      \r\n      // Add data rows\r\n      filteredCourses.forEach(course => {\r\n        const timeSlotId = course.time_slot_id;\r\n        const slotNumber = parseInt(timeSlotId.replace(/[^\\d]/g, ''));\r\n        const timeSlot = timeSlots.find(ts => ts.id === slotNumber) || { start: \"\", end: \"\" };\r\n        \r\n        const row = [\r\n          course.course_id,\r\n          course.course_name,\r\n          course.professor_name || 'TBA',\r\n          course.day_of_week,\r\n          `${timeSlot.start}-${timeSlot.end}`,\r\n          course.room || 'TBA',\r\n          course.is_core ? 'Core' : 'Elective'\r\n        ];\r\n        \r\n        csvContent += row.join(',') + '\\n';\r\n      });\r\n      \r\n      // Create and download the file\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.setAttribute('href', url);\r\n      link.setAttribute('download', `schedule_${semesterName.replace(/\\s+/g, '_')}.csv`);\r\n      link.style.visibility = 'hidden';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (err) {\r\n      console.error(\"Error exporting schedule:\", err);\r\n      setError(\"Failed to export schedule\");\r\n    }\r\n  };\r\n  \r\n  // Function to determine background color for course blocks\r\n  const getCourseColor = (course: any) => {\r\n    if (course.is_override) return 'rgba(255, 152, 0, 0.8)'; // Orange for overrides\r\n    if (course.is_core) return 'rgba(25, 118, 210, 0.8)'; // Blue for core courses\r\n    return 'rgba(76, 175, 80, 0.8)'; // Green for electives\r\n  };\r\n\r\n  // Helper function to check if a course has conflicts\r\n  const hasConflict = (course: any) => {\r\n    return conflicts.some(conflict => \r\n      conflict.courses.some((c: any) => c.scheduled_course_id === course.scheduled_course_id) &&\r\n      !conflict.is_resolved\r\n    );\r\n  };\r\n\r\n  // Function to find courses for a specific timeslot and day\r\n  //const getCoursesForTimeSlot = (timeSlotId: number, day: string) => {\r\n  const getCoursesForTimeSlot = (slotNumber: number, day: string): any[] => {\r\n    if (!scheduleData || !scheduleData.courses || scheduleData.courses.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    const normalizedDay = normalizeDayName(day);\r\n    console.log(`Looking for courses for slot ${slotNumber} on ${normalizedDay}`);\r\n    \r\n    return scheduleData.courses.filter((course: any) => {\r\n      // Try to match the day of week\r\n      const courseDayNormalized = normalizeDayName(course.day_of_week);\r\n      const dayMatch = courseDayNormalized === normalizedDay;\r\n      \r\n      // Try multiple ways to match the time slot\r\n      let slotMatch = false;\r\n      \r\n      // Match by time_slot_number if available\r\n      if (course.time_slot_number && course.time_slot_number === slotNumber) {\r\n        slotMatch = true;\r\n      }\r\n      \r\n      // Match by timeslot_id or time_slot_id which has the format TSn-DAY\r\n      const timeSlotId = course.timeslot_id || course.time_slot_id || '';\r\n      if (timeSlotId.includes(`TS${slotNumber}`)) {\r\n        slotMatch = true;\r\n      }\r\n      \r\n      const matches = dayMatch && slotMatch;\r\n      if (matches) {\r\n        console.log(`Found match: Course ${course.course_name} for ${day} in slot ${slotNumber}`);\r\n      }\r\n      \r\n      return matches;\r\n    });\r\n\r\n  };\r\n\r\n  /*  \r\n  // Create a unique ID for detailed logging\r\n  const logId = Math.floor(Math.random() * 10000);\r\n  \r\n  console.log(`[${logId}] Looking for courses for day=\"${day}\", timeSlot=${timeSlotId}`);\r\n  console.log(`[${logId}] Number of filtered courses to search: ${filteredCourses.length}`);\r\n  \r\n  if (filteredCourses.length > 0) {\r\n    // Log a sample course to see its structure\r\n    console.log(`[${logId}] Sample course:`, {\r\n      id: filteredCourses[0].course_id,\r\n      day: filteredCourses[0].day_of_week,\r\n      slot: filteredCourses[0].time_slot_id || filteredCourses[0].timeslot_id\r\n    });\r\n  }\r\n\r\n  // Multiple ways to try to match the day\r\n  const dayMatchers = [\r\n    // Exact match\r\n    (courseDay: string) => courseDay === day,\r\n    // Normalized match\r\n    (courseDay: string) => normalizeDayName(courseDay) === day,\r\n    // Substring match (MON in Monday, etc.)\r\n    (courseDay: string) => day.toUpperCase().includes(courseDay.toUpperCase()) || courseDay.toUpperCase().includes(day.substring(0, 3).toUpperCase())\r\n  ];\r\n  \r\n  // Multiple ways to try to match the time slot\r\n  const slotMatchers = [\r\n    // Exact formatted match\r\n    (slot: string) => slot === `TS${timeSlotId}-${day.substring(0, 3).toUpperCase()}`,\r\n    // Just check if it has the slot number\r\n    (slot: string) => slot.includes(`TS${timeSlotId}`),\r\n    // Check if it starts with the slot number\r\n    (slot: string) => slot.startsWith(`TS${timeSlotId}`),\r\n    // Just check the numeric part\r\n    (slot: string) => {\r\n      const match = slot.match(/TS(\\d+)/);\r\n      return match && parseInt(match[1]) === timeSlotId;\r\n    }\r\n  ];\r\n  \r\n  // Try all possible combinations of matchers\r\n  const matchedCourses = filteredCourses.filter(course => {\r\n    // Use either timeslot_id or time_slot_id, whichever exists\r\n    const slotId = course.timeslot_id || course.time_slot_id;\r\n    const courseDay = course.day_of_week;\r\n    \r\n    // If we're missing critical data, skip this course\r\n    if (!slotId || !courseDay) return false;\r\n    \r\n    // Try each day matcher\r\n    const dayMatched = dayMatchers.some(matcher => matcher(courseDay));\r\n    // Try each slot matcher\r\n    const slotMatched = slotMatchers.some(matcher => matcher(slotId));\r\n    \r\n    // Both must match\r\n    const matched = dayMatched && slotMatched;\r\n    \r\n    if (matched) {\r\n      console.log(`[${logId}] Found matching course:`, {\r\n        id: course.course_id,\r\n        day: courseDay,\r\n        slot: slotId\r\n      });\r\n    }\r\n    \r\n    return matched;\r\n  });\r\n  \r\n  console.log(`[${logId}] Found ${matchedCourses.length} matching courses`);\r\n  return matchedCourses;\r\n  }; */\r\n\r\n\r\n  // Function to accept a conflict\r\n  const handleAcceptConflict = async (conflictId: string) => {\r\n    try {\r\n      await scheduleService.resolveConflict(conflictId, {\r\n        action: 'ACCEPT',\r\n        notes: 'Conflict accepted by administrator'\r\n      });\r\n      \r\n      // Update local state\r\n      setConflicts(conflicts.map(conflict => \r\n        conflict.conflict_id === conflictId \r\n          ? { ...conflict, is_resolved: true, resolution_notes: 'Conflict accepted by administrator' }\r\n          : conflict\r\n      ));\r\n    } catch (err) {\r\n      console.error(\"Error accepting conflict:\", err);\r\n      setError(\"Failed to accept conflict\");\r\n    }\r\n  };\r\n\r\n  // Function to override a conflict\r\n  const handleOverrideConflict = async (conflictId: string) => {\r\n    // In a real implementation, this would open a dialog to collect details\r\n    try {\r\n      // Simplified implementation for now\r\n      setConflicts(conflicts.map(conflict => \r\n        conflict.conflict_id === conflictId \r\n          ? { ...conflict, is_resolved: true, resolution_notes: 'Conflict overridden by administrator' }\r\n          : conflict\r\n      ));\r\n    } catch (err) {\r\n      console.error(\"Error overriding conflict:\", err);\r\n      setError(\"Failed to override conflict\");\r\n    }\r\n  };\r\n\r\n  // Function to render a course block in the timetable\r\n  const renderCourseBlock = (course: any) => {\r\n    const courseHasConflict = hasConflict(course);\r\n    \r\n    return (\r\n      <Box\r\n        key={course.scheduled_course_id}\r\n        sx={{\r\n          backgroundColor: getCourseColor(course),\r\n          color: 'white',\r\n          p: 1,\r\n          borderRadius: 1,\r\n          mb: 1,\r\n          position: 'relative',\r\n          cursor: 'pointer',\r\n          '&:hover': {\r\n            opacity: 0.9,\r\n          }\r\n        }}\r\n      >\r\n        <Typography variant=\"subtitle2\" fontWeight=\"bold\" noWrap>\r\n          {course.course_name}\r\n        </Typography>\r\n        <Typography variant=\"caption\" display=\"block\" noWrap>\r\n          {course.course_id}\r\n        </Typography>\r\n        <Typography variant=\"caption\" display=\"block\" noWrap>\r\n          Prof. {course.professor_name || 'TBA'}\r\n        </Typography>\r\n        \r\n        {courseHasConflict && (\r\n          <Tooltip title=\"This course has scheduling conflicts\">\r\n            <WarningIcon \r\n              sx={{ \r\n                position: 'absolute', \r\n                top: 5, \r\n                right: 5, \r\n                color: 'orange',\r\n                fontSize: 20\r\n              }} \r\n            />\r\n          </Tooltip>\r\n        )}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  // Render weekly view\r\n  const renderWeekView = () => {\r\n    console.log('Rendering week view with:', {\r\n      filteredCourses: filteredCourses.length,\r\n      scheduledCourses: scheduledCourses.length,\r\n      scheduleData: scheduleData ? {\r\n        id: scheduleData.schedule_id,\r\n        hasCourses: Array.isArray(scheduleData.courses) && scheduleData.courses.length > 0,\r\n        hasScheduledCourses: Array.isArray(scheduleData.ScheduledCourses) && scheduleData.ScheduledCourses.length > 0\r\n      } : 'null',\r\n      sampleCourse: filteredCourses.length > 0 ? {\r\n        course_id: filteredCourses[0].course_id,\r\n        day_of_week: filteredCourses[0].day_of_week,\r\n        time_slot_id: filteredCourses[0].time_slot_id\r\n      } : 'No courses'\r\n    });\r\n  \r\n    if (!filteredCourses || filteredCourses.length === 0) {\r\n      console.log('No filtered courses available. All scheduled courses:', scheduledCourses.length);\r\n      console.log('Schedule object:', scheduleData ? Object.keys(scheduleData) : 'null');\r\n      \r\n      // Provide a more informative message with a button to generate courses\r\n      return (\r\n        <Paper sx={{ p: 3, textAlign: 'center' }}>\r\n          <Typography gutterBottom>No courses found for this schedule. Generate courses or select a different schedule.</Typography>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            sx={{ mt: 2 }}\r\n            onClick={handleCreateSchedule}\r\n          >\r\n            Generate New Schedule\r\n          </Button>\r\n        </Paper>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Paper sx={{ mt: 2, overflowX: 'auto' }}>\r\n        <Box sx={{ minWidth: 800 }}>\r\n          <Grid container>\r\n            {/* Time slots column */}\r\n            <Grid item xs={1}>\r\n              <Box sx={{ borderRight: 1, borderColor: 'divider', height: '100%', pt: 7 }}>\r\n                {timeSlots.map(slot => (\r\n                  <Box \r\n                    key={slot.id} \r\n                    sx={{ \r\n                      height: 120, \r\n                      p: 1, \r\n                      borderBottom: 1, \r\n                      borderColor: 'divider',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center'\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"caption\">\r\n                      {slot.start} - {slot.end}\r\n                    </Typography>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </Grid>\r\n\r\n            {/* Days columns */}\r\n            {daysOfWeek.map((day, index) => (\r\n              <Grid item xs key={day}>\r\n                <Box sx={{ borderRight: index < daysOfWeek.length - 1 ? 1 : 0, borderColor: 'divider' }}>\r\n                  {/* Day header */}\r\n                  <Box \r\n                    sx={{ \r\n                      p: 2, \r\n                      borderBottom: 1, \r\n                      borderColor: 'divider',\r\n                      textAlign: 'center',\r\n                      fontWeight: 'bold',\r\n                      bgcolor: 'grey.100'\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"subtitle1\">{day}</Typography>\r\n                  </Box>\r\n\r\n                  {/* Time slots */}\r\n                  {timeSlots.map(slot => {\r\n                    const coursesForSlot = getCoursesForTimeSlot(slot.id, day);\r\n\r\n                    return (\r\n                      <Box \r\n                        key={`${day}-${slot.id}`}\r\n                        sx={{ \r\n                          height: 120, \r\n                          p: 1, \r\n                          borderBottom: 1, \r\n                          borderColor: 'divider',\r\n                          overflow: 'auto'\r\n                        }}\r\n                      >\r\n                        {coursesForSlot.map(course => renderCourseBlock(course))}\r\n                      </Box>\r\n                    );\r\n                  })}\r\n                </Box>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  // Render day view\r\n  const renderDayView = () => {\r\n    if (!filteredCourses.length) {\r\n      return (\r\n        <Paper sx={{ p: 3, textAlign: 'center' }}>\r\n          <Typography>No schedule data available or no courses match your filters.</Typography>\r\n        </Paper>\r\n      );\r\n    }\r\n\r\n    const day = daysOfWeek[currentDay];\r\n    const dayFilteredCourses = filteredCourses.filter(course => course.day_of_week === day);\r\n\r\n    return (\r\n      <Paper sx={{ mt: 2 }}>\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {day}'s Schedule\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            {timeSlots.map(slot => {\r\n              const coursesForSlot = dayFilteredCourses.filter(course => \r\n                course.time_slot_id === `TS${slot.id}-${day.substring(0, 3).toUpperCase()}`\r\n              );\r\n\r\n              return (\r\n                <Grid item xs={12} key={slot.id}>\r\n                  <Paper \r\n                    elevation={1} \r\n                    sx={{ \r\n                      p: 2, \r\n                      borderLeft: 4, \r\n                      borderColor: coursesForSlot.length > 0 ? 'primary.main' : 'grey.300'\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                      {slot.start} - {slot.end}\r\n                    </Typography>\r\n                    <Box sx={{ mt: 1 }}>\r\n                      {coursesForSlot.length > 0 ? (\r\n                        coursesForSlot.map(course => renderCourseBlock(course))\r\n                      ) : (\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          No courses scheduled\r\n                        </Typography>\r\n                      )}\r\n                    </Box>\r\n                  </Paper>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  // Function to render the conflicts section\r\n  const renderConflicts = () => {\r\n    const displayConflicts = showResolvedConflicts \r\n      ? conflicts \r\n      : conflicts.filter(conflict => !conflict.is_resolved);\r\n    \r\n    if (displayConflicts.length === 0) {\r\n      return (\r\n        <Alert severity=\"success\" sx={{ mt: 3 }}>\r\n          No unresolved conflicts in this schedule.\r\n        </Alert>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <Paper sx={{ mt: 3, p: 2 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n          <Typography variant=\"h6\">\r\n            Conflicts ({displayConflicts.length})\r\n          </Typography>\r\n          <Button \r\n            variant=\"outlined\" \r\n            size=\"small\"\r\n            onClick={() => setShowResolvedConflicts(!showResolvedConflicts)}\r\n          >\r\n            {showResolvedConflicts ? 'Hide Resolved' : 'Show Resolved'}\r\n          </Button>\r\n        </Box>\r\n        \r\n        <Grid container spacing={2}>\r\n          {displayConflicts.map(conflict => (\r\n            <Grid item xs={12} key={conflict.conflict_id}>\r\n              <Paper \r\n                elevation={1} \r\n                sx={{ \r\n                  p: 2, \r\n                  borderLeft: 4, \r\n                  borderColor: conflict.is_resolved ? 'success.main' : 'warning.main'\r\n                }}\r\n              >\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\r\n                      {conflict.conflict_type}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {conflict.description}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Time: {conflict.day_of_week}, {conflict.time_slot?.name || 'Unknown time slot'}\r\n                    </Typography>\r\n                    \r\n                    {conflict.courses && conflict.courses.length > 0 && (\r\n                      <Box sx={{ mt: 1 }}>\r\n                        <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                          Affected Courses:\r\n                        </Typography>\r\n                        {conflict.courses.map((course: any) => (\r\n                          <Typography key={course.scheduled_course_id} variant=\"body2\" sx={{ ml: 2 }}>\r\n                            • {course.course_name} (Prof. {course.professor_name})\r\n                          </Typography>\r\n                        ))}\r\n                      </Box>\r\n                    )}\r\n                    \r\n                    {conflict.is_resolved && (\r\n                      <Box sx={{ mt: 1, p: 1, bgcolor: 'success.light', borderRadius: 1 }}>\r\n                        <Typography variant=\"body2\" color=\"success.contrastText\">\r\n                          <strong>Resolution:</strong> {conflict.resolution_notes}\r\n                        </Typography>\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n                  \r\n                  {!conflict.is_resolved && (\r\n                    <Box>\r\n                      <Button \r\n                        variant=\"outlined\" \r\n                        color=\"primary\" \r\n                        size=\"small\" \r\n                        onClick={() => handleOverrideConflict(conflict.conflict_id)}\r\n                        sx={{ mr: 1 }}\r\n                      >\r\n                        Override\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => handleAcceptConflict(conflict.conflict_id)}\r\n                      >\r\n                        Accept\r\n                      </Button>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Box sx={{ mt: 4, mb: 4 }}>\r\n        {/* Header */}\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n          <Typography variant=\"h4\" component=\"h1\">\r\n            Schedule\r\n          </Typography>\r\n          <Box>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<RefreshIcon />}\r\n              onClick={handleRefresh}\r\n              sx={{ mr: 2 }}\r\n            >\r\n              Refresh\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<GetAppIcon />}\r\n              onClick={handleExport}\r\n              sx={{ mr: 2 }}\r\n            >\r\n              Export\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AddIcon />}\r\n              onClick={handleCreateSchedule}\r\n            >\r\n              Generate New Schedule\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        \r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n            <AlertTitle>Error</AlertTitle>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        {/* Filters */}\r\n        <Card sx={{ mb: 4 }}>\r\n          <CardContent>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item xs={12} md={2.4}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"semester-select-label\">Semester</InputLabel>\r\n                  <Select\r\n                    labelId=\"semester-select-label\"\r\n                    value={selectedSemester}\r\n                    onChange={handleSemesterChange}\r\n                    label=\"Semester\"\r\n                  >\r\n                    {semesters.map((semester: any) => (\r\n                      <MenuItem key={semester.semester_id} value={semester.semester_id}>\r\n                        {semester.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={2.4}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"schedule-select-label\">Schedule</InputLabel>\r\n                  <Select\r\n                    labelId=\"schedule-select-label\"\r\n                    value={selectedScheduleId}\r\n                    onChange={handleScheduleChange}\r\n                    label=\"Schedule\"\r\n                    disabled={availableSchedules.length === 0}\r\n                  >\r\n                    {availableSchedules.map((schedule) => (\r\n                      <MenuItem key={schedule.schedule_id} value={schedule.schedule_id}>\r\n                        {schedule.name} {schedule.is_final ? '(Final)' : ''}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={2.4}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"department-select-label\">Department</InputLabel>\r\n                  <Select\r\n                    labelId=\"department-select-label\"\r\n                    value={selectedDepartment}\r\n                    onChange={handleDepartmentChange}\r\n                    label=\"Department\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>All Departments</em>\r\n                    </MenuItem>\r\n                    {departments.map((department) => (\r\n                      <MenuItem key={department.department_id} value={department.department_id}>\r\n                        {department.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={2.4}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"program-select-label\">Program</InputLabel>\r\n                  <Select\r\n                    labelId=\"program-select-label\"\r\n                    value={selectedProgram}\r\n                    onChange={handleProgramChange}\r\n                    label=\"Program\"\r\n                    disabled={!selectedDepartment}\r\n                  >\r\n                    <MenuItem value=\"all\">\r\n                      <em>All Programs</em>\r\n                    </MenuItem>\r\n                    {programs\r\n                      .filter(program => !selectedDepartment || program.department_id === selectedDepartment)\r\n                      .map((program) => (\r\n                        <MenuItem key={program.program_id} value={program.program_id}>\r\n                          {program.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={2.4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Search\"\r\n                  variant=\"outlined\"\r\n                  value={searchTerm}\r\n                  onChange={handleSearchChange}\r\n                  placeholder=\"Search courses\"\r\n                  InputProps={{\r\n                    endAdornment: <SearchIcon color=\"action\" />\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        {/* View Mode Tabs */}\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\r\n        <Tabs value={viewMode} onChange={handleViewModeChange}>\r\n\r\n<Tab label=\"Week View\" value=\"week\" />\r\n\r\n<Tab label=\"Day View\" value=\"day\" />\r\n\r\n</Tabs>\r\n\r\n</Box>\r\n\r\n\r\n\r\n{/* Day Selection Tabs (for Day View) */}\r\n\r\n{viewMode === 'day' && (\r\n\r\n<Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\r\n\r\n<Tabs value={currentDay} onChange={handleDayChange}>\r\n\r\n  {daysOfWeek.map((day, index) => (\r\n\r\n    <Tab key={day} label={day} value={index} />\r\n\r\n  ))}\r\n\r\n</Tabs>\r\n\r\n</Box>\r\n\r\n)}\r\n\r\n\r\n\r\n{/* Schedule Display */}\r\n\r\n{viewMode === 'week' ? renderWeekView() : renderDayView()}\r\n\r\n\r\n\r\n{/* Conflicts */}\r\n\r\n{renderConflicts()}\r\n\r\n\r\n\r\n{/* Legend */}\r\n\r\n<Box sx={{ mt: 3, display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\r\n\r\n<Box sx={{ display: 'flex', alignItems: 'center', mr: 3, mb: 1 }}>\r\n\r\n<Box sx={{ width: 16, height: 16, bgcolor: 'rgba(25, 118, 210, 0.8)', mr: 1, borderRadius: 1 }} />\r\n\r\n<Typography variant=\"caption\">Core Course</Typography>\r\n\r\n</Box>\r\n\r\n<Box sx={{ display: 'flex', alignItems: 'center', mr: 3, mb: 1 }}>\r\n\r\n<Box sx={{ width: 16, height: 16, bgcolor: 'rgba(76, 175, 80, 0.8)', mr: 1, borderRadius: 1 }} />\r\n\r\n<Typography variant=\"caption\">Elective Course</Typography>\r\n\r\n</Box>\r\n\r\n<Box sx={{ display: 'flex', alignItems: 'center', mr: 3, mb: 1 }}>\r\n\r\n<Box sx={{ width: 16, height: 16, bgcolor: 'rgba(255, 152, 0, 0.8)', mr: 1, borderRadius: 1 }} />\r\n\r\n<Typography variant=\"caption\">Overridden Course</Typography>\r\n\r\n</Box>\r\n\r\n<Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n\r\n<WarningIcon sx={{ color: 'orange', fontSize: 16, mr: 1 }} />\r\n\r\n<Typography variant=\"caption\">Scheduling Conflict</Typography>\r\n\r\n</Box>\r\n\r\n</Box>\r\n\r\n</Box>\r\n\r\n{showGenerateForm && (\r\n  <Dialog open={showGenerateForm} onClose={() => setShowGenerateForm(false)} maxWidth=\"md\" fullWidth>\r\n    <DialogTitle>Generate New Schedule</DialogTitle>\r\n    <DialogContent>\r\n      <GenerateSchedule \r\n        onScheduleGenerated={handleScheduleGenerated} \r\n        onClose={() => setShowGenerateForm(false)}\r\n      />\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={() => setShowGenerateForm(false)}>Cancel</Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n)}\r\n\r\n</Container>\r\n\r\n\r\n\r\n);\r\n\r\n};\r\n\r\nexport default ScheduleView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}